{
    "from": "google",
    "scholar_id": "IAu3dXI8yqkJ",
    "detail_id": null,
    "title": "Judging LLM-as-a-Judge with MT-B",
    "abstract": "Evaluating large language model (LLM) based chat assistants is challenging due to their broad capabilities and the inadequacy of existing benchmarks in measuring human preferences. To address this, we explore using strong LLMs as judges to evaluate these models on more open-ended questions. We examine the usage and limitations of LLM-as-a-judge, including position, verbosity, and self-enhancement biases, as well as limited reasoning ability, and propose solutions to mitigate some of them. We then verify the agreement between LLM judges and human preferences by introducing two benchmarks: MT-bench, a multi-turn question set; and Chatbot Arena, a crowdsourced battle platform. Our results reveal that strong LLM judges like GPT-4 can match both controlled and crowdsourced human preferences well, achieving over 80% agreement, the same level of agreement between humans. Hence, LLM-as-a-judge is a scalable and explainable way to approximate human preferences, which are otherwise very expensive to obtain. Additionally, we show our benchmark and traditional benchmarks complement each other by evaluating several variants of LLaMA and Vicuna. The MT-bench questions, 3K expert votes, and 30K conversations with human preferences are publicly available at https: //github.com/lm-sys/FastChat/tree/main/fastchat/llm_judge.",
    "bib_name": "JudgingLLM2",
    "md_text": "# Judging LLM-as-a-Judge with MT-Bench and Chatbot Arena\nLianmin Zheng1\u2217 Wei-Lin Chiang1\u2217 Ying Sheng4\u2217 Siyuan Zhuang1\nZhanghao Wu1 Yonghao Zhuang3 Zi Lin2 Zhuohan Li1 Dacheng Li13\n1 UC Berkeley 2 UC San Diego 3 Carnegie Mellon University 4 Stanford 5 MBZUAI\n# Abstract\nEvaluating large language model (LLM) based chat assistants is challenging due to their broad capabilities and the inadequacy of existing benchmarks in measuring human preferences. To address this, we explore using strong LLMs as judges to evaluate these models on more open-ended questions. We examine the usage and limitations of LLM-as-a-judge, including position, verbosity, and self-enhancement biases, as well as limited reasoning ability, and propose solutions to mitigate some of them. We then verify the agreement between LLM judges and human preferences by introducing two benchmarks: MT-bench, a multi-turn question set; and Chatbot Arena, a crowdsourced battle platform. Our results reveal that strong LLM judges like GPT-4 can match both controlled and crowdsourced human preferences well, achieving over 80% agreement, the same level of agreement between humans. Hence, LLM-as-a-judge is a scalable and explainable way to approximate human preferences, which are otherwise very expensive to obtain. Additionally, we show our benchmark and traditional benchmarks complement each other by evaluating several variants of LLaMA and Vicuna. The MT-bench questions, 3K expert votes, and 30K conversations with human preferences are publicly available at https: //github.com/lm-sys/FastChat/tree/main/fastchat/llm_judge.\narXiv:2306.05685v4\n# 1 Introduction\nThere has been a proliferation of LLM-based chat assistants (chatbots) that leverage supervised instruction fine-tuning and reinforcement learning with human feedback (RLHF) to unlock new instruction following and conversational abilities [31, 2, 30, 8, 52, 48, 14]. Once aligned with humans, these chat models are strongly preferred by human users over the original, unaligned models on which they are built. However, the heightened user preference does not always correspond to improved scores on traditional LLM benchmarks \u2013 benchmarks like MMLU [19] and HELM [24] cannot effectively tell the difference between these aligned models and the base models. This phenomenon suggests that there is a fundamental discrepancy between user perceptions of the usefulness of chatbots and the criteria adopted by conventional benchmarks. We argue that this discrepancy primarily arises due to existing evaluation that only measures LLMs\u2019 core capability on a confined set of tasks (e.g., multi-choice knowledge or retrieval questions), without adequately assessing its alignment with human preference in open-ended tasks, such as the ability to accurately adhere to instructions in multi-turn dialogues. As a demonstration, we show\n37th Conference on Neural Information Processing Systems (NeurIPS 2023) Track on Datasets and Benchmarks.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6f6a/6f6a3fcc-8816-4c28-b33b-c1c5b3112374.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4b8d/4b8de49e-c63e-4ab6-bb37-4936552e2801.png\" style=\"width: 50%;\"></div>\nQuestion: If the FED buys bonds in the secondary market (A) the money supply will increase. (B) the money supply will decrease. (C) the money supply will not b affected. (D) the discount rate would be affected. Output the answer only. Assistant B: (A) the money supply will increase. Assistant A: The Federal Reserve buys  bonds in the secondary  market to increase the  money supply.\n# Follow-up Question: How does it affect my daily life? Give 3 examples.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/845b/845b9f80-6971-4edb-b34b-da78d332821a.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/f3f4/f3f4b40e-6488-4d2c-b259-6fdbee969a1b.png\" style=\"width: 50%;\"></div>\n# GPT-4 Judgment:\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/803f/803f4bc9-2168-4be9-a36b-fe2cf04e1ad4.png\" style=\"width: 50%;\"></div>\nAssistant A provided an incorrect response to the user's question about how the Federal Reserve  buying bonds in the secondary market affects daily life. The answer given is repetitive and lacks  clear examples of how the action impacts daily life. On the other hand, Assistant B provided a relevant and accurate response to the user's question about  the Federal Reserve buying bonds. The answer includes three clear examples of how the action impacts  daily life, such as interest rates, inflation, and employment.\nFigure 1: Multi-turn dialogues between a user and two AI assistants\u2014LLaMA-13B (Assistant A) and Vicuna-13B (Assistant B)\u2014initiated by a question from the MMLU benchmark and a follow-up instruction. GPT-4 is then presented with the context to determine which assistant answers better.\nand Vicuna-13B (Assistant B)\u2014initiated by a question from the MMLU benchmark and a follow-up instruction. GPT-4 is then presented with the context to determine which assistant answers better. conversation histories with two models on an MMLU question in Figure 1. The two models are LLaMA-13B [39], a pre-trained base model without fine-tuning, and Vicuna-13B, our fine-tuned model from LLaMA-13B on high-quality conversations (the training details are in Appendix E). Despite the base LLaMA models showing competitive performance on conventional benchmarks (Table 8), its answers to open-ended questions are often not preferred by humans. This misalignment of conventional benchmarks underscores the core problem driving this paper: the need for a robust and scalable automated method to evaluate LLM alignment with human preferences. To study this, we introduce two benchmarks with human ratings as the primary evaluation metric: MT-bench and Chatbot Arena. MT-bench is a series of open-ended questions that evaluate a chatbot\u2019s multi-turn conversational and instruction-following ability \u2013 two critical elements for human preference. MT-bench is also carefully constructed to differentiate chatbots based on their core capabilities, such as reasoning and math. In addition, we develop Chatbot Arena, a crowdsourced platform featuring anonymous battles between chatbots in real-world scenarios \u2013 Users engage in conversations with two chatbots at the same time and rate their responses based on personal preferences. While human evaluation is the gold standard for assessing human preferences, it is exceptionally slow and costly. To automate the evaluation, we explore the use of state-of-the-art LLMs, such as GPT-4, as a surrogate for humans. Because these models are often trained with RLHF, they already exhibit strong human alignment. We call this approach \u201cLLM-as-a-judge\u201d. This approach has been tried in our earlier blog post [8] and other concurrent or follow-up work [5, 29, 14, 12, 52, 18, 33, 40, 7, 43]. However, there has not been a systematic study of this approach. In this paper, we study the LLM-as-a-judge approach by comparing it to the gold standard of human evaluation. We examine several potential limitations of the LLM-as-a-judge approach including position bias, verbosity bias, self-enhancement bias, and limited reasoning ability. We show that some of the biases are minor or can be mitigated. Once addressed, our results from 3K controlled expert votes and 3K crowdsourced human votes in the wild verify that GPT-4 judge match\nhuman evaluations at an agreement rate exceeding 80%, achieving the same level of human-human agreement (\u00a74.2, Table 4). Consequently, this suggests LLM-as-a-judge is a scalable method to swiftly evaluate human preference, serving as a promising alternative to traditional human evaluations. This paper makes two contributions: (1) a systematic study of LLM-as-a-judge; and (2) human preference datasets with high-quality questions and diverse user interactions from MT-bench and Chatbot Arena. In addition, we argue for the adoption of a hybrid evaluation framework for future LLM benchmarks: by combining the existing capability-based benchmarks and the new preferencebased benchmarks with LLM-as-a-judge, one can swiftly and automatically evaluate both the core capabilities and human alignment of models. We publicly release 80 MT-bench questions, 3K expert votes, and 30K conversations with human preferences for future study.\n<div style=\"text-align: center;\">Table 1: Sample multi-turn questions in MT-bench.</div>\nTable 1: Sample multi-turn questions in MT-bench.\nCategory\nSample Questions\nWriting\n1st Turn\nCompose an engaging travel blog post about a recent trip to Hawaii, highlighting\ncultural experiences and must-see attractions.\n2nd Turn\nRewrite your previous response. Start every sentence with the letter A.\nMath\n1st Turn\nGiven that f(x) = 4x3 \u22129x \u221214, find the value of f(2).\n2nd Turn\nFind x such that f(x) = 0.\nKnowledge\n1st Turn\nProvide insights into the correlation between economic indicators such as GDP,\ninflation, and unemployment rates. Explain how fiscal and monetary policies ...\n2nd Turn\nNow, explain them again like I\u2019m five.\n# 2 MT-Bench and Chatbot Arena\n# 2.1 Motivation\nWith the recent advances of LLMs, LLM-based assistants start to exhibit artificial general intelligence across diverse tasks, from writing and chatting to coding [5, 30, 1, 37]. However, evaluating their broad capabilities also becomes more challenging. Despite the availability of numerous benchmarks for language models, they primarily focus on evaluating models on closed-ended questions with short responses. Given that these chat assistants can now precisely follow user instructions in multi-turn dialogues and answer open-ended questions in a zero-shot manner, current benchmarks are inadequate for assessing such capabilities. Existing benchmarks mostly fall into the following three categories. \u2022 Core-knowledge benchmarks, including MMLU [19], HellaSwag [50], ARC [9], WinoGrande [36], HumanEval [6], GSM-8K [10], and AGIEval [51], evaluate the core capabilities of pre-trained LLMs using zero-shot and few-shot benchmark sets. They typically require LLMs to generate a short, specific answer to benchmark questions that can be automatically validated. \u2022 Instruction-following benchmarks, such as Flan [27, 46], Self-instruct [44], NaturalInstructions [28], Super-NaturalInstructions [45], expand to slightly more open-ended questions and more diverse tasks and are used to evaluate LLMs after instruction fine-tuning. \u2022 Conversational benchmarks, like CoQA [35], MMDialog [15] and OpenAssistant [23], are closest to our intended use cases. However, the diversity and complexity of their questions often fall short in challenging the capabilities of the latest chatbots. While largely overlooked by existing LLM benchmarks, human preferences serve as a direct measure of a chatbot\u2019s utility in open-ended, multi-turn human-AI interactions. To bridge this gap, we introduce two novel benchmarks expressly tailored to assess human preferences. Simultaneously, these benchmarks are designed to distinguish the core capabilities of state-of-the-art models.\n# 2.2 MT-Bench\nWe create MT-bench, a benchmark consisting of 80 high-quality multi-turn questions. MT-bench is designed to test multi-turn conversation and instruction-following ability, covering common use cases and focusing on challenging questions to differentiate models. We identify 8 common categories of user prompts to guide its construction: writing, roleplay, extraction, reasoning, math, coding,\nknowledge I (STEM), and knowledge II (humanities/social science). For each category, we then manually designed 10 multi-turn questions. Table 1 lists several sample questions.\n# 2.3 Chatbot Arena\nOur second approach is Chatbot Arena, a crowdsourcing benchmark platform featuring anonymous battles. On this platform, users can interact with two anonymous models simultaneously, posing the same question to both. They vote for which model provides the preferred response, with the identities of the models disclosed post-voting. After running Chatbot Arena for one month, we have collected around 30K votes. Since the platform does not use pre-defined questions, it allows gathering a wide range of unrestricted use cases and votes in the wild, based on the diverse interests of users. A screenshot of the platform can be found at Appendix C.2.\n# 3 LLM as a Judge\nWhile our initial evaluations using MT-bench and Chatbot Arena rely on human ratings, collecting human preferences can be costly and laborious [44, 38, 31, 2, 13]. To overcome this, we aim to develop a more scalable and automated approach. Given that most questions in MT-bench and Chatbot Arena are open-ended without reference answers, devising a rule-based program to assess the outputs is extremely challenging. Traditional evaluation metrics based on the similarity between outputs and reference answers (e.g., ROUGE [25], BLEU [32]) are also ineffective for these questions. As LLMs continue to improve, they show potential in replacing human annotators in many tasks [17, 20]. Specifically, we are interested in whether LLMs can effectively evaluate the responses of chat assistants and match human preferences. Next, we discuss the use and limitations of LLM-as-a-judge.\n# 3.1 Types of LLM-as-a-Judge\nWe propose 3 LLM-as-a-judge variations. They can be implemented independently or in combination: \u2022 Pairwise comparison. An LLM judge is presented with a question and two answers, and tasked to determine which one is better or declare a tie. The prompt used is given in Figure 5 (Appendix). \u2022 Single answer grading. Alternatively, an LLM judge is asked to directly assign a score to a single answer. The prompt used for this scenario is in Figure 6 (Appendix). \u2022 Reference-guided grading. In certain cases, it may be beneficial to provide a reference solution if applicable. An example prompt we use for grading math problems is in Figure 8 (Appendix). These methods have different pros and cons. For example, the pairwise comparison may lack scalability when the number of players increases, given that the number of possible pairs grows quadratically; single answer grading may be unable to discern subtle differences between specific pairs, and its results may become unstable, as absolute scores are likely to fluctuate more than relative pairwise results if the judge model changes.\n# 3.2 Advantages of LLM-as-a-Judge\nLLM-as-a-judge offers two key benefits: scalability and explainability. It reduces the need for human involvement, enabling scalable benchmarks and fast iterations. Additionally, LLM judges provide not only scores but also explanations, making their outputs interpretable, as shown in Figure 1.\n# 3.3 Limitations of LLM-as-a-Judge\nWe identify certain biases and limitations of LLM judges. However, we will also present solutions later and show the agreement between LLM judges and humans is high despite these limitations. Position bias is when an LLM exhibits a propensity to favor certain positions over others. This bias is not unique to our context and has been seen in human decision-making [3, 34] and other ML domains [22, 41]. Figure 11 (Appendix) shows an example of position bias. GPT-4 is tasked to evaluate two responses from GPT-3.5 and Vicuna-13B to an open-ended question. When GPT-3.5\u2019s answer is positioned\nTable 2: Position bias of different LLM judges. Consistency is the percentage of cases where a judge gives consistent results when swapping the order of two assistants. \u201cBiased toward first\u201d is the percentage of cases when a judge favors the first answer. \u201cError\u201d indicates wrong output formats. The two largest numbers in each column are in bold.\ntwo largest numbers in each column are in bold.\nJudge\nPrompt\nConsistency\nBiased toward first\nBiased toward second\nError\nClaude-v1\ndefault\n23.8%\n75.0%\n0.0%\n1.2%\nrename\n56.2%\n11.2%\n28.7%\n3.8%\nGPT-3.5\ndefault\n46.2%\n50.0%\n1.2%\n2.5%\nrename\n51.2%\n38.8%\n6.2%\n3.8%\nGPT-4\ndefault\n65.0%\n30.0%\n5.0%\n0.0%\nrename\n66.2%\n28.7%\n5.0%\n0.0%\n<div style=\"text-align: center;\">Table 4: Judge failure rate on 10 math questions with different prompts. We test LLaMA-13B vs. Vicuna-13B and swap positions. A failure means when GPT-4 says an incorrect answer is correct.</div>\nTable 4: Judge failure rate on 10 math questions with different prompts. We test LLaMA-13B vs. Vicuna-13B and swap positions. A failure means when GPT-4 says an incorrect answer is correct.\n<div style=\"text-align: center;\">Table 3: Failure rate under \u201crepetitive list\u201d attack for different LLM judges on 23 answers.</div>\ntack for different LLM judges on 23 answers.\nJudge\nClaude-v1\nGPT-3.5\nGPT-4\nFailure rate\n91.3%\n91.3%\n8.7%\nfirst, GPT-4 considers GPT-3.5\u2019s answer more detailed and superior. However, upon switching the positions of the two responses, GPT-4\u2019s judgement flips, favoring Vicuna\u2019s answer. To analyze the position bias, we construct two similar answers to each first-turn question in MT-bench by calling GPT-3.5 twice with a temperature of 0.7. We then try three LLMs with two different prompts: \u201cdefault\u201d is our default prompt in Figure 5 (Appendix). \u201crename\u201d renames the assistants in our default prompt to see whether the bias is on positions or names. As in Table 2, we found all of them exhibit strong position bias. Most LLM judges favor the first position. Claude-v1 also shows a name bias which makes it favors \"Assistant A\", as illustrated by the \"rename\" prompt. The position bias can be very significant. Only GPT-4 outputs consistent results in more than 60% of cases. Note that this test is challenging because the answers are very similar and occasionally indistinguishable even to humans. We will show that position bias is less prominent in some cases in Appendix D.1. As for the origin of this bias, we suspect that it could be rooted in the training data or inherent to the left-to-right architecture of causal transformers, but leave a deeper study as future work. Verbosity bias is when an LLM judge favors longer, verbose responses, even if they are not as clear, high-quality, or accurate as shorter alternatives.\nTo examine this bias, we design a \u201crepetitive list\u201d attack with model answers from MT-bench. We first select 23 model answers from MT-bench that contain a numbered list. We then make them unnecessarily verbose by asking GPT-4 to rephrase the list without adding any new information and insert the rephrased new list to the beginning of the original list. For example, if the original response contains 5 items, then the new response will contain 10 items but the first 5 items are rephrased from the original 5 items. An example is shown in Figure 12 (Appendix). We define the attack is successful if an LLM judge thinks the new response is better than the old response. Table 3 shows the failure rate of LLM judges under this attack, demonstrating that all LLMs may be prone to verbosity bias though GPT-4 defends significantly better than others. As a calibration, we find LLM judges are able to correctly judge identical answers (i.e., they always return a tie for two identical answers) but cannot pass the more advanced \u201crepetitive list\u201d attack. Self-enhancement bias. We adopt the term \u201cself-enhancement bias\u201d from social cognition literature [4] to describe the effect that LLM judges may favor the answers generated by themselves. We examine this effect statistically. Figure 3(b) shows the win rate (w/o tie) of six models under different LLM judges and humans. Compared to humans, we do observe that some judges favor certain models. For example, GPT-4 favors itself with a 10% higher win rate; Claude-v1 favors itself with a 25% higher win rate. However, they also favor other models and GPT-3.5 does not favor itself. Due to limited data and small differences, our study cannot determine whether the models exhibit a self-enhancement bias. Conducting a controlled study is challenging because we cannot easily rephrase a response to fit the style of another model without changing the quality.\nDefault\nCoT\nReference\nFailure rate\n14/20\n6/20\n3/20\nLimited capability in grading math and reasoning questions. LLMs are known to have limited math and reasoning capability [10], which results in its failure of grading such questions because they do not know the correct answers. However, what is more intriguing is that it also shows limitations in grading basic math problems which it is capable of solving. For instance, in Figure 13 (Appendix), we present an example of an elementary math question in which GPT-4 makes an incorrect judgment. It\u2019s worth noting that although GPT-4 can solve the problem (when asked separately), it was misled by the provided answers, ultimately resulting in incorrect judgment. This pattern can also be seen in a reasoning question example in Figure 14 (Appendix). Both GPT-3.5 and Claude-v1 show a similar weakness. In Section 3.4, we will introduce a reference-guided method to mitigate such issues.\n# 3.4 Addressing limitations\nWe present a few methods to address position bias and the limited grading ability for math questions. Swapping positions. The position bias can be addressed by simple solutions. A conservative approach is to call a judge twice by swapping the order of two answers and only declare a win when an answer is preferred in both orders. If the results are inconsistent after swapping, we can call it a tie. Another more aggressive approach is to assign positions randomly, which can be effective at a large scale with the correct expectations. In the following experiments, we use the conservative one. Few-shot judge. We assess whether few-shot examples can improve consistency in the position bias benchmark. We select three good judgment examples using MT-bench-like questions, GPT-3.5 and Vicuna for generating answers, and GPT-4 for generating judgments. The examples cover three cases: A is better, B is better, and tie. As shown in Table 12 (Appendix), the few-shot judge can significantly increase the consistency of GPT-4 from 65.0% to 77.5%. However, high consistency may not imply high accuracy and we are not sure whether the few-shot examples will introduce new biases. Besides, the longer prompts make API calls 4\u00d7 more expensive. We use the zero-shot prompt by default in our following experiments but leave an additional study in Appendix D.2. Chain-of-thought and reference-guided judge. In Section 3.3, we have shown LLM\u2019s limited capability in grading math and reasoning questions. We propose two simple methods to mitigate this issue: chain-of-thought judge and reference-guided judge. Chain-of-thought is a widely used technique to improve LLM\u2019s reasoning capability [47]. We propose a similar technique to prompt an LLM judge to begin with answering the question independently and then start grading. Detailed prompt in Figure 7 (Appendix). However, even with the CoT prompt, we find that in many cases LLM makes exactly the same mistake as the given answers in its problem-solving process (See example in Figure 15 (Appendix), suggesting that LLM judge may still be misled by the context. Hence, we propose a reference-guided method, in which we first generate LLM judge\u2019s answer independently, and then display it as a reference answer in the judge prompt. In Table 4, we see a significant improvement in failure rate (from 70% to 15%) over the default prompt. Fine-tuning a judge model. We try fine-tuning a Vicuna-13B on arena data to act as a judge and show some promising preliminary results in Appendix F.\n# 3.5 Multi-turn judge\nIn MT-bench, every question involves two turns to evaluate conversational abilities. Therefore, when comparing two assistants, it becomes necessary to present a total of two questions and four responses, complicating the prompt design. We explore two possible designs, (1) breaking the two turns into two prompts or (2) displaying complete conversations in a single prompt. Our finding is the former one can cause the LLM judge struggling to locate the assistant\u2019s previous response precisely. We illustrate a case in Figure 16 (Appendix) where GPT-4 makes an inaccurate judgment due to a faulty reference. This suggests the necessity of displaying a complete conversation to enable the LLM judge to better grasp the context. We then consider the alternative design that presents two full conversations in a single prompt in which we ask the LLM judge to focus on the second question (Figure 9 (Appendix)). This approach has been found to significantly alleviate the aforementioned referencing issue.\n# 4 Agreement Evaluation\nWe study the agreement between different LLM judges and humans on MT-bench and Chatbot Arena datasets. On MT-bench, we also study the agreement among humans. MT-bench represents a small-scale study with controlled human evaluation, while Chatbot Arena represents a larger-scale study with crowdsourced human evaluation in the wild.\nMT-bench. We generate answers for all 80 questions with 6 models: GPT-4, GPT-3.5, Claude-V1, Vicuna-13B, Alpaca-13B [38], and LLaMA-13B [39]. We then use 2 kinds of judges: LLM judges and 58 expert-level human labelers. The labelers are mostly graduate students so they are considered experts and more skilled than average crowd workers. We let LLM judges evaluate all pairs and let each human evaluate at least 20 random multi-turn questions. This resulted in around 3K votes for all questions. The detailed data collection process is in Appendix C. Chatbot Arena. We randomly sample 3K single-turn votes from 30K arena data, which covers models including GPT-4, GPT-3.5, Claude, Vicuna-7B/13B, Koala-13B [16], Alpaca-13B, LLaMA13B, and Dolly-12B. We use two kinds of judges: LLM judges and collected crowd judges (2114 unique IPs). Metrics. We define the agreement between two types of judges as the probability of randomly selected individuals (but not identical) of each type agreeing on a randomly selected question. See more explanation in Appendix D.3. Average win rate is the average of win rates against all other players. These metrics can be computed with or without including tie votes.\n# 4.2 High agreement between GPT-4 and humans\nWe compute agreement on MT-bench data. In Table 5, GPT-4 with both pairwise comparison and single answer grading show very high agreements with human experts. The agreement under setup S2 (w/o tie) between GPT-4 and humans reaches 85%, which is even higher than the agreement among humans (81%). This means GPT-4\u2019s judgments closely align with the majority of humans. We also show that GPT-4\u2019s judgments may help humans make better judgments. During our data collection, when a human\u2019s choice deviated from GPT-4, we presented GPT-4\u2019s judgments to humans and ask if they are reasonable (details in Appendix C.1). Despite different views, humans deemed GPT-4\u2019s judgments reasonable in 75% of cases and are even willing to change their choices in 34% of cases. The data from Arena shows a similar trend, as illustrated by Table 6. Comparing GPT-4 and other LLM judges, we find they reach a similar non-tie agreement ratio between humans but the number of non-tied votes from GPT-4 is much larger. This means that GPT-4 is more affirmative and less suffered from position bias but other models also perform well when they give an affirmative answer. In both tables, GPT-4 with single-answer grading matches both pairwise GPT-4 and human preferences very well. This means GPT-4 has a relatively stable internal rubric. Although it may sometimes perform slightly worse than pairwise comparison and give more tie votes, it is a more scalable method. We then perform a breakdown analysis by computing agreement on different model pairs and categories. We only include non-tied votes. In Figure 2, we observe the agreement between GPT-4 and human progressively increases in line with the performance disparity of the model pairs (i.e., larger win rate difference), from 70% to nearly 100%. This suggests that GPT-4 aligns with humans better when significant performance differences exist between the models.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/dc19/dc19db78-6658-429c-b5b7-0335535bf606.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 3: Average win rate of six models under different judges on MT-bench.</div>\nTable 5: Agreement between two types of judges on MT-bench. \u201cG4-Pair\u201d and \u201cG4-Single\u201d denote GPT-4 with pairwise comparison and single-answer grading respectively. The single-answer grading can be converted into pairwise comparison results for calculating the agreement. We report two setups: \u201cS1\u201d includes non-tie, tie, and inconsistent (due to position bias) votes and counts inconsistent as tie; \u201cS2\u201d only includes non-tie votes. The agreement between two random judges under each setup is denoted as \u201cR=\u201d. The top value in each cell is the agreement, and the bottom gray value is #votes.\nSetup\nS1 (R = 33%)\nS2 (R = 50%)\nJudge\nG4-Single\nHuman\nG4-Single\nHuman\nG4-Pair\n70%\n1138\n66%\n1343\n97%\n662\n85%\n859\nG4-Single\n-\n60%\n1280\n-\n85%\n739\nHuman\n-\n63%\n721\n-\n81%\n479\nSetup\nS1 (R = 33%)\nS2 (R = 50%)\nJudge\nG4-Single\nHuman\nG4-Single\nHuman\nG4-Pair\n70%\n1138\n66%\n1343\n97%\n662\n85%\n859\nG4-Single\n-\n60%\n1280\n-\n85%\n739\nHuman\n-\n63%\n721\n-\n81%\n479\nSetup\nS1 (R = 33%)\nS2 (R = 50%)\nJudge\nG4-Single\nHuman\nG4-Single\nHuman\nG4-Pair\n70%\n1161\n66%\n1325\n95%\n727\n85%\n864\nG4-Single\n-\n59%\n1285\n-\n84%\n776\nHuman\n-\n67%\n707\n-\n82%\n474\n# (a) First Turn\nTable 6: Agreement between two types of judges on Chatbot Arena. \u201cG4-S\u201d denotes GPT-4 with single-answer grading. \u201cG4\u201d, \u201cG3.5\u201d and \u201cC\u201d denote GPT-4, GPT-3.5, and Claude with pairwise comparison, respectively. \u201cH\u201d denotes human. The remaining of table follows the same format as Table 5.\nSetup\nS1 (Random = 33%)\nS2 (Random = 50%)\nJudge\nG4-S\nG3.5\nC\nH\nG4-S\nG3.5\nC\nH\nG4\n72%\n2968\n66%\n3061\n66%\n3062\n64%\n3066\n95%\n1967\n94%\n1788\n95%\n1712\n87%\n1944\nG4-S\n-\n60%\n2964\n62%\n2964\n60%\n2968\n-\n89%\n1593\n91%\n1538\n85%\n1761\nG3.5\n-\n-\n68%\n3057\n54%\n3061\n-\n-\n96%\n1497\n83%\n1567\nC\n-\n-\n-\n53%\n3062\n-\n-\n-\n84%\n1475\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4147/4147be65-c3e0-4091-8170-bdda18fc5dd4.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">igure 4: Average win rate of nine models under different judges on Chatbot Arena.</div>\n<div style=\"text-align: center;\">Table 7: Category-wise win rate of models.</div>\nTable 7: Category-wise win rate of models.\nModel\nWriting\nRoleplay\nReasoning\nMath\nCoding\nExtraction\nSTEM\nHumanities\nGPT-4\n61.2%\n67.9%\n49.3%\n66.1%\n56.3%\n66.2%\n76.6%\n72.2%\nGPT-3.5\n50.9%\n60.6%\n32.6%\n63.8%\n55.0%\n48.8%\n52.8%\n53.8%\nVicuna-13B\n39.7%\n39.2%\n20.1%\n18.0%\n36.9%\n29.2%\n47.0%\n47.5%\nLLaMA-13B\n15.1%\n15.1%\n7.8%\n7.5%\n2.1%\n9.3%\n6.8%\n10.1%\n# 4.3 Win rates under different judges\nWe plot the average win rate of models under different judges on MT-bench and Chatbot Arena in Figure 3 and Figure 4, respectively. The win rate curves from LLM judges closely match the curves from humans. On MT-bench second turn, proprietary models like Claude and GPT-3.5 are more preferred by the humans compared to the first turn, meaning that a multi-turn benchmark can better differentiate some advanced abilities of models. We also list the per-category win rate of\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/dc30/dc3009d5-ca1b-4572-88ed-c18218cdef99.png\" style=\"width: 50%;\"></div>\nFigure 2: Agreement and win rate difference. Each point corresponds to a model pair and counts only the non-tie votes between the two models. The xaxis value is the win rate difference between the two models. The y-axis value is the GPT-4 and human agreement.\n<div style=\"text-align: center;\">Table 8: Evaluation results of several model variants.</div>\nTable 8: Evaluation results of several model variants.\nModel\n#Training Token\nMMLU (5-shot)\nTruthfulQA (0-shot)\nMT-Bench Score (GPT-4)\nLLaMA-7B\n1T\n35.2\n0.22\n2.74\nLLaMA-13B\n1T\n47.0\n0.26\n2.61\nAlpaca-7B\n4.4M\n40.1\n0.26\n4.54\nAlpaca-13B\n4.4M\n48.1\n0.30\n4.53\nVicuna-7B (selected)\n4.8M\n37.3\n0.32\n5.95\nVicuna-7B (single)\n184M\n44.1\n0.30\n6.04\nVicuna-7B (all)\n370M\n47.1\n0.32\n6.00\nVicuna-13B (all)\n370M\n52.1\n0.35\n6.39\nGPT-3.5\n-\n70.0\n-\n7.94\nGPT-4\n-\n86.4\n-\n8.99\nrepresentative models in Table 7 to show how MT-bench differentiates models, in which we see GPT-4 is significantly better than others. Vicuna-13B is noticeably worse than GPT-3.5/4 in reasoning, math, and coding categories. Note that in math/coding category, GPT-3.5 and GPT-4 have similar overall win-rate because they both failed to answer some hard questions, but GPT-4 is still significantly better than GPT-3 in the direct pairwise comparison or single-answer grading. Please see a performance breakdown of MT-bench score for each category in Appendix D.4.\n# 5 Human Preference Benchmark and Standardized Benchmark\nHuman preference benchmarks such as MT-bench and Chatbot Arena serve as valuable additions to the current standardized LLM benchmarks. They focus on different aspects of a model and the recommended way is to comprehensively evaluate models with both kinds of benchmarks. We evaluate several model variants derived from LLaMA on MMLU [19], Truthful QA [26] (MC1), and MT-bench (GPT-4 judge). The training details are in Appendix E. Since we have shown that GPT-4 single-answer grading also performs well in Section 4.2, we use GPT-4 single-answer grading for MT-bench in favor of its scalability and simplicity. We ask GPT-4 to give a score for each turn on a scale of 10 by using our prompt templates (Figure 6, Figure 10) and report an average score of 160 = 80\u00d72 turns. Table 8 shows the results. We find that fine-tuning on high-quality dialog datasets (i.e., ShareGPT) can consistently improve the model performance on MMLU and the improvement scales with fine-tuning data size. On the other hand, a small high-quality conversation dataset can quickly teach the model a style preferred by GPT-4 (or approximately human) but cannot improve MMLU significantly, as shown by the Vicuna-7B (selected) which is trained with only 4.8M tokens or 3K conversations. In Table 8, no single benchmark can determine model quality, meaning that a comprehensive evaluation is needed. Our results indicate that using LLM-as-a-judge to approximate human preferences is highly feasible and could become a new standard in future benchmarks. We are also hosting a regularly updated leaderboard with more models 2. Notably, DynaBench [21], a research platform dedicated to dynamic data collection and benchmarking, aligns with our spirit. DynaBench addresses the challenges posed by static standardized benchmarks, such as saturation and overfitting, by emphasizing dynamic data with human-in-the-loop. Our LLM-as-a-judge approach can automate and scale platforms of this nature.\n# 6 Discussion\nLimitations. This paper emphasizes helpfulness but largely neglects safety. Honesty and harmlessness are crucial for a chat assistant as well [2]. We anticipate similar methods can be used to evaluate these metrics by modifying the default prompt. Additionally, within helpfulness, there are multiple dimensions like accuracy, relevance, and creativity, but they are all combined into a single metric in this study. A more comprehensive evaluation can be developed by analyzing and separating these dimensions. We propose preliminary solutions to address the limitations and biases of LLM-as-a-judge in Section 3.4, but we anticipate more advanced methods can be developed. Data collection and release. Appendix C describes the detailed data collection and release processes, which include the instructions we give to users, the screenshots of the data collection interface, the information about participated users, and the content of the released data.\n2https://huggingface.co/spaces/lmsys/chatbot-arena-leaderboar\nSocietal impacts. The societal impact of this study is multi-faceted. Our evaluation methods can help enhance chatbot quality and user experiences. However, addressing biases in these methods is crucial. Our dataset enables better studies of human preferences and model behavior. Advanced chat assistants may replace certain human tasks, resulting in job displacements and new opportunities. Future directions. 1) Benchmarking chatbots at scale with a broader set of categories 2) Open-source LLM judge aligned with human preference 3) Enhancing open models\u2019 math/reasoning capability.\n# 7 Conclusion\nIn this paper, we propose LLM-as-a-judge for chatbot evaluation and systematically examine its efficacy using human preference data from 58 experts on MT-bench, as well as thousands of crowdusers on Chatbot Arena. Our results reveal that strong LLMs can achieve an agreement rate of over 80%, on par with the level of agreement among human experts, establishing a foundation for an LLM-based evaluation framework.\n# Acknowledgement\nThis project is partly supported by gifts from Anyscale, Astronomer, Google, IBM, Intel, Lacework, Microsoft, MBZUAI, Samsung SDS, Uber, and VMware. Lianmin Zheng is supported by a Meta Ph.D. Fellowship. We extend our thanks to Xinyang Geng, Hao Liu, Eric Wallace, Xuecheng Li, Tianyi Zhang, Qirong Ho, and Kevin Lin for their insightful discussions.\n# References\n[1] Rohan Anil, Andrew M Dai, Orhan Firat, Melvin Johnson, Dmitry Lepikhin, Alexandre Passos, Siamak Shakeri, Emanuel Taropa, Paige Bailey, Zhifeng Chen, et al. Palm 2 technical report. arXiv preprint arXiv:2305.10403, 2023. [2] Yuntao Bai, Andy Jones, Kamal Ndousse, Amanda Askell, Anna Chen, Nova DasSarma, Dawn Drain, Stanislav Fort, Deep Ganguli, Tom Henighan, et al. Training a helpful and harmless assistant with reinforcement learning from human feedback. arXiv preprint arXiv:2204.05862, 2022. [3] Niels J Blunch. Position bias in multiple-choice questions. Journal of Marketing Research, 21(2):216\u2013220, 1984. [4] Jonathon D Brown. Evaluations of self and others: Self-enhancement biases in social judgments. Social cognition, 4(4):353\u2013376, 1986. [5] S\u00e9bastien Bubeck, Varun Chandrasekaran, Ronen Eldan, Johannes Gehrke, Eric Horvitz, Ece Kamar, Peter Lee, Yin Tat Lee, Yuanzhi Li, Scott Lundberg, et al. Sparks of artificial general intelligence: Early experiments with gpt-4. arXiv preprint arXiv:2303.12712, 2023. [6] Mark Chen, Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared Kaplan, Harri Edwards, Yuri Burda, Nicholas Joseph, Greg Brockman, et al. Evaluating large language models trained on code. arXiv preprint arXiv:2107.03374, 2021. [7] Cheng-Han Chiang and Hung-yi Lee. Can large language models be an alternative to human evaluations? arXiv preprint arXiv:2305.01937, 2023. [8] Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang, Joseph E. Gonzalez, Ion Stoica, and Eric P. Xing. Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt quality, March 2023. [9] Peter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and Oyvind Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge. arXiv preprint arXiv:1803.05457, 2018. 10] Karl Cobbe, Vineet Kosaraju, Mohammad Bavarian, Mark Chen, Heewoo Jun, Lukasz Kaiser, Matthias Plappert, Jerry Tworek, Jacob Hilton, Reiichiro Nakano, et al. Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021.\n[11] Tri Dao, Dan Fu, Stefano Ermon, Atri Rudra, and Christopher R\u00e9. Flashattention: Fast and memory-efficient exact attention with io-awareness. Advances in Neural Information Processing Systems, 35:16344\u201316359, 2022. [12] Tim Dettmers, Artidoro Pagnoni, Ari Holtzman, and Luke Zettlemoyer. Qlora: Efficient finetuning of quantized llms. arXiv preprint arXiv:2305.14314, 2023. [13] Shizhe Diao, Rui Pan, Hanze Dong, Ka Shun Shum, Jipeng Zhang, Wei Xiong, and Tong Zhang. Lmflow: An extensible toolkit for finetuning and inference of large foundation models. arXiv preprint arXiv:2306.12420, 2023. [14] Yann Dubois, Xuechen Li, Rohan Taori, Tianyi Zhang, Ishaan Gulrajani, Jimmy Ba, Carlos Guestrin, Percy Liang, and Tatsunori B Hashimoto. Alpacafarm: A simulation framework for methods that learn from human feedback. arXiv preprint arXiv:2305.14387, 2023. [15] Jiazhan Feng, Qingfeng Sun, Can Xu, Pu Zhao, Yaming Yang, Chongyang Tao, Dongyan Zhao, and Qingwei Lin. Mmdialog: A large-scale multi-turn dialogue dataset towards multi-modal open-domain conversation. arXiv preprint arXiv:2211.05719, 2022. [16] Xinyang Geng, Arnav Gudibande, Hao Liu, Eric Wallace, Pieter Abbeel, Sergey Levine, and Dawn Song. Koala: A dialogue model for academic research. Blog post, April 2023. [17] Fabrizio Gilardi, Meysam Alizadeh, and Ma\u00ebl Kubli. Chatgpt outperforms crowd-workers for text-annotation tasks. arXiv preprint arXiv:2303.15056, 2023. [18] Arnav Gudibande, Eric Wallace, Charlie Snell, Xinyang Geng, Hao Liu, Pieter Abbeel, Sergey Levine, and Dawn Song. The false promise of imitating proprietary llms. arXiv preprint arXiv:2305.15717, 2023. [19] Dan Hendrycks, Collin Burns, Steven Basart, Andy Zou, Mantas Mazeika, Dawn Song, and Jacob Steinhardt. Measuring massive multitask language understanding. arXiv preprint arXiv:2009.03300, 2020. [20] Fan Huang, Haewoon Kwak, and Jisun An. Is chatgpt better than human annotators? potential and limitations of chatgpt in explaining implicit hate speech. arXiv preprint arXiv:2302.07736, 2023. [21] Douwe Kiela, Max Bartolo, Yixin Nie, Divyansh Kaushik, Atticus Geiger, Zhengxuan Wu, Bertie Vidgen, Grusha Prasad, Amanpreet Singh, Pratik Ringshia, et al. Dynabench: Rethinking benchmarking in nlp. In Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 4110\u20134124, 2021. [22] Miyoung Ko, Jinhyuk Lee, Hyunjae Kim, Gangwoo Kim, and Jaewoo Kang. Look at the first sentence: Position bias in question answering. arXiv preprint arXiv:2004.14602, 2020. [23] Andreas K\u00f6pf, Yannic Kilcher, Dimitri von R\u00fctte, Sotiris Anagnostidis, Zhi-Rui Tam, Keith Stevens, Abdullah Barhoum, Nguyen Minh Duc, Oliver Stanley, Rich\u00e1rd Nagyfi, et al. Openassistant conversations\u2013democratizing large language model alignment. arXiv preprint arXiv:2304.07327, 2023. [24] Percy Liang, Rishi Bommasani, Tony Lee, Dimitris Tsipras, Dilara Soylu, Michihiro Yasunaga, Yian Zhang, Deepak Narayanan, Yuhuai Wu, Ananya Kumar, et al. Holistic evaluation of language models. arXiv preprint arXiv:2211.09110, 2022. [25] Chin-Yew Lin. Rouge: A package for automatic evaluation of summaries. In Text summarization branches out, pages 74\u201381, 2004. [26] Stephanie Lin, Jacob Hilton, and Owain Evans. Truthfulqa: Measuring how models mimic human falsehoods. arXiv preprint arXiv:2109.07958, 2021. [27] Shayne Longpre, Le Hou, Tu Vu, Albert Webson, Hyung Won Chung, Yi Tay, Denny Zhou, Quoc V Le, Barret Zoph, Jason Wei, et al. The flan collection: Designing data and methods for effective instruction tuning. arXiv preprint arXiv:2301.13688, 2023. [28] Swaroop Mishra, Daniel Khashabi, Chitta Baral, and Hannaneh Hajishirzi. Cross-task generalization via natural language crowdsourcing instructions. In ACL, 2022. [29] OpenAI. Evals is a framework for evaluating llms and llm systems, and an open-source registry of benchmarks. https://github.com/openai/evals. [30] OpenAI. Gpt-4 technical report, 2023.\n[31] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al. Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730\u201327744, 2022. [32] Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu. Bleu: a method for automatic evaluation of machine translation. In Proceedings of the 40th annual meeting of the Association for Computational Linguistics, pages 311\u2013318, 2002. [33] Baolin Peng, Chunyuan Li, Pengcheng He, Michel Galley, and Jianfeng Gao. Instruction tuning with gpt-4. arXiv preprint arXiv:2304.03277, 2023. [34] Priya Raghubir and Ana Valenzuela. Center-of-inattention: Position biases in decision-making. Organizational Behavior and Human Decision Processes, 99(1):66\u201380, 2006. [35] Siva Reddy, Danqi Chen, and Christopher D Manning. Coqa: A conversational question answering challenge. Transactions of the Association for Computational Linguistics, 7:249\u2013266, 2019. [36] Keisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, and Yejin Choi. Winogrande: An adversarial winograd schema challenge at scale. Communications of the ACM, 64(9):99\u2013106, 2021. [37] Aarohi Srivastava, Abhinav Rastogi, Abhishek Rao, Abu Awal Md Shoeb, Abubakar Abid, Adam Fisch, Adam R Brown, Adam Santoro, Aditya Gupta, Adri\u00e0 Garriga-Alonso, et al. Beyond the imitation game: Quantifying and extrapolating the capabilities of language models. arXiv preprint arXiv:2206.04615, 2022. [38] Rohan Taori, Ishaan Gulrajani, Tianyi Zhang, Yann Dubois, Xuechen Li, Carlos Guestrin, Percy Liang, and Tatsunori B. Hashimoto. Stanford alpaca: An instruction-following llama model. https://github.com/tatsu-lab/stanford_alpaca, 2023. [39] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023. [40] Peiyi Wang, Lei Li, Liang Chen, Dawei Zhu, Binghuai Lin, Yunbo Cao, Qi Liu, Tianyu Liu, and Zhifang Sui. Large language models are not fair evaluators. arXiv preprint arXiv:2305.17926, 2023. [41] Xuanhui Wang, Nadav Golbandi, Michael Bendersky, Donald Metzler, and Marc Najork. Position bias estimation for unbiased learning to rank in personal search. In Proceedings of the Eleventh ACM International Conference on Web Search and Data Mining, pages 610\u2013618, 2018. [42] Yidong Wang, Zhuohao Yu, Zhengran Zeng, Linyi Yang, Cunxiang Wang, Hao Chen, Chaoya Jiang, Rui Xie, Jindong Wang, Xing Xie, Wei Ye, Shikun Zhang, and Yue Zhang. Pandalm: An automatic evaluation benchmark for llm instruction tuning optimization, 2023. [43] Yizhong Wang, Hamish Ivison, Pradeep Dasigi, Jack Hessel, Tushar Khot, Khyathi Raghavi Chandu, David Wadden, Kelsey MacMillan, Noah A Smith, Iz Beltagy, et al. How far can camels go? exploring the state of instruction tuning on open resources. arXiv preprint arXiv:2306.04751, 2023. [44] Yizhong Wang, Yeganeh Kordi, Swaroop Mishra, Alisa Liu, Noah A. Smith, Daniel Khashabi, and Hannaneh Hajishirzi. Self-instruct: Aligning language model with self generated instructions, 2022. [45] Yizhong Wang, Swaroop Mishra, Pegah Alipoormolabashi, Yeganeh Kordi, Amirreza Mirzaei, Anjana Arunkumar, Arjun Ashok, Arut Selvan Dhanasekaran, Atharva Naik, David Stap, et al. Super-naturalinstructions:generalization via declarative instructions on 1600+ tasks. In EMNLP, 2022. [46] Jason Wei, Maarten Bosma, Vincent Y Zhao, Kelvin Guu, Adams Wei Yu, Brian Lester, Nan Du, Andrew M Dai, and Quoc V Le. Finetuned language models are zero-shot learners. arXiv preprint arXiv:2109.01652, 2021. [47] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed Chi, Quoc Le, and Denny Zhou. Chain of thought prompting elicits reasoning in large language models. arXiv preprint arXiv:2201.11903, 2022.\n[48] Can Xu, Qingfeng Sun, Kai Zheng, Xiubo Geng, Pu Zhao, Jiazhan Feng, Chongyang Tao, and Daxin Jiang. Wizardlm: Empowering large language models to follow complex instructions. arXiv preprint arXiv:2304.12244, 2023. [49] Zongheng Yang, Zhanghao Wu, Michael Luo, Wei-Lin Chiang, Romil Bhardwaj, Woosuk Kwon, Siyuan Zhuang, Frank Sifei Luan, Gautam Mittal, Scott Shenker, and Ion Stoica. SkyPilot: An intercloud broker for sky computing. In 20th USENIX Symposium on Networked Systems Design and Implementation (NSDI 23), pages 437\u2013455, Boston, MA, April 2023. USENIX Association. [50] Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. Hellaswag: Can a machine really finish your sentence? arXiv preprint arXiv:1905.07830, 2019. [51] Wanjun Zhong, Ruixiang Cui, Yiduo Guo, Yaobo Liang, Shuai Lu, Yanlin Wang, Amin Saied, Weizhu Chen, and Nan Duan. Agieval: A human-centric benchmark for evaluating foundation models. arXiv preprint arXiv:2304.06364, 2023. [52] Chunting Zhou, Pengfei Liu, Puxin Xu, Srini Iyer, Jiao Sun, Yuning Mao, Xuezhe Ma, Avia Efrat, Ping Yu, Lili Yu, et al. Lima: Less is more for alignment. arXiv preprint arXiv:2305.11206, 2023.\n# A Prompt templates\nWe list the prompt templates for LLM judges. Please refer to our github repository 3 for full details\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5e91/5e917b1b-b639-4d6a-aac2-4b63b0093b2c.png\" style=\"width: 50%;\"></div>\n[System] Please act as an impartial judge and evaluate the quality of the responses provided by two  AI assistants to the user question displayed below. You should choose the assistant that  follows the user\u2019s instructions and answers the user\u2019s question better. Your evaluation  should consider factors such as the helpfulness, relevance, accuracy, depth, creativity,  and level of detail of their responses. Begin your evaluation by comparing the two  responses and provide a short explanation. Avoid any position biases and ensure that the  order in which the responses were presented does not influence your decision. Do not allow  the length of the responses to influence your evaluation. Do not favor certain names of  the assistants. Be as objective as possible. After providing your explanation, output your  final verdict by strictly following this format: \"[[A]]\" if assistant A is better, \"[[B]]\"  if assistant B is better, and \"[[C]]\" for a tie.\n[System] Please act as an impartial judge and evaluate the quality of the responses provided by two  AI assistants to the user question displayed below. You should choose the assistant that  follows the user\u2019s instructions and answers the user\u2019s question better. Your evaluation  should consider factors such as the helpfulness, relevance, accuracy, depth, creativity,  and level of detail of their responses. Begin your evaluation by comparing the two  responses and provide a short explanation. Avoid any position biases and ensure that the  order in which the responses were presented does not influence your decision. Do not allow  the length of the responses to influence your evaluation. Do not favor certain names of  the assistants. Be as objective as possible. After providing your explanation, output your  final verdict by strictly following this format: \"[[A]]\" if assistant A is better, \"[[B]]\"  if assistant B is better, and \"[[C]]\" for a tie. [User Question] {question} [The Start of Assistant A\u2019s Answer] {answer_a} [The End of Assistant A\u2019s Answer] [The Start of Assistant B\u2019s Answer] {answer_b}\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b57c/b57c1279-fb90-4bc0-a8b6-6aecae9c178f.png\" style=\"width: 50%;\"></div>\nPlease act as an impartial judge and evaluate the quality of the response provided by an  AI assistant to the user question displayed below. Your evaluation should consider factors  such as the helpfulness, relevance, accuracy, depth, creativity, and level of detail of  the response. Begin your evaluation by providing a short explanation. Be as objective as  possible. After providing your explanation, please rate the response on a scale of 1 to 10  by strictly following this format: \"[[rating]]\", for example: \"Rating: [[5]]\".\nFigure 6: The default prompt for single answer grading.\n3https://github.com/lm-sys/FastChat/tree/main/fastchat/llm_ju\n[System] Please act as an impartial judge and evaluate the quality of the responses provided by two  AI assistants to the user question displayed below. Your evaluation should consider  correctness and helpfulness. You will be given assistant A\u2019s answer, and assistant B\u2019s  answer. Your job is to evaluate which assistant\u2019s answer is better. You should  independently solve the user question step-by-step first. Then compare both assistants\u2019  answers with your answer. Identify and correct any mistakes. Avoid any position biases and  ensure that the order in which the responses were presented does not influence your  decision. Do not allow the length of the responses to influence your evaluation. Do not favor certain names of the assistants. Be as objective as possible. After providing your  explanation, output your final verdict by strictly following this format: \"[[A]]\" if  assistant A is better, \"[[B]]\" if assistant B is better, and \"[[C]]\" for a tie. [User Question] {question} [The Start of Assistant A\u2019s Answer] {answer_a} [The End of Assistant A\u2019s Answer] [The Start of Assistant B\u2019s Answer] {answer_b} [The End of Assistant B\u2019s Answer]\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/3c93/3c93b408-cc19-47a3-a4c5-ecc8b8f085ae.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 7: The chain-of-thought prompt for math and reasoning questions.</div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/0ceb/0ceb18f9-14e1-4f53-b80e-261c23c7cb51.png\" style=\"width: 50%;\"></div>\n[System] Please act as an impartial judge and evaluate the quality of the responses provided by two  AI assistants to the user question displayed below. Your evaluation should consider  correctness and helpfulness. You will be given a reference answer, assistant A\u2019s answer,  and assistant B\u2019s answer. Your job is to evaluate which assistant\u2019s answer is better.  Begin your evaluation by comparing both assistants\u2019 answers with the reference answer.  Identify and correct any mistakes. Avoid any position biases and ensure that the order in  which the responses were presented does not influence your decision. Do not allow the  length of the responses to influence your evaluation. Do not favor certain names of the  assistants. Be as objective as possible. After providing your explanation, output your  final verdict by strictly following this format: \"[[A]]\" if assistant A is better, \"[[B]]\"  if assistant B is better, and \"[[C]]\" for a tie. [User Question] {question} [The Start of Reference Answer] {answer_ref} [The End of Reference Answer] [The Start of Assistant A\u2019s Answer] {answer_a} [The End of Assistant A\u2019s Answer] [The Start of Assistant B\u2019s Answer] {answer_b} [The End of Assistant B\u2019s Answer]\nFigure 8: The prompt for reference-guided pairwise comparison.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/9854/985454a6-d5c7-4ff6-8dda-54528269ab56.png\" style=\"width: 50%;\"></div>\nFigure 9: The prompt for multi-turn pairwise comparison.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/f9ed/f9ed98c5-6e9d-45c1-9114-1fc664b9caf7.png\" style=\"width: 50%;\"></div>\nPlease act as an impartial judge and evaluate the quality of the response provided by an AI assistant to the user question. Your evaluation should consider correctness and  helpfulness. You will be given a reference answer and the assistant's answer. You  evaluation should focus on the assistant's answer to the second question. Begin your  evaluation by comparing the assistant's answer with the reference answer. Identify and  correct any mistakes. Be as objective as possible. After providing your explanation, you must rate the response on a scale of 1 to 10 by strictly following this format:  \"[[rating]]\", for example: \"Rating: [[5]]\".\nFigure 10: The prompt for reference-guided multi-turn single-answer grading.\n# B Case Study\nWe list several case studies. The examples are generated by gpt-4-0314. They may not be ful reproducible with future GPT-4 versions.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1a52/1a522068-a1fb-4915-8d86-605bc7add2b8.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Remember, showing respect for Japanese culture and customs is key to building strong business relationships in Japan.</div>\n<div style=\"text-align: center;\">Overall, it is important to be respectful,  punctual, and mindful of hierarchy when doing business in Japan.</div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/48ae/48ae0395-2354-48f1-b06e-2f38b145c1be.png\" style=\"width: 50%;\"></div>\nFigure 11: An example of position bias. When Assistant A is placed in the first position, GPT-4 thinks A is better, but its verdict changes when we swap the position of A and B. We observe similar pattern from other LLM judges such as Claude/GPT-3.5.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5015/50155fde-4e7c-4df8-a853-5fa90e43586f.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/042a/042ac5cc-ffd8-4892-b783-fd986612446a.png\" style=\"width: 50%;\"></div>\nThe term \"central dogma\" was coined by Francis  Crick, one of the co-discoverers of the structure  of DNA, in 1958.\n# GPT-3.5 Judgment:\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/cff6/cff6a9c0-9913-4437-ab5c-999212f98d61.png\" style=\"width: 50%;\"></div>\nFigure 12: An example of \u201crepetitive list\u201d attack to examine verbosity bias. Except for the two rephrased items (highlighted in red), Assistant A\u2019s answer is exactly the same as Assistant B. Both GPT-3.5 and Claude-v1 show a verbosity bias towards the longer and repetitive answer. Only GPT-4 successfully detected this attack.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/e61d/e61d73bf-3f12-46d0-9fa2-53dde0f8b668.png\" style=\"width: 50%;\"></div>\nFigure 13: With a default prompt, GPT-4 shows limited capability in grading math questions. Despi being able to answer the question itself, its judgment was influenced by the given answers, leading t arithmetic mistakes highlighted in yellow.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/2012/2012956f-a296-4a81-9c5c-9a06a971c63f.png\" style=\"width: 50%;\"></div>\nQuestion: Each problem consists of three statements. Based on the first two statements, the third statement  may be true, false, or uncertain. 1. Oranges cost more than apples. 2. Oranges cost less than bananas. 3. Bananas cost more than apples and bananas cost more than orange. If the first two statements are true, then the third statement is\n# Assistant A:\nIf oranges cost more than apples (statement 1) and oranges cost less than bananas (statement 2), then  it is not possible for bananas to cost less than  oranges and also cost more than both apples and  oranges (statement 3). Therefore, statement 3 is  false.\n# GPT-4 Judgment:\nBoth Assistant A and Assistant B provided accurate and relevant responses to the user\u2019s question.  They both concluded that the third statement is false based on the first two statements. However,  Assistant B\u2019s response is slightly clearer and more concise in explaining the contradiction between  the statements. Therefore, I choose Assistant B as the better response.\nBoth Assistant A and Assistant B provided accurate and relevant responses to the user\u2019s question.  They both concluded that the third statement is false based on the first two statements. However,  Assistant B\u2019s response is slightly clearer and more concise in explaining the contradiction between  the statements. Therefore, I choose Assistant B as the better response.\n[[B]]\nGPT-4\u2019s Answer (if asked separately):\nIf oranges cost more than apples (statement 1) and oranges cost less than bananas (statement 2), it  logically follows that bananas cost more than apples and bananas cost more than oranges, which is the third statement. So, if the first two statements are true, the third one is also true.\nFigure 14: An example of GPT-4\u2019s limited capability in grading reasoning question. Despite GPT-4 knows how to solve the question (if asked separately), it made a wrong judgement saying both assistants\u2019 wrong answers are correct.\n# Assistant B:\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b832/b8322bb6-bf97-4497-9a52-fa2d8a3ec13a.png\" style=\"width: 50%;\"></div>\nFigure 15: An example of GPT-4\u2019s wrong judgment with chain-of-thought prompt. We can see GPT-4 exactly copied Assistant B\u2019s answer (which contains arithmetic errors) and determined Assistant A\u2019s answer is incorrect. This suggest GPT-4\u2019s chain-of-thought process can be significantly influenced by the given answers despite we ask it to think independently.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7639/763968da-3e21-4129-a915-20dd929666c4.png\" style=\"width: 50%;\"></div>\nFigure 16: In this example, despite Assistant A correctly followed user\u2019s instruction to generate a concrete plan for the second example of its previous response, GPT-4 wrongly referred to the second example in Assistant B\u2019s response, resulting in a wrong judgment. This suggests the prompt design that breaks the questions into two prompts may cause LLM judge struggle to locate assistants\u2019 previous responses.\n# C Data Collection\nWe describe our data collection process for both MT-bench and Chatbot Arena\n# C.1 MT-bench human evaluation\nFigure 17 shows the normal voting interface. Figure 18 shows that we additionally show GPT-4\u2019s judgment to users and ask if it is reasonable when a human differs from GPT-4.\n\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/ce1b/ce1bc12a-4d79-4b39-874b-d20877799539.png\" style=\"width: 50%;\"></div>\nFigure 17: The screenshot of MT-bench data collection. We show an instruction similar to the prompt we give to GPT-4. We present questions from MT-bench and answers from two random anonymous assistants and ask which one is better. We present the first-turn conversation and ask humans to vote, then repeat the same procedure for the second-turn. A user can skip up to 5 questions if they are not confident. For some questions (e.g., math, reasoning), they can also see a reference solution.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/49f2/49f2f681-e2cd-4555-b782-916c3aa1c93e.png\" style=\"width: 50%;\"></div>\nFigure 18: The screenshot of MT-bench data collection. When human\u2019s vote differs from GPT-4, w additionally show GPT-4\u2019s judgment (red region in the screenshot) and ask the user to click one o the three buttons to decide whether GPT-4\u2019s judgment is reasonable.\nTo invite participants, we obtained their consent by letting them sign an application form. We pay them $20 for judging 20 questions, which corresponds to an hourly rate of around $35. The participants are mostly graduate students from more than ten universities.\n# C.2 Chatbot Arena\nFigure 19 shows a screenshot of Chatbot Arena. Users are required to accept the terms of use, which obtain their consent and give us the right to release the conversation data. The instructions are shown at the top of the interface. This is a free website. We do not pay users and any user can use this platform without registration. More introductions and analyses can be found at https: //lmsys.org/blog/2023-05-03-arena/.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7ca4/7ca48ff4-f995-4f8a-a2be-2529645cacef.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 19: The screenshot of Chatbot Arena.</div>\n# C.3 Data Release\nWe will clean the Personal Identifiable Information (PII) and tag toxic conversations with OpenAI moderation APIs for our dataset release.\n# D Additional Experimental Results\nWe present some additional experimental results.\n# D.1 Position bias\nWe test two more prompts and present the full results in Table 9 \u201cscore\u201d changes the default prompt to let the model output two absolute scores instead of which one is better. \u201cshort\u201d is a simplified version of our default prompt by removing instructions like \u201cAvoid any position bias..\u201d, \u201cBegin your evaluation ... and provide a short explanation\u201d. We can find different prompts have different effects on different models. For example, the \"score\" prompt can increase the consistency of GPT-3.5 but decreases it for Claude-v1 and GPT-4.\nTable 9: Position bias on different models and prompts. Consistency is the percentage of cases where a judge gives consistent results when swapping the order of two assistants. \u201cBiased toward first\u201d is the percentage of cases when a judge favors the first answer. \u201cError\u201d indicates wrong output formats. The two largest numbers in each column are in bold.\nJudge\nPrompt\nConsistency\nBiased toward first\nBiased toward second\nError\nclaude-v1\ndefault\n23.8%\n75.0%\n0.0%\n1.2%\nrename\n56.2%\n11.2%\n28.7%\n3.8%\nscore\n20.0%\n80.0%\n0.0%\n0.0%\nshort\n22.5%\n75.0%\n2.5%\n0.0%\ngpt-3.5-turbo\ndefault\n46.2%\n50.0%\n1.2%\n2.5%\nrename\n51.2%\n38.8%\n6.2%\n3.8%\nscore\n55.0%\n33.8%\n11.2%\n0.0%\nshort\n38.8%\n57.5%\n3.8%\n0.0%\ngpt-4\ndefault\n65.0%\n30.0%\n5.0%\n0.0%\nrename\n66.2%\n28.7%\n5.0%\n0.0%\nscore\n51.2%\n46.2%\n2.5%\n0.0%\nshort\n62.5%\n35.0%\n2.5%\n0.0%\nAs shown in Table 10, position bias is more noticeable on open questions like writing and stem/humanity knowledge questions. On math and coding questions, LLM judges are more confident even though their judgments can often be wrong, as we show in Section 3.3. Finally, we study how the model pairs influence position bias by using GPT-4 and the default prompt to judge three different model pairs. As shown in Table 11, the position bias is more noticeable for models with close performance and can almost disappear when the performance of the two models differs a lot.\n<div style=\"text-align: center;\">osition bias on different categories. The two largest numbers in each colum</div>\n<div style=\"text-align: center;\">n different categories. The two largest numbers in each column are in bo</div>\nCategory\nConsistent\nBiased toward first\nBiased toward second\nwriting\n42.0%\n46.0%\n12.0%\nroleplay\n68.0%\n30.0%\n2.0%\nreasoning\n76.0%\n20.0%\n4.0%\nmath\n86.0%\n4.0%\n10.0%\ncoding\n86.0%\n14.0%\n0.0%\nextraction\n78.0%\n12.0%\n10.0%\nstem\n44.0%\n54.0%\n2.0%\nhumanities\n36.0%\n60.0%\n4.0%\n<div style=\"text-align: center;\">Table 11: Position bias on different model pairs.</div>\nTable 11: Position bias on different model pairs.\nPair\nConsistent\nBiased toward first\nBiased toward second\nGPT-3.5 vs Claude-V1\n67.5%\n23.8%\n8.8%\nGPT-3.5 vs Vicuna-13B\n73.8%\n23.8%\n2.5%\nGPT-3.5 vs LLaMA-13B\n98.8%\n1.2%\n0.0%\nWe examine how few-shot examples improve LLM judges. As shown in Table 12, they improve the consistency of all three LLM judges significantly. It almost alleviates the position bias of GPT-4, bu moves the position bias of GPT-3.5 from the first position to the second position. We then measure the agreement between few-shot GPT-4 pairwise comparison and humans on MT-bench, but found i performs similarly to zero-shot GPT-4 pairwise comparison.\n<div style=\"text-align: center;\">Table 12: Improvements of the few-shot judge on consistency for position bias.</div>\nTable 12: Improvements of the few-shot judge on consistency for position bias.\nModel\nPrompt\nConsistency\nBiased toward first\nBiased toward second\nError\nClaude-v1\nzero-shot\n23.8%\n75.0%\n0.0%\n1.2%\nfew-shot\n63.7%\n21.2%\n11.2%\n3.8%\nGPT-3.5\nzero-shot\n46.2%\n50.0%\n1.2%\n2.5%\nfew-shot\n55.0%\n16.2%\n28.7%\n0.0%\nGPT-4\nzero-shot\n65.0%\n30.0%\n5.0%\n0.0%\nfew-shot\n77.5%\n10.0%\n12.5%\n0.0%\n# D.3 Agreement Evaluation\nAgreement calculation. We define the agreement between two types of judges as the probability of randomly selected individuals (but not identical) of each type agreeing on a randomly selected question. For example, if we are comparing GPT-4 and Claude, the agreement is the probability of GPT-4 and Claude agreeing on the vote for a randomly selected question. If we are comparing GPT-4 and humans, the agreement is the probability of GPT-4 and a randomly selected human agreeing on the vote for a randomly selected question. The agreement among humans themselves is the probability of two randomly selected but not identical humans agreeing on the vote for a randomly selected question. Note that the agreement among humans could be a lower estimation compared to the agreement of GPT4 and humans. Consider three humans who voted \u201cA\u201d, \u201cA\u201d, and \u201cB\u201d for a question, respectively. The agreement among them is only 1 3, as there are three pairs \u201c(A, A)\u201d, \u201c(A, B)\u201d, and \u201c(A, B)\u201d. But the agreement between GPT4 and those three is 2 3 if GPT4 voted \u201cfirst\u201d and 1 3 otherwise. Therefore, to have a more comprehensive understanding of what happened, we introduce a new judge type called human-majority, which considers the majority of human votes for each question. The agreement between GPT4 and human-majority is then calculated as the probability of GPT4 agreeing with the majority of human votes on a randomly selected question. The upper bound of the agreement between GPT-4 and humans is the agreement between human-majority and human. When there is no majority vote for a question, the agreement is counted by an even split. For example, if there are an equal number of \u201cA\u201d and \u201cB\u201d human votes for a question, and GPT4 votes \u201cA\u201d, the agreement is counted as 1 2 on this question. More results. Table 13 shows more agreement results on MT-bench. In addition to expert labelers (denoted as \u201cHuman\u201d), we also include author votes (denoted as \u201cAuthor\u201d).\nMore results. Table 13 shows more agreement results on MT-bench. In addition to expert labe (denoted as \u201cHuman\u201d), we also include author votes (denoted as \u201cAuthor\u201d).\n# D.4 Category-wise scores with single-answer grading\nWe use single-answer grading to evaluate 6 models on MT-bench and plot the category-wise scores in Figure 20.\nTable 13: Agreement between two types of judges on MT-bench. \u201cG4-P\u201d and \u201cG4-S\u201d denote GPT-4 with pairwise comparison and single-answer grading, respectively. \u201cC\u201d denotes Claude. \u201cHuman\u201d denotes expert labelers (excluding authors). \u2018Human-M\u201d denotes the majority vote of humans. The single-answer grading can be converted into pairwise comparison results for calculating the agreement. We report two setups: \u201cS1\u201d includes non-tie, tie, and inconsistent (due to position bias) votes and counts inconsistent as a tie; \u201cS2\u201d only includes non-tie votes. The agreement between two random judges under each setup is denoted as \u201cR=\u201d. The top value in each cell is the agreement, and the bottom gray value is #votes.\nthe bottom gray value is #votes.\nSetup\nS1 (R = 33%)\nS2 (R = 50%)\nJudge\nG4-S\nC\nAuthor\nHuman\nHuman-M\nG4-S\nC\nAuthor\nHuman\nHuman-M\nG4-P\n70%\n1138\n63%\n1198\n69%\n345\n66%\n1343\n67%\n821\n97%\n662\n94%\n582\n92%\n201\n85%\n859\n85%\n546\nG4-S\n-\n66%\n1136\n67%\n324\n60%\n1280\n60%\n781\n-\n90%\n563\n94%\n175\n85%\n739\n85%\n473\nC\n-\n-\n58%\n343\n54%\n1341\n55%\n820\n-\n-\n89%\n141\n85%\n648\n86%\n414\nAuthor\n-\n-\n69%\n49\n65%\n428\n55%\n93\n-\n-\n87%\n31\n83%\n262\n76%\n46\nHuman\n-\n-\n-\n63%\n721\n81%\n892\n-\n-\n-\n81%\n479\n90%\n631\nSetup\nS1 (R = 33%)\nS2 (R = 50%)\nJudge\nG4-S\nAuthor\nHuman\nHuman-M\nG4-S\nAuthor\nHuman\nHuman-M\nG4-P\n70%\n1161\n66%\n341\n66%\n1325\n68%\n812\n95%\n727\n88%\n205\n85%\n864\n85%\n557\nG4-S\n-\n65%\n331\n59%\n1285\n61%\n783\n-\n89%\n193\n84%\n776\n85%\n506\nAuthor\n-\n67%\n49\n68%\n413\n63%\n87\n-\n87%\n31\n86%\n273\n84%\n54\nHuman\n-\n-\n67%\n707\n83%\n877\n-\n-\n82%\n474\n91%\n629\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6295/6295b01b-a1d3-4350-8fd8-4ab7b207adcf.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 20: Category-wise scores of 6 models on MT-bench.</div>\n# E Training Details of Vicuna Models\nVicuna is created by fine-tuning a LLaMA base model using user-shared conversations gathered from ShareGPT.com with its public APIs. ShareGPT is a website where users can share their ChatGPT conversations. To ensure data quality, we convert the HTML back to markdown and filter out some inappropriate or low-quality samples, which results in 125K conversations after data cleaning.4 We then divide lengthy conversations into smaller segments that fit the model\u2019s maximum context length. We construct three training datasets with different scales from this cleaned ShareGPT dataset. Their statistics are in Table 8, where we also compare it with Alpaca [38] dataset. \u201cAll\u201d is the full dataset. \u201cSingle\u201d only includes the first turn of each conversation. \u201cSelected\u201d is a small high-quality dataset of 3K sequences. To construct the \u201cSelected\u201d dataset, we pick sequences that include at least 3 turns of conversations generated by GPT-4 and run a clustering algorithm to divide them into 3K clusters and pick the centroid of each cluster. All models (Vicuna-7B/13B) are trained with the same hyperparameters: global batch size=128, learning=2e-5, epochs=3, seq length=2048. Except for \u201cSelected\u201d, which we train for 5 epochs. The training code is built on top of the Alpaca code but additionally handles multi-turn conversations. The training is done with 8x A100 GPUs. The longest single training run takes around 2 days. We utilize SkyPilot [49] managed spot instances for saving training costs and FlashAttention [11] for memory optimizations. The training code is available at https://github.com/lm-sys/FastChat.\n<div style=\"text-align: center;\">Table 14: Dataset statistics</div>\nTable 14: Dataset statistics\nDataset Name\nAlpaca\nSelected\nSingle\nAll\n#Token\n4.4M\n4.8M\n184M\n370M\n#Sequence\n52K\n3K\n257K\n257K\nAvg. turns of conversation\n1.0\n4.0\n1.0\n2.9\nAvg. response length (token)\n65\n343\n473\n373\nn this study, we use more data (125K) than the version in our earlier blog post (7\n# F Exploring Vicuna as a judge\nIn this paper, we mostly evaluate the ability of close-sourced models such as GPT-4 as a proxy for human evaluations. However, model services such as GPT-4 can also become expensive with a growing number of evaluations. On the other hand, popular open-sourced LLMs, e.g. Vicuna-13B shows strong language understanding capability, and are much cheaper than close-sourced LLMs. In this section, we further explore the potential of using Vicuna-13B as a more cost-friendly proxy.\n# F.1 Zero-Shot Vicuna\nWhen using as-it-is (zero-shot), Vicuna-13B noticeably suffers from limitations we discuss, e.g. position bias. As shown in Table 15, Vicuna-13B has a consistency rate from 11.2% to 16.2% across different prompt templates, much lower than all the closed-sourced models. In addition, it has a high error rate (from 22.5% to 78.8%) because of its weaker instruction-following capability. In many scenarios, Vicuna-13B provides responses such as \"Answer A is better than answer B\", without following the pre-defined template. These responses are rendered as natural languages and are difficult to be parsed automatically, making the model less useful in a scalable and automatic evaluation pipeline.\n# F.2 Arena Fine-tuned Vicuna\nTraining Due to the incapability of the zero-shot Vicuna-13B model, we further finetune the model with human votes from Chatbot Arena. Specifically, we randomly sample 22K single-turn votes from the arena, covering all models supported by the time of this paper submission (GPT-4, GPT-3.5, Claude-v1, Vicuna-13b, Vicuna-7b, Koala-13B, Alpaca-13B,LLaMA-13B, Dolly-12B, FastChat-T5, RWKV-4-Raven, MPT-Chat, OpenAssistant, ChatGLM, and StableLM), to expose the model with a wider range of chatbot outputs and human preferences. We use 20K votes for training, and 2K for validation. To address the aforementioned weak instruction following problem, we formulate the problem as a 3-way sequence classification problem. Thus, the model simply needs to predict which one of the chat-bot outputs is better (or tie), without needing to exactly following the provided answer template. In particular, we construct an input by using the default prompt and the two model answers. The labels are A, B, and tie (including both-bad-vote and tie-vote). We train for 3 epochs with a cosine learning rate scheduler and a 2e-5 maximum learning rate. We use the 2K validation dataset to choose hyper-parameters, and test on the same 3K dataset in the main body of the paper. Position bias results The results for position bias are provided in Table 15. The consistency improves significantly from 16.2% to 65.0%. Due to the classification formulation, every output is recognizable (error rate 0%). In addition, we measure the classification accuracy over the test dataset. Agreement results It achieves 56.8% when including all three labels, and 85.5% when excluding tie predictions and labels, significantly outperforming random guesses of 33% and 50% respectively, and show positive signals to match GPT-4 (66% and 87% respectively). In conclusion, a further fine-tuned Vicuna-13B model shows strong potential to be used as a cheap open-sourced replacement for expensive closed-sourced LLMs. A similar conclusion is also found by a concurrent paper[42]. Table 15: Position bias of the Vicuna-13B model without and with further fine-tuning. We denote them as Vicuna-13B-Zero-Shot and Vicuna-13B-Fine-Tune respectively. Consistency is the percentage of cases where a judge gives consistent results when swapping the order of two assistants. \u201cBiased toward first\u201d is the percentage of cases when a judge favors the first answer. \u201cError\u201d indicates wrong output formats. The largest number in each column is in bold.\nJudge\nPrompt\nConsistency\nBiased toward first\nBiased toward second\nError\nVicuna-13B-Zero-Shot\ndefault\n15.0%\n53.8%\n8.8%\n22.",
    "paper_type": "benchmark",
    "attri": {
        "background": {
            "problem background": "The proliferation of LLM-based chat assistants has highlighted the inadequacy of existing benchmarks in measuring human preferences, leading to a need for new evaluation methods that align better with user experiences.",
            "purpose of benchmark": "The benchmarks are intended to evaluate and compare the performance of LLMs in multi-turn conversations and instruction-following tasks, addressing the gap in assessing human preferences."
        },
        "problem": {
            "definition": "The benchmark is designed to address the challenge of evaluating LLMs' effectiveness in open-ended, multi-turn dialogues, which traditional benchmarks fail to adequately assess.",
            "key obstacle": "Existing benchmarks primarily focus on closed-ended questions and do not capture the nuances of user preferences in conversational contexts."
        },
        "idea": {
            "intuition": "The idea arose from the observation that traditional evaluation methods do not reflect user satisfaction and that LLMs could be used as judges to provide scalable assessments.",
            "opinion": "The authors believe that using LLMs as judges can significantly enhance the evaluation process, making it more efficient and aligned with human preferences.",
            "innovation": "The introduction of MT-bench and Chatbot Arena as new benchmarks distinguishes them from previous ones by focusing on human preferences and multi-turn interactions rather than just core capabilities.",
            "benchmark abbreviation": "MT-bench and Chatbot Arena"
        },
        "dataset": {
            "source": "The dataset was created from a combination of expert-designed questions and crowdsourced user interactions.",
            "desc": "MT-bench consists of 80 high-quality multi-turn questions that cover various categories and are designed to challenge LLMs' capabilities.",
            "content": "The dataset includes text-based questions across categories like writing, reasoning, and math.",
            "size": "80",
            "domain": "Conversational AI",
            "task format": "Multi-turn dialogue"
        },
        "metrics": {
            "metric name": "Agreement Rate, Win Rate",
            "aspect": "Model performance in aligning with human preferences",
            "principle": "The metrics were chosen to reflect the degree of alignment between LLM judges and human evaluations.",
            "procedure": "Model performance was evaluated through pairwise comparisons and expert ratings of responses in the benchmarks."
        },
        "experiments": {
            "model": "GPT-4, GPT-3.5, Claude-v1, Vicuna-13B",
            "procedure": "Models were tested using the MT-bench and Chatbot Arena datasets, with evaluations conducted through human and LLM judges.",
            "result": "The results showed that LLM judges achieved over 80% agreement with human preferences, indicating their effectiveness in evaluation.",
            "variability": "Variability in results was accounted for by conducting multiple trials and utilizing a diverse set of questions and models."
        },
        "conclusion": "The study concludes that LLMs can serve as effective judges for evaluating chatbot performance, achieving high agreement rates with human evaluators, thus establishing a new standard for benchmark evaluations.",
        "discussion": {
            "advantage": "The benchmarks enhance the ability to assess LLMs based on human preferences, providing a more comprehensive evaluation framework.",
            "limitation": "Potential biases in LLM judges, such as position and verbosity biases, may affect evaluation consistency.",
            "future work": "Future research could focus on refining evaluation methods, addressing biases, and expanding the benchmarks to include additional dimensions of chatbot performance."
        },
        "other info": {
            "additional details": {
                "info1": "The datasets are publicly available for further research.",
                "info2": {
                    "info2.1": "The benchmarks emphasize the importance of human alignment in evaluating LLMs.",
                    "info2.2": "A hybrid evaluation framework combining traditional and new benchmarks is recommended for comprehensive assessments."
                }
            }
        }
    },
    "mount_outline": [
        {
            "section number": "4",
            "key information": "The benchmarks are intended to evaluate and compare the performance of LLMs in multi-turn conversations and instruction-following tasks, addressing the gap in assessing human preferences."
        },
        {
            "section number": "4.1",
            "key information": "The benchmark is designed to address the challenge of evaluating LLMs' effectiveness in open-ended, multi-turn dialogues, which traditional benchmarks fail to adequately assess."
        },
        {
            "section number": "4.5",
            "key information": "The introduction of MT-bench and Chatbot Arena as new benchmarks distinguishes them from previous ones by focusing on human preferences and multi-turn interactions rather than just core capabilities."
        },
        {
            "section number": "5",
            "key information": "Potential biases in LLM judges, such as position and verbosity biases, may affect evaluation consistency."
        },
        {
            "section number": "6",
            "key information": "Future research could focus on refining evaluation methods, addressing biases, and expanding the benchmarks to include additional dimensions of chatbot performance."
        }
    ],
    "similarity_score": 0.6746127896041585,
    "image": [
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6f6a/6f6a3fcc-8816-4c28-b33b-c1c5b3112374.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4b8d/4b8de49e-c63e-4ab6-bb37-4936552e2801.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/845b/845b9f80-6971-4edb-b34b-da78d332821a.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/f3f4/f3f4b40e-6488-4d2c-b259-6fdbee969a1b.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/803f/803f4bc9-2168-4be9-a36b-fe2cf04e1ad4.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/dc19/dc19db78-6658-429c-b5b7-0335535bf606.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4147/4147be65-c3e0-4091-8170-bdda18fc5dd4.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/dc30/dc3009d5-ca1b-4572-88ed-c18218cdef99.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5e91/5e917b1b-b639-4d6a-aac2-4b63b0093b2c.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b57c/b57c1279-fb90-4bc0-a8b6-6aecae9c178f.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/3c93/3c93b408-cc19-47a3-a4c5-ecc8b8f085ae.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/0ceb/0ceb18f9-14e1-4f53-b80e-261c23c7cb51.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/9854/985454a6-d5c7-4ff6-8dda-54528269ab56.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/f9ed/f9ed98c5-6e9d-45c1-9114-1fc664b9caf7.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1a52/1a522068-a1fb-4915-8d86-605bc7add2b8.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/48ae/48ae0395-2354-48f1-b06e-2f38b145c1be.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5015/50155fde-4e7c-4df8-a853-5fa90e43586f.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/042a/042ac5cc-ffd8-4892-b783-fd986612446a.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/cff6/cff6a9c0-9913-4437-ab5c-999212f98d61.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/e61d/e61d73bf-3f12-46d0-9fa2-53dde0f8b668.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/2012/2012956f-a296-4a81-9c5c-9a06a971c63f.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b832/b8322bb6-bf97-4497-9a52-fa2d8a3ec13a.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7639/763968da-3e21-4129-a915-20dd929666c4.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/ce1b/ce1bc12a-4d79-4b39-874b-d20877799539.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/49f2/49f2f681-e2cd-4555-b782-916c3aa1c93e.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7ca4/7ca48ff4-f995-4f8a-a2be-2529645cacef.png",
        "https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6295/6295b01b-a1d3-4350-8fd8-4ab7b207adcf.png"
    ],
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-11-0214_large/papers/Judging LLM-as-a-Judge with MT-B.json"
}