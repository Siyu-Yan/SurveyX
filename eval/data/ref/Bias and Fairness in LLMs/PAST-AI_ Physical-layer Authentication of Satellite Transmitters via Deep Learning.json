{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:2010.05470",
    "title": "PAST-AI: Physical-layer Authentication of Satellite Transmitters via Deep Learning",
    "abstract": "Physical-layer security is regaining traction in the research community, due to the performance boost introduced by deep learning classification algorithms. This is particularly true for sender authentication in wireless communications via radio fingerprinting. However, previous research efforts mainly focused on terrestrial wireless devices while, to the best of our knowledge, none of the previous work took into consideration satellite transmitters. The satellite scenario is generally challenging because, among others, satellite radio transducers feature non-standard electronics (usually aged and specifically designed for harsh conditions). Moreover, the fingerprinting task is specifically difficult for Low-Earth Orbit (LEO) satellites (like the ones we focus in this paper) since they orbit at about 800Km from the Earth, at a speed of around 25,000Km/h, thus making the receiver experiencing a down-link with unique attenuation and fading characteristics. In this paper, we propose PAST-AI, a methodology tailored to authenticate LEO satellites through fingerprinting of their IQ samples, using advanced AI solutions. Our methodology is tested on real data -- more than 100M I/Q samples -- collected from an extensive measurements campaign on the IRIDIUM LEO satellites constellation, lasting 589 hours. Results are striking: we prove that Convolutional Neural Networks (CNN) and autoencoders (if properly calibrated) can be successfully adopted to authenticate the satellite transducers, with an accuracy spanning between 0.8 and 1, depending on prior assumptions. The proposed methodology, the achieved results, and the provided insights, other than being interesting on their own, when associated to the dataset that we made publicly available, will also pave the way for future research in the area.",
    "bib_name": "oligeri2020pastaiphysicallayerauthenticationsatellite",
    "md_text": "# PAST-AI: Physical-layer Authentication of Satellite Transmitters via Deep Learning\nGabriele Oligeri, Simone Raponi, Savio Sciancalepore, Roberto Di Pietro\n# Gabriele Oligeri, Simone Raponi, Savio Sciancalepore, Roberto Di Pietro\nDivision of Information and Computing Technology College of Science and Engineering, Hamad Bin Khalifa University - Doha, Qatar {goligeri, sraponi, ssciancalepore, rdipietro}@hbku.edu.qa\nAbstract\u2014Physical-layer security is regaining traction in the research community, due to the performance boost introduced by deep learning classification algorithms. This is particularly true for sender authentication in wireless communications via radio fingerprinting. However, previous research efforts mainly focused on terrestrial wireless devices while, to the best of our knowledge, none of the previous work took into consideration satellite transmitters. The satellite scenario is generally challenging because, among others, satellite radio transducers feature non-standard electronics (usually aged and specifically designed for harsh conditions). Moreover, the fingerprinting task is specifically difficult for Low-Earth Orbit (LEO) satellites (like the ones we focus in this paper) since they orbit at about 800 Km from the Earth, at a speed of around 25, 000 Km/h, thus making the receiver experiencing a down-link with unique attenuation and fading characteristics. In this paper, we propose PAST-AI, a methodology tailored to authenticate LEO satellites through fingerprinting of their IQ samples, using advanced AI solutions. Our methodology is tested on real data\u2014more than 100M I/Q samples\u2014 collected from an extensive measurements campaign on the IRIDIUM LEO satellites constellation, lasting 589 hours. Results are striking: we prove that Convolutional Neural Networks (CNN) and autoencoders (if properly calibrated) can be successfully adopted to authenticate the satellite transducers, with an accuracy spanning between 0.8 and 1, depending on prior assumptions. The proposed methodology, the achieved results, and the provided insights, other than being interesting on their own, when associated to the dataset that we made publicly available, will also pave the way for future research in the area.\narXiv:2010.05470v\n# I. INTRODUCTION\nPhysical-layer authentication relies on detecting and identifying unique characteristics embedded in over-the-air radio signals, thus enabling the identification of the hardware of the transmitting source [1], [2]. Wireless Physical-layer authentication is also known as radio fingerprinting when referring to the challenge of both detecting and extracting features from the received signal (fingerprint), which can uniquely identify the transmitting source [3], [4]. Physical-layer authentication can significantly enhance the security and privacy of wireless channels in two adversarial scenarios: (i) spoofing; and, (ii) replay attacks. The former involves a rogue transmitting source attempting to impersonate a legitimate one, while the latter assumes the adversary being able to re-transmit previously eavesdropped messages [5]. Despite spoofing detection can be achieved by authenticating the transmitting source with standard cryptographic techniques\n(e.g., digital signatures), in many scenarios involving massive deployments (e.g., IoT), difficult to reach devices (e.g., satellites), or when the cryptography-induced overhead is considered excessive, digital signatures might be inefficient [6]. Alternative solutions could involve crowd-sourcing, i.e., crosschecking context information to validate the transmitting source [7], [8]. Replay attacks can be even more difficult to detect, being dependent on specific protocol flaws: the adversary re-transmits encrypted information, which will be considered as valid if not timestamped. Both spoofing and replay attacks can be prevented if the receiver can authenticate the hardware of the transmitting source [9]. Many researchers have already undertaken the challenge of extracting fingerprints and developing effective detection algorithms to extract and match the fingerprints (see Sec. II for an overview). The cited tasks have been mainly achieved by resorting to dedicated hardware at the receiver side, featuring high sampling resolution and better signal quality. Indeed, Software-Defined Radios (SDRs) played a major role as an enabling technology for radio fingerprinting. Specifically, SDRs provide both high-resolution bandwidth (thus exposing the features of the transmitting source) and high signal-tonoise ratio (thus facilitating the extraction of the features to the back-end algorithms). Unfortunately, radio noise still represents the major issue for all the state-of-the-art solutions. Indeed, the fingerprint of the transmitting source is mixed\u2014 drown, in many cases\u2014with the noise of the radio channel. Therefore, discriminating between the needed features and the noise brings back the problem of developing effective algorithms to achieve the cited objective. Recently, Convolutional Neural Networks (CNNs) have been adopted for radio fingerprinting in several scenarios, such as ADS-B, WiFi, and Zigbee, to name a few [10], [11], [12], [13]. The idea behind the adoption of CNNs relies on exploiting their multidimensional mapping during the learning process to detect and extract reliable radio fingerprints. However, all of the recent contributions took into account terrestrial links, only. Although achieving interesting performance, there are still some open fundamental questions related to CNNs, such as the intrinsic time-stationarity nature of the CNNs and how the wireless channel (in terms of attenuation and fading) affects the learning and detection processes [13]. Recent results [13]\nbased on real measurements on terrestrial wireless links confirmed that the wireless channel significantly impacts the classification accuracy (up to 80%), thus confirming the need for more effective classification techniques. It is worth noting that no prior contribution has been made up to date to physical layer authentication of satellite transmitters (in particular the IRIDIUM constellation), given their intrinsic challenges. Indeed, LEO satellites, which IRIDIUM constellation is part of, are characterized by unique features: the satellite transmitter is at around 800Km from earth, and moves at about 7Km/s with a pass duration of about 8 minutes [8]\u2014involving a radio link (quality) that significantly changes over the time. Indeed, we observe that attenuation and multi-path fading can significantly change when the satellite is either on top of the receiver or far away, just over the horizon (before disappearing). Therefore, the noise affecting the satellite link makes radio fingerprinting in satellite a unique, more challenging scenario, requiring additional research. Contribution. This paper provides the following contributions: \u2022 We push further the current state-of-the-art in physicallayer authentication, by proposing PAST-AI, i.e., a set of new methodologies specifically designed to perform radio fingerprinting over LEO satellite links. \u2022 We propose a new technique to represent IQ samples in input to AI classification algorithms. \u2022 We prove that Convolutional Neural Network (CNN) and autoencoders can be effectively adopted to fingerprint radio satellite transmitters. \u2022 We propose two different classification scenarios, i.e., intra-constellation satellite authentication and satellite authentication in the wild, which fit the adopted classification algorithm and their assumptions. \u2022 We provide several insights to properly calibrate the algorithm parameters, achieving overwhelming performance, i.e., an accuracy greater than 0.8 for the former scenario and average Area Under the Curve (AUC) equal to 1 for the latter (vast majority of the satellites). Paper organization. The rest of this paper is organized as follows. Section II reviews related work on physical-layer fingerprinting; Section III introduces background details on IQ modulation, AI techniques, and the IRIDIUM satellite constellation; Section IV illustrates the data acquisition campaign and the initial data processing; Section V introduces the PASTAI methodology; Section VI focuses on the intra-constellation satellite authentication scenario; Section VII details the authentication scenario with minimal satellites\u2019 knowledge; and, finally, Section VIII tightens the conclusions.\n# II. RELATED WORK\nPhysical-layer authentication solutions based on the analysis of raw IQ samples have gained significant popularity in the last years, and have been adopted in a variety of scenarios and communication technologies. For instance, in the context of mobile cellular networks, the authors in [14] proposed FBSLeuth, a framework able to\nidentify rogue 2G mobile cellular base stations by analyzing the hardware impairments of the transmitting devices, such as the error vector magnitude of the signals, the phase error, the frequency error, the IQ offset, the IQ quadrature skew, and the IQ imbalance. To identify the rogue base stations, they used supervised Machine Learning (ML) techniques, specifically the Support Vector Machines (SVM) classification algorithm. In the same context, the authors in [15] relied on Differential Constellation Trace Figure (DCTF)-based features and CNNs to identify mobile phones. Specifically, the authors used image discrimination techniques to discriminate among six (6) different mobile phones, with outstanding accuracy and a reduced observation window. In the context of WiFi, the authors in [16] first were able to distinguish among Commercial Off-The-Shelf (COTS) WiFi devices and SDRs emitting similar WiFi-compliant signals. Specifically, using a CNN-based architecture operating on raw IQ samples, they could identify precisely among sixteen (16) SDRss. The authors further extended their work in [11], showing how the classification accuracy can reach over 99% by smartly removing the noise effects of the wireless channel. The impact of the wireless channel on wireless radio fingerprinting has been specifically studied by the authors in [13]. They evaluated the accuracy of CNN-based methods in several operating conditions, i.e., in an anechoic chamber, in the wild, and using cable connections, investigating both WiFi and Automatic Dependent Surveillance - Broadcast (ADS-B) signals (employed in the aviation domain). They revealed that the wireless channel can severely affect the accuracy of the radio fingerprinting, degrading the classification accuracy up to the 85% in low-Signal-to-Noise Ratio (SNR) regime. At the same time, they showed that equalizing IQ data can slightly enhance the quality of the fingerprinting, when possible. Similar results and findings were achieved also by the authors in [17]. By working on the same dataset, the authors confirmed that partial equalization of the samples can improve the accuracy of the CNN-based architecture in identifying the transmitter, while the accuracy generally decreases with the decrease of the SNR. ADS-B signals have been investigated also by the authors in [12], by using an autonomously-made dataset. Specifically, the authors compared the performance of three different Deep Neural Networks (DNNs)s, characterized by a different number of hidden layers and nodes (i.e., neurons), and they showed that the performance of the classifiers slightly decreases when the number of considered aircraft increases, as well as by reducing the training set ratio. The IQ fingerprinting technique is particularly promising for the Internet of Things (IoT) domain, as it could avoid the installation of dedicated cryptography techniques on memorylimited and computationally-constrained devices. These considerations motivated several studies, applying IQ fingerprinting techniques on IoT devices. For instance, the authors in [18] relied on multiple deep learning models, i.e., CNN, DNN, and Recurrent Neural Network (RNN), to discriminate among six (6) identical Zigbee devices, showing that the DNN model\nslightly outperforms the others, especially with short windows sizes. The same number of devices has been adopted also by the authors in [19], which used CNNs, dimensionality reduction, and de-correlation to further improve the performance of the classification task for IoT devices. Recently, the authors in [10] demonstrated that stacked autoencoders can be used to enhance the performance of CNNbased methods for IQ fingerprinting, especially in low-SNR scenarios. To verify their findings, they used twenty-seven (27) CC2530 micro-controllers, and they were able to distinguish each of them with accuracy over 90 % starting from 5 dB SNR. Another recent contribution is provided in [20], where the authors identified mm-WAVE transmitters operating at the frequency of 60 GHz by analyzing the spatio-temporal information of the beam patterns created by the antennas in the array. Despite the significant number of contributions in the field of IQ fingerprinting, the satellite scenario has not yet been considered, thus still representing a challenging research problem. Indeed, being the satellite located at a significant altitude from the ground, the signals are typically characterized by a low SNR and a significant noise level, thus making the fingerprinting task more challenging. At the time of this writing, the only contribution working on the fingerprinting of satellites is [21]. The authors argue to be able to identify Global Positioning System (GPS) spoofing attacks by analyzing the received IQ samples, by using a statistical approach based on scores computed over characterizing Multi-Variate Normal (MVN) distributions. However, they extracted the IQ samples after the IQ demodulation at the Radio-Frequency (RF) front-end, and specifically after the E-P-L correlators in the receiving chain. Therefore, their solution does not act on raw IQ samples, and applies only to US GPS satellites. Finally, note that the authors focused on the detection of GPS spoofing attacks, and they distinguish SDRs from legitimate satellites, not the specific transmitting satellite. Conversely, in this paper we identify the specific satellite transmitting an IRIDIUM signal, considering raw IQ samples, before any demodulation operation. As a result, our methodology applies to a wider set of scenarios than spoofing attacks, and it is potentially applicable to all Low-Earth Orbit (LEO) satellites constellations adopting Phase Shift Keying (PSK) modulation techniques.\n# III. BACKGROUND\nIn this section we revise the technical background providing the needed information that will be leveraged in next sections.\n# A. IQ (de)modulation\nDigital modulation schemes involve the processing of a (low frequency) baseband signal, i.e., a bit sequence bi \u2208{0, 1} with i \u2208[1, N], to make it suitable for the transmission virtually anywhere in the RF spectrum (high frequency). Several techniques have been developed to achieve the aforementioned\nresult, but IQ modulation is the most adopted due to practicality: efficient IQ (de)modulators are available as inexpensive System on Chip (SoC) technology. Figure 1 shows the block diagram of a typical communication system involving IQ modulation, RF transmission, and IQ demodulation. According to the scheme, a sequence of bits should be preliminary converted into IQ symbols, i.e., i(t) and q(t) in Fig. 1. Different families of modulation schemes are possible, e.g., Amplitude Shift Keying (ASK), Frequency Shift Keying (FSK), or Phase Shift Keying (PSK), depending on how the sequence of bits is converted to the in-phase i(t) and quadrature q(t) components (recall Fig. 1).\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/52ee/52ee3d46-cf95-4b77-80d8-95df6289e804.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 1: Modulation and Demodulation of a digital signal represented by its phase i(t) and quadrature q(t) components.</div>\nAs a toy example, we consider the Quadrature Phase Shift Keying (QPSK or 4-PSK)\u2014the one adopted by Iridium is very similar and we will discuss it in the next sections. QPSK maps pair of bits into (four) IQ symbols, i.e, {1, 1} \u2192s0, {0, 1} \u2192s1, {0, 0} \u2192s2, and {1, 0} \u2192s3, as depicted by Fig. 2. It is worth noting that the aforementioned mapping can be easily achieved by setting i(t) = {\u22121, 1} and q(t) = {\u22121, 1}, as depicted in Fig. 2. For instance, the bit string b : [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1] becomes the sequence of symbols [s1, s1, s2, s1, s3, s1, s1, s0], thus obtaining the in-phase i(t) and quadrature q(t) signal components. For the sake of completeness, we highlight that both i(t) and q(t) should be subject to other filtering stages and they cannot be directly used as mentioned in Fig. 1, since the sharp level changes will eventually cause s(t) to have a very large bandwidth [22]. Let us now complete the discussion about the IQ (de)modulation previously introduced by Fig. 1. i(t) and q(t) components are modulated adopting an in-phase (cos 2\u03c0fct) and a quadrature (sin 2\u03c0fct) signal at the reference frequency fc (carrier). The resulting signals are summed up to obtain s(t), the actual RF signal. Figure 1 takes into account any propagation phenomena, such as fading and attenuation, that may affect the received signal, and therefore r(t) \u0338= s(t). The demodulation block is the reciprocal of the modulator. Indeed, the received signal r(t) is multiplied by both an in-phase and a quadrature signal at frequency fc, and then, low pass filtered in order to remove the unwanted upper sidebands. The final\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/2c75/2c75a47e-052c-4c66-9f51-2664ef43226c.png\" style=\"width: 50%;\"></div>\nFigure 2: Quadrature Phase Shift Keying (QPSK) mudulation example: from bit sequence b to the in-phase i(t) and quadrature q(t) components.\nresult consists of i\u2032(t) and q\u2032(t) that can be arbitrarily different from the original i(t) and q(t) signal components. The greatest source of difference usually comes from RF propagation, which can affect i(t) and q(t) so badly to make the symbol recovery impossible. When the signal-to-noise ratio is large enough, the symbols are evenly distributed and the information recovery becomes feasible. Further, there are also minor effects that introduce small offset in the IQ symbols. A typical example is constituted by impairments and biases introduced by small differences in the electronics components, that, although being mass produced by controlled and standardized assembly lines, are still characterized by imperfections at nano-scale, that affect the displacement of the symbols. The analysis introduced in latter sections proves that the symbols\u2019 displacement is systematic, thus being at least theoretically possible to detect it, measure it, and eventually leverage it to identify the hardware causing it. We moved from theory to practice, showing a viable method leveraging AI to achieve the cited objective.\n# B. Deep Learning classifiers and Transfer Learning\nIn this subsection, the Deep Learning classifiers adopted in this study are introduced, together with the transfer learning technique, that allowed us to notably improve the accuracy during the multi-class classification task. 1) Autoencoders: An autoencoder is defined as an artificial neural network whose goal is to learn an optimal representation (i.e., encoding) of a training set from which it is possible to accurately reconstruct the input data. Although it may seem trivial (i.e., the mere copy of the input data to the output may easily lead to an outstanding accuracy), to identify useful features, the internal function responsible for the research of good encoding candidates is usually constrained. For instance, the autoencoder may be forced to find an encoding smaller than the input data (i.e., undercomplete autoencoder). Traditionally, this unsupervised technique has been widely adopted to perform dimensionality reduction and feature learning, since it may be tuned to generate smaller encodings as similar as possible to the original input, while recently\nautoencoders are also being put to the forefront of generative modeling [23]. The more similar the output reconstructed starting from such encoding is to the training set, the more likely the autoencoder is said to be able to represent input data. In case the encoding is (parametrically) smaller than the input data, the feature reduction phase is successful. The basic autoencoder model has been quickly followed by many variants, each one forcing the learned encoding to boast a different property. Valuable examples are the regularized autoencoders, able to learn the most salient features of the data distribution [23], and variational autoencoders, able to provide a framework to learn deep latent-variable models as well as the corresponding inference models [24]. An autoencoder usually consists of four main components: (i) an encoder, that allows the model to learn how to represent the features of the input data; (ii) a bottleneck, identified as the layer containing the encoding of the training set; (iii) a decoder, that allows the model to learn how to reconstruct the input data from the encoding; and, (iv) the reconstruction error function, useful to measure the performance of the model during the whole training. The performance offered by the autoencoders positively impacted their wide applications, which now range from intrusion detection tasks [25], to anomaly detection [26], and DDoS attack detection [27]. In this paper, we rely on autoencoders to perform the one-class classification task on the IRIDIUM satellites. The intuition behind the adoption of autoencoders to face such a challenge is the following: starting from a distribution (i.e., class) X, the reconstruction of input data drawn from the same distribution X is easier (i.e., the error metric is reduced) than the reconstruction of input data drawn from any other distribution Y , with Y \u0338= X. 2) Convolutional Neural Networks: A CNN is defined as a DNN that boasts at least one convolutional layer, i.e., a layer performing convolutional operations. A convolutional operation, in turn, is the mathematical combination of two functions that produces a third function, being the expression of the change of shape caused by the application of one function to the other. In the case of CNN, a convolution consists of a slide of a parametric-sized filter (also known as operator) over the input representation. Being the filter smaller compared to the input representation, it is applied to different overlapping portions of the input, thus generating a feature map. Different filters allow to catch different patterns within the input representation (i.e., in case the input is represented as an image, operators can be used to highlight edges, corners, and possibly other patterns). A typical CNN is composed of three types of layers: (i) convolutional layers, to build the feature map of the input representation; (ii) pooling layers, to reduce the number of learnable parameters and discretize the input; and, (iii) fully connected layers, usually representing the last layers of the architecture, to hold the high-level features found during the convolutions and to learn non-linear combinations of them.\nWhen compared to multi-layer perceptrons, CNNs present characteristics that discourage the learning of too complex and expensive models, thus being recognized as their regularized version (i.e., a version that allows containing overfitting by construction). Indeed, while in multi-layer perceptrons several fully connected layers (i.e., layers whose neurons are fully connected to the ones of the next layer) are employed to perform classification, CNNs exploit a hierarchical structure able to learn complex patterns by relying on the combination of small and simple ones [28]. The reduced number of connections and parameters made CNNs extremely appreciable in several domains due to their ability to be trained quickly and more accurately than previous feed-forward models. Specifically, applications can be found in handwriting recognition, face detection, behavior recognition, recommendation systems, speech recognition, image classification, and Natural Language Processing [29]. 3) Transfer Learning: Until a few years ago, conventional machine learning algorithms have been designed to work in isolation, trained from scratch every single time to solve specific tasks. However, training a network from scratch may be cumbersome, since the available datasets may not be rich enough to effectively capture the features. As a result, the resulting classifier could not generalize properly when applied in the wild. With the introduction of transfer learning, however, the learning phase of the algorithms has been completely revolutionized. The general idea of transfer learning is to take advantage of the knowledge learned while solving a task of a particular domain to simplify the learning phase for a related domain task. In this paper, in order to perform multi-class classification on the IRIDIUM satellites, we exploited the knowledge of the Resnet-18 CNN, pre-trained on the popular ImageNet dataset. Resnet, introduced by Microsoft researchers in 2015, proved to be the most performant CNN, since it is structured in such a way to allow achieving deeper architectures with a reduced number of parameters [30]. Details on the ResNet-18 CNN and the transfer learning methodology adopted in this study (e.g., fine-tuning or freezing-layers) are detailed in Section VI-A.\n# C. Iridium Satellite Constellation\nThe IRIDIUM satellite constellation was conceived in 1987, and first operated in 1993 by IRIDIUM SSC, founded by Motorola [31]. The constellation is constituted by a set of LEO satellites, orbiting 800 km above the Earth surface, and arranged so that they can guarantee full Earth coverage at any time. The name of the satellite constellation is inspired by the originally-planned number of satellites, i.e., 77, coincident with the atomic number of the IRIDIUM chemical element. However, to minimize deployment costs while still guaranteeing Earth coverage, only 66 satellites are operational nowadays. IRIDIUM radio signals are transmitted in the L-band, in the frequency range [1, 616 \u22121, 626.5] MHz. At the ground, IRIDIUM subscribers can receive such signals as well as\ntransmitting by using dedicated mobile satellite devices, provided by companies such as Motorola and Kyocera. Today, IRIDIUM is mainly used on-board of vessels, to initiate and receive calls when located off-shore. In this context, starting from January 2020, the International Maritime Organization (IMO) has certified IRIDIUM as an approved Global Maritime Distress and Safety System (GMDSS) service provider for vessels. However, IRIDIUM transceivers are also used in the aviation, railway, and critical infrastructures domain, and recently they have received significant attention also in the emerging satellite-IoT application domain [32]. Each IRIDIUM satellite includes an array of antennas, hereby referred to as beams, that widens the transmission range of the satellite at the ground. Overall, each satellite has 48 beams and an additional antenna dedicated to the identification of the satellite. Note that the transmission power adopted by the satellite antenna is higher than the one used by the beams, so that any receiver that could decode the signal emitted by a beam can also receive the information about the satellite itself. Overall, two channels categories are available, i.e., system overhead channels and bearer service channels. In this paper, we focus our attention on one of the system overhead channels, i.e., the IRIDIUM Ring Alert (IRA) broadcast channel. It is a broadcast, unencrypted, downlink-only channel, operating at the center frequency 1, 626.27 MHz, and used to deliver information useful for handover operations at the ground. IRA messages are characterized by a 12 bytes preamble, encoded according to the Binary-Phase Shift Keying (BPSK) modulation scheme, while the rest of the information (103 bytes) follows the Differentially-encoded Quadrature-Phase Shift Keying (DQPSK) modulation. Such information include the ID of the satellite emitting the packet, the specific transmitting beam (the beam ID is 0 in the case the transmitter is the one identifying the satellite), the position of the satellite (expressed in latitude, longitude, and altitude), and further information used for handover, e.g., the Temporary Mobile Subscriber Identity (TMSI) of any user subject to handover. Note that IRA packets can have different sizes, depending on the amount of TMSIs included in the message, as well as the presence of additional specific paging information. Previous contributions such as [8] used the information included into the IRA messages to reverse-engineer several system parameters of the IRIDIUM constellation, such as the speed of the satellites, the coverage at the ground, the arrangement of the beams, and the satellite pass duration. In this paper, we further extend those results, by providing additional hints on the time needed to observe a specific satellite, the distribution of IQ samples, the effect of the noise, and the expected number of IQ samples per satellite pass (see Section IV. All these information are instrumental to the scope of our work, i.e., the authentication of the IRIDIUM satellite at the physical-layer, by using raw IQ samples.\ntransmitting by using dedicated mobile satellite devices, provided by companies such as Motorola and Kyocera. Today, IRIDIUM is mainly used on-board of vessels, to initiate and receive calls when located off-shore. In this context, starting from January 2020, the International Maritime Organization (IMO) has certified IRIDIUM as an approved Global Maritime Distress and Safety System (GMDSS) service provider for vessels. However, IRIDIUM transceivers are also used in the aviation, railway, and critical infrastructures domain, and recently they have received significant attention also in the emerging satellite-IoT application domain [32].\nrecently they have received significant attention also in the emerging satellite-IoT application domain [32]. Each IRIDIUM satellite includes an array of antennas, hereby referred to as beams, that widens the transmission range of the satellite at the ground. Overall, each satellite has 48 beams and an additional antenna dedicated to the identification of the satellite. Note that the transmission power adopted by the satellite antenna is higher than the one used by the beams, so that any receiver that could decode the signal emitted by a beam can also receive the information about the satellite itself. Overall, two channels categories are available, i.e., system overhead channels and bearer service channels. In this paper, we focus our attention on one of the system overhead channels, i.e., the IRIDIUM Ring Alert (IRA) broadcast channel. It is a broadcast, unencrypted, downlink-only channel, operating at the center frequency 1, 626.27 MHz, and used to deliver information useful for handover operations at the ground. IRA messages are characterized by a 12 bytes preamble, encoded according to the Binary-Phase Shift Keying (BPSK) modulation scheme, while the rest of the information (103 bytes) follows the Differentially-encoded Quadrature-Phase Shift Keying (DQPSK) modulation. Such information include the ID of the satellite emitting the packet, the specific transmitting beam (the beam ID is 0 in the case the transmitter is the one identifying the satellite), the position of the satellite (expressed in latitude, longitude, and altitude), and further information used for handover, e.g., the Temporary Mobile Subscriber Identity (TMSI) of any user subject to handover. Note that IRA packets can have different sizes, depending on the amount of TMSIs included in the message, as well as the presence of additional specific paging information.\nEach IRIDIUM satellite includes an array of antennas, hereby referred to as beams, that widens the transmission range of the satellite at the ground. Overall, each satellite has 48 beams and an additional antenna dedicated to the identification of the satellite. Note that the transmission power adopted by the satellite antenna is higher than the one used by the beams, so that any receiver that could decode the signal emitted by a beam can also receive the information about the satellite itself.\nOverall, two channels categories are available, i.e., system overhead channels and bearer service channels. In this paper, we focus our attention on one of the system overhead channels, i.e., the IRIDIUM Ring Alert (IRA) broadcast channel. It is a broadcast, unencrypted, downlink-only channel, operating at the center frequency 1, 626.27 MHz, and used to deliver information useful for handover operations at the ground. IRA messages are characterized by a 12 bytes preamble, encoded according to the Binary-Phase Shift Keying (BPSK) modulation scheme, while the rest of the information (103 bytes) follows the Differentially-encoded Quadrature-Phase Shift Keying (DQPSK) modulation. Such information include the ID of the satellite emitting the packet, the specific transmitting beam (the beam ID is 0 in the case the transmitter is the one identifying the satellite), the position of the satellite (expressed in latitude, longitude, and altitude), and further information used for handover, e.g., the Temporary Mobile Subscriber Identity (TMSI) of any user subject to handover. Note that IRA packets can have different sizes, depending on the amount of TMSIs included in the message, as well as the presence of additional specific paging information.\nPrevious contributions such as [8] used the information included into the IRA messages to reverse-engineer several system parameters of the IRIDIUM constellation, such as the speed of the satellites, the coverage at the ground, the arrangement of the beams, and the satellite pass duration. In this paper, we further extend those results, by providing additional hints on the time needed to observe a specific satellite, the distribution of IQ samples, the effect of the noise, and the expected number of IQ samples per satellite pass (see Section IV. All these information are instrumental to the scope of our work, i.e., the authentication of the IRIDIUM satellite at the physical-layer, by using raw IQ samples.\nIV. IRIDIUM DATA ACQUISITION AND PROCESSING In this section, we first describe the equipment (hardware and software) that has been adopted for our measurement campaign, later we depict how we reverse-engineered the architectural parameters of the IRIDIUM satellite constellation and, finally, we introduce how we exploited the IQ samples to authenticate the satellite transmitters. A. Measurement Set-up The measurement setup is illustrated in Figure 3.\nIn this section, we first describe the equipment (hardware and software) that has been adopted for our measurement campaign, later we depict how we reverse-engineered the architectural parameters of the IRIDIUM satellite constellation and, finally, we introduce how we exploited the IQ samples to authenticate the satellite transmitters.\n# A. Measurement Set-up\nThe measurement setup is illustrated in Figure 3.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/cf5d/cf5d654f-86fe-4fc7-ba36-4883b0a33e86.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 3: Measurement Setup: we adopted an active (preamplified) Iridium antenna (Beam RST740) connected to a USPR X310 Software Defined Radio.</div>\nFigure 3: Measurement Setup: we adopted an active (preamplified) Iridium antenna (Beam RST740) connected to a USPR X310 Software Defined Radio.\nThe hardware used to acquire IRIDIUM signals consists of a dedicated L-Band IRIDIUM antenna, connected to a general-purpose Ettus Research X310 SDR. The antenna is an IRIDIUM Beam Active Antenna, model RST740, commonly used by commercial IRIDIUM transceiver [33]. The antenna is connected through an SMA cable to the Ettus X310 SDR [34], integrating the UBX160 daughterboard [35]. In turn, the SDR is connected via Ethernet to a Laptop Dell XPS15 9560, equipped with 32GB of RAM and 8 Intel Core i7700HQ processors running at 2.80 GHz. On the software side, we used the well-known GNURadio development toolkit. Specifically, we adopted the gr-iridium module to detect and acquire IRIDIUM messages [36]. In addition, we used the iridium-toolkit tool to parse IRA messages [37]. In detail, we modified the gr-iridium module in a way to log the IQ samples of all the valid IRIDIUM packets, i.e., the ones containing the 12 bytes BPSK-modulated preamble, typical of the IRIDIUM messages. For each of these packets, we logged the values of the IQ samples after the filtering and synchronization performed by the Phased Locked Loop (PLL). Next, we used the iridium-toolkit tool to log only valid IRA packets. Our measurement campaign has been carried out in very harsh conditions, i.e., by exposing the IRIDIUM antenna out of the window of an apartment. This is a worst-case scenario, since part of the open sky is obstructed by the wall of the building, attenuating and deviating the signal coming from the satellites. However, we highlight that this is not a limitation\nof our study. Conversely, the high-level performance achieved in such a disadvantaged scenario paves the way for further improvement. Overall, we continuously acquired IRIDIUM signals for about 589 hours (24 days), gathering a total number of 102, 318, 546 IQ samples (1, 550, 281 per satellite, on average). An excerpt from the dataset is reported in Table I. Specifically, for each received IRA packet we log the reception timestamp on the SDR, both in seconds and in milliseconds, the satellite ID, the beam ID, the latitude, longitude, and altitude coordinates of the emitting satellite, and the raw IQ samples included in the IRA packet. As recently discussed by the authors in [8], any IRIDIUM satellite is equipped with a total number of 49 radios, where 48 represent the radio of the beams and the remaining one reports the whole satellite ID, characterized by the beam numbered 0. For our work, we further restricted the analysis to satellite IRA packets, i.e., the one having beam ID 0. Finally, we implemented the proposed classification algorithms (Convolutional Neural Network (CNN) and autoencoders) in MATLAB R2020a. The training, validation, and testing have been carried out by a server featuring 64 cores, 512GB RAM, and 4 GPUs Nvidia Tesla M40. The collected data will be released open source once the paper will be accepted.\n# B. Reverse-Engineering IRIDIUM Constellation P\nIn this section, we derive important parameters of the IRIDIUM satellite constellation, functional to the subsequent analysis. We consider the SNR associated with the collected IQ samples, the waiting time between two consecutive passes of a specific satellite and, finally, the number of IQ samples that can be collected during a single satellite pass. Signal-to-Noise Ratio (SNR). We start the analysis by considering the quality of the collected samples, in terms of SNR. Firstly, we compute the received power Prx associated with the IQ samples as in Eq. 1:\n(1)\nwhere I and Q are the in-phase and quadrature component of the signal, respectively. Conversely, we evaluated the noise power as in Eq. 2.\n(2)\nwhere var(\u25e6) is the statistic variance. Finally, the SNR has been computed as in Eq. 3.\n(3)\nBlack dots in Fig. 4 represent the probability density associated with the SNR for all the collected IQ samples, independently of the satellite transmitting source, while the solid red line depicts the best-fit interpolation. We also computed the associated cumulative density function (CDF), as depicted in the inset of Fig. 4. We highlight that the peak is represented by an SNR of about 45dBm, while 90% of the collected samples experience an SNR in the range 40\u201460 dBm.\n<div style=\"text-align: center;\">Table I: Excerpt of the collected dataset. Latitude and Longitude information anonymized for peer-review</div>\nTime (s)\nTime (ms)\nSatellite\nID\nBeam\nID\nLatitude\nLongitude\nIQ\nSamples\n1580712040\n000000739\n115\n0\n?\n?\n0.03+0.3j, ...\n1580712040\n000004519\n115\n0\n?\n?\n0.02-0.4j, ...\n1580712040\n000005059\n115\n0\n?\n?\n-0.07+0.8j, ...\n1580712040\n000005599\n115\n0\n?\n?\n-0.2-0.4j, ...\n1580712040\n000008839\n66\n0\n?\n?\n0.03+0.3j, ...\n1580712040\n000013159\n66\n0\n?\n?\n0.03+0.3j, ...\n1580712040\n000013699\n66\n0\n?\n?\n0.03+0.3j, ...\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/0a48/0a48a9f7-9fde-4eb5-8446-9a3800e27f76.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/a202/a202acf0-d0ed-45f4-bbcc-a90ae940a2d1.png\" style=\"width: 50%;\"></div>\nFigure 4: SNR of all the collected measurements. Black dots represent the real SNR values, while the solid red line depicts the best-fit interpolation.\nWaiting time between consecutive satellite passes. We also investigate the time an observer (on the ground) has to wait to see again the same satellite.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/56ef/56efe2fc-332c-49aa-a066-2e80d02a7b6e.png\" style=\"width: 50%;\"></div>\n1 Waiting Time between Consecutive Satellite Passes\n<div style=\"text-align: center;\">Figure 5: Waiting time among consecutive satellite passes.</div>\nWe can explain these results by recalling that a satellite can pass over a specific location in two directions, either north-\nsouth or south-north. Indeed, each satellite passes over the same location twice every 90 minutes: up to two consecutive passes can be detected from the same position. Subsequently, after a full Earth revolution, the satellite returns on the same location after about 560 minutes with opposite direction. Higher waiting times (in Fig. 5), e.g., 560+90 \u2248650 minutes, are due to passes that have not been detected by the receiver. IQ samples per satellite pass. Another important parameter for the subsequent analysis is the number of collected IQ samples per satellite pass, i.e., the number of IQ samples that can be collected by a receiver during a single satellite pass. Firstly, we consider the inverse cumulative distribution function associated with the number of received IQ samples (N) per satellite pass, as depicted in Fig. 6, i.e., P(N > x), where x represents a predefined value of IQ samples. The overall trend is linear up to 50, 000 samples: it is worth noting a probability of 0.7 and 0.5 to have at least 10, 000 and 20, 000 samples per satellite pass.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/8257/8257e649-69fb-4c60-934f-f65772f1d935.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Number of received IQ samples per satellite pass [x10000]</div>\nFigure 6: Probability to experience at least x IQ samples in a single satellite pass.\nFigure 6: Probability to experience at least x IQ samples in a single satellite pass.\nThe inset of Fig. 6 shows the time required to collect the IQ samples. For instance, 10, 000 and 20, 000 IQ samples can be collected by satellite passes lasting for 7 and 8 minutes, respectively. The satellite passes last for a maximum time of 9 minutes (median value of the maxima); during this period, we were able to collect between 30, 000 and 80, 000 IQ samples. We explain this wide range of values due to the varying noise\nconditions during the measurement campaign. Finally, it is worth noting the trend between 0 and 30, 000 IQ samples, characterized by satellite pass length between 3 and 8 minutes. We consider these events to be associated to passes close to the horizon, where the satellite appears just for a short amount of time.\nC. Transmitting-source Authentication via IQ samples\nFigure 7 shows the received In-Phase i\u2032(t) and Quadrature q\u2032(t) components of 679, 740 samples gathered from the Satellite with ID 7. It is worth noting that the ideal IQ constellation (recall Fig. 2) is significantly different from the one experienced in real down-link satellite communications. Red circles in Fig. 7 highlight the ideal positions of the IQ samples and identify the four Cartesian quadrants adopted for the decision (recall Fig. 2), i.e., received IQ sample (black dot) is mapped to the corresponding red circle as a function of the Cartesian quadrant on which it lies. The received IQ samples are affected by different phenomena that displace their original positions. As for the bit error rate, as long as the samples remain in their intended quadrants, the error rate remains zero. In this contribution, we are not interested in the link error rate; instead, we focus on the phenomena behind the IQ samples\u2019 displacement. In general, a received (satellite) signal is affected by the following phenomena: \u2022 Fading. Iridium satellites are LEO satellites, hence located at an height of approximately 780 Km , thus being affected by a significant signal attenuation. Note that Fig. 7 is the result of a post-processing amplification, where the samples are stretched to fit the Cartesian plane [\u22121, 1] \u00d7 [\u22121, 1]. \u2022 Multipath. Multipath is caused by multiple replicas of the transmitted signal reaching out the receiver through different paths, thus summing up at the receiver, albeit with different phases. Since the phase shift is random, the attenuation can be arbitrarily large, causing a destructive interference that can significantly affect the signal decoding. \u2022 Doppler shift. Doppler shift represents the change of frequency (shift) of the received signal as a function of the relative speed between the transmitter and the receiver at the ground. The satellite scenario is particularly challenging, since the Doppler shift is maximum when the satellite is at the receiver\u2019s horizon, while becoming minimum at the receiver\u2019s zenith. \u2022 Hardware impairments. Although mass produced, any two radio transceivers and their electronic components are not identical. Indeed, such discrete components can be affected by small physical differences at micro and nano scale (e.g. material impurity) that are reflected in variations of capacitance, resistance, and inductance, eventually leading to small (almost undetectable) signal artifacts and IQ unbalances. While the cited imperfections do not affect communication performance, they make the transmitted signal unique, thus (theoretically) enabling\nthe identification of the transmitting source. Unfortunately, this is not an easy task, since such small IQ unbalances are hidden by all the previously-discussed phenomena\u2014each of them having a sensitive impact in the IQ unbalancing. In the following, we will discuss an AI-based methodology to detect and extract such imperfections, and we will prove our approach being robust to noise, and able to identify a specific satellite transmitter among the 66 that make up the Iridium constellation\u2014thus enabling the physical authentication of the transmitting source.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/8839/88393e41-577e-4b57-905a-0e5199332fe6.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"></div>\nFigure 7: Received In-Phase i\u2032(t) and Quadrature q\u2032(t) components of 679,740 samples from Satellite with ID 7.\n# D. IQ Samples Pre-processing\nNoise represents a major challenge when the receiver aims at identifying the transmitting source via the IQ unbalances produced by hardware impairments of the the transmitting device. Over the years, several techniques have been developed to address the above issue, and the vast majority of them achieve great performance. Nevertheless, none of the mentioned techniques considered noisy radio links, e.g., like the satellite wireless channel. Indeed, recalling Fig. 7, it can be observed that IQ samples do not appear just around the ideal points (red circles), but they spread all over the IQ plane. The \u201ccross\u201d-like shape can be explained by the lack of signal amplitude normalization in the demodulation chain [38]. We will prove how the aforementioned issue does not affect our solution, being effective also for small values of the SNR (like the ones of a satellite link). Our solution involves the adoption of Artificial Intelligence (AI) techniques specifically designed for pattern detection and recognition from images. Our approach relies on applying state-of-the-art image pattern recognition techniques to synthetically generated images of IQ samples. As previously discussed, hardware impairments generate (consistent, though low intensity) anomalies in the distribution of the IQ samples.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/90bb/90bb69df-aff8-4ec4-a26a-64f84c8d0776.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1d2c/1d2c3be9-bd1b-437c-8bba-0b65f5445702.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">(a) Histogram of the IQ samples.</div>\n<div style=\"text-align: center;\">Figure 8: Image representation of IQ samples.</div>\nTherefore, our intuition is to discriminate between the noise and the anomalies by relying on the more powerful classifiers in the literature. The aforementioned methodology requires an effective representation of the IQ samples in the image domain. Figure 8 shows how we pre-processed the IQ samples to graphically represent them as images. In particular, we sliced the IQ plane into 224 \u00d7 224 tiles (details on this will be clarified later on), and then we evaluated the deployment of different amounts of IQ samples (679, 740 from the satellite with ID=7 in Fig. 8). Subsequently, we computed the bivariate histogram over the aforementioned tiles, i.e., the number of IQ samples belonging to the same tile. Finally, we mapped each value into a greyscale, i.e., [0, 255], constituting one pixel of our grey image. Therefore, pixels with higher values (white color) represent the tiles with a high number of IQ samples, while pixels with small values (black color) represent tiles with no IQ samples. A few remarks about Fig. 8. The figure represents the bipartite histogram associated with the IQ constellation when overlapping multiple IRA messages, each one being constituted by 12 BPSK symbols (the unique word at the beginning of the frame), 103 DQPSK symbols (frame content), and 21 trailing additional DQPSK symbols. Two symbols (second and fourth quadrant) are more likely to appear than the others, due to the modulation overlapping and the trailing sequence (repetition of the same bit values). Finally, Fig. 8(b) represents the contour plot of the magnification of Fig. 8(a), where we highlighted the IQ samples density: about 5, 500 samples per tile at the two peaks.\nIn this section, we describe the proposed methodology to authenticate satellite transmitters. Specifically, we split the whole IQ samples dataset in three subsets, i.e., training (T ), validation (V), and testing (S), each subset accounting for the 60%, 20%, and 20% of the whole dataset, respectively. Moreover, it is worth noting that the number of IQ samples for each satellite is evenly distributed\n<div style=\"text-align: center;\">(b) Contour plot (magnified) associated with the histogram of the IQ samples.</div>\n<div style=\"text-align: center;\">Table II: Classification strategies.</div>\nPrior Knowledge\nTest Subset\nMulti-class\nAll satellite\ntraining subsets\nAny test subset of satellites\nbelonging to the constellation\nOne vs Rest\nOnly the reference\ntraining subsets\nAny test subset of satellites\nbelonging to the constellation\nin each subset (i.e., the dataset is balanced by construction). Let us define Ds the subset of IQ samples from satellite s, with s \u2208C and C = {1, . . . , 66} being the set of satellites in the IRIDIUM constellation. Moreover, let Ds be the subset of IQ samples from satellite s and Ds = Ts \u222aVs \u222aSs where Ts, Vs and Ss are the training, validation, and testing subsets associated with the IQ samples from satellite s. We addressed the physical-layer satellite-authentication problem along two dimensions: \u2022 Multi-class classification. We aim at being able to correctly authenticate all the satellites in the constellation. This scenario represents the worst case, involving 66 equivalent classes. We assume prior knowledge on Ts, \u2200s \u2208C. Moreover, we assume the test subset Sx to be constituted by IQ samples from the satellite constellation, i.e., x \u2208C\u2014although we do not know to which satellite s the IQ samples belong to. \u2022 Binary classification - One-vs-Rest. We consider a candidate satellite s, and we combine all the remaining IQ samples (from all the satellites belonging to the constellation), thus obtaining two classes: the class containing the reference satellite s, and the one being constituted by all the IQ samples belonging to all the remaining satellites, i.e., C \\{s}. Compared to the previous scenario, this one involves limited prior knowledge, i.e., only Ts, with s being the reference satellite. Moreover, we assume Sx to be any test subset. Indeed, the algorithm adopted for this categorization returns a similarity score, e.g., root mean square, which is used to estimate the similarity of the test subset Sx against the reference training subset Ts.\nTable II summarizes our assumptions on the adopted categorization strategies. In the remainder of this paper, we refer to intra-constellation satellite authentication as the problem of identifying and authenticating a satellite by resorting to a multiclass classification tool (see Section VI). Conversely, we refer to satellite authentication in the wild when applying the one-vs-rest classification model (see Section VII).\nVI. INTRA-CONSTELLATION SATELLITE AUTHENTICATION\n# VI. INTRA-CONSTELLATION SATELLITE AUTHENTICATION\nIn this section, we focus on the intra-constellation satellite authentication scenario. Specifically, Section VI-A shows and motivates the deployed CNN, Section VI-B reports details on the application of the described CNN to authenticate IRIDIUM satellite transmitters, while Section VI-C investigates the CNN classification performance on subsets of the satellite constellation.\n# A. Convolutional Neural Network Setup\nIn this paper, the multi-class classification task is supported by a Deep Convolutional Neural Network (DCNN) based on a Residual Network with 18 layers (i.e., ResNet-18). The original ResNet-18 has its last fully connected layer composed of 1, 000 neurons (followed by a softmax activation function), since it was pretrained on ImageNet, a 1, 000-class dataset. Given that our task is to classify 66 satellites, we replaced the last fully connected softmax layer with a fully connected layer composed of 66 neurons only, the number of classes of our dataset. Then, we transferred the set of parameters of the ResNet-18 convolutional layers to the convolutional layers of our DCNN. As mentioned above, although there were many architectures available in the literature, ResNet proved to be the most performing CNN by construction, since its structure allows to achieve a higher number of layers, while keeping low the number of parameters [30]. There are mainly two ways to perform transfer learning in deep neural networks: (i) the fine-tuning approach; and, (ii) the freezing layers approach [39]. The fine-tuning approach requires to retrain (i.e., unfreeze) the whole network parameters, with the classification errors coming from the new training backpropagating to the whole network. The freezing layer approach, instead, leaves unchanged (i.e., frozen) most of the transferred feature layers. Generally speaking, when the dataset is small compared to the original one (i.e., the dataset on which the network was pre-trained), the freezing layers approach is suggested, otherwise the fine-tuning approach is the most suitable. However, Yosinki et al. in [39] showed that the freezing layers approach may lead to a drop in performance, while the co-adaptation of the features re-learned with the fine-tuning approach prevents this effect. Since it has been observed that the lower layers of a CNN are able to detect features that are usually general for each image recognition task (e.g., curves and edges), and that fine-tuning allows to prevent accuracy drops, in this study we rely on a combination of the two approaches. Indeed, instead of retraining the network from scratch (i.e., fine-tuning approach)\nor keeping the layers frozen (i.e., freezing layers approach), we fine-tune the layers of the network with a monotonically increasing learning rate: the deeper the layer in the CNN, the higher the learning rate. In this way, the parameters of the first layers can still detect common features in images, and we opportunely tune the parameters of the deeper layers in a way to guarantee high accuracy. Figure 9 summarizes the proposed architecture.\n# B. Satellite Authentication via CNN\nIn this section, we address the problem of authenticating a satellite by classifying the received IQ samples. As discussed in Section IV-D, IQ samples are pre-processed and converted to 224 \u00d7 224 greyscale images. Grouping the IQ samples into images involves the following trade-off: on the one hand increasing the number of IQ samples enriches the information possibly conveyed by a single image; on the other hand, the number of available images is reduced smaller, this latter one being the actual input for the classification algorithm that typically performs better as the size of its input increases. Figure 10 shows the validation accuracy as a function of the number of IQ samples per image (or the number of images per satellite). Each circle in the figure represents the result of a single training and validation process while varying the number of IQ samples per image. Moreover, we recall that for each satellite IQ samples subset 60% of them have been used for training and 20% for validation. The number of IQ samples per image is an important parameter that should be compared with Fig. 6. Indeed, the number of IQ samples per image should be matched to a single satellite pass. We could consider waiting for multiple satellites passes, but this approach would involve long waiting times, i.e., at least 92 minutes for the satellite to appear again (recall Fig. 5. Therefore, as a reference parameter, we decided to consider 10, 000 IQ samples per image (leading to 155 images per satellite), guaranteeing a validation accuracy of about 0.83. Note that the probability to experience at least 10, 000 IQ samples is about 0.7. Testing. We run 30 iterations of the training, validation, and testing sequence by randomly choosing the images from the dataset. We computed the mean of the resulting confusion matrices from the testing procedure\u2014results in Appendix. The confusion matrix is sorted according to the values in the diagonal, i.e., best performance (31) in the top left part of the matrix), being 31 images (20% of total 155 images per satellite) the size of the test set for each satellites\u2019 image. Let us define as the hit rate the ratio between the total number of hits (true positive) and the total number of instances (test subset cardinality), yielding:\nMoreover, let us define as miss rate the ratio between the total number of misses (false negative) and the total number of instances (test subset cardinality), yielding:\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/c027/c0271833-179d-433e-a0b0-64107eea7eeb.png\" style=\"width: 50%;\"></div>\nFigure 9: Overview of the proposed architecture. ResNet-18 pre-trained layers are transferred to our DCNN, with the replacement of the fully connected layer (i.e., from 1, 000 neurons to 66), and the fine-tuning with monotonically increasing learning rate.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/e6c2/e6c24ef2-3cbe-46f4-82bb-15b37ddab485.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">775 516 387 310 258 221 193 172 155 140 129 119 110 103 Number of Images per Satellite</div>\nFigure 10: Validation accuracy as a function of the number of IQ samples per image (or number of images per satellite).\nFigure 11 shows the hit and miss rates for each satellite in the IRIDIUM constellation, extracted from the data associated with the aforementioned testing procedure (recall the confusion matrix in Appendix). We observe that 24 satellites (more than 36% of the constellation) experience a hit rate higher than 0.9, while only 4\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/fb12/fb12809c-4f8f-47e4-adde-df4380457b5a.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 11: Hit and Miss rates (mean values) for 30 runs of the CNN classification algorithm. For each run, we consider the whole training, validation, and testing procedures.</div>\n# satellites have a hit rate less than 0.5. C. Authentication of satellite subsets\nDriven by the results of Section VI, we investigate the CNN classification performance on subsets of the satellite constellation. The intuition relies on removing satellites characterized by high miss rates, which are intrinsically difficult\nto classify, thus constituting a source of mis-classification for the remaining ones. Therefore, we systematically removed the worst satellites (in terms of hit rate) from the dataset, and we subsequently re-evaluated the performance of the classifier.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/cef3/cef3082a-808f-4e18-8393-7d2714d12ccb.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Number of excluded satellites - Worst before</div>\nFigure 12: Testing accuracy as a function of the number of excluded satellites. The removed satellites are the ones with worst performance in terms of hit rate.\nFigure 12: Testing accuracy as a function of the number of excluded satellites. The removed satellites are the ones with worst performance in terms of hit rate. Figure 12 shows the accuracy associated with the testing procedure as a function of the number of excluded satellites (the next satellite to be removed is the one with the poorest hit rate among the ones left). The analysis confirms that imagebased classification of IQ samples is an effective solution. Indeed, CNN classification guarantees a baseline accuracy above 0.82, which can be made arbitrarily high by removing a few satellites\u2014for instance, removing the worst 9 satellites, the accuracy is higher than 0.9. VII. SATELLITE AUTHENTICATION IN THE WILD In this section, we undertake the challenge of authenticating a satellite with minimal prior knowledge, i.e., only a training subset from the satellite to be authenticated. Our intuition is to train a model with a reference training subset, and subsequently, to challenge it with a random test subset. Subsequently, we define a metric, i.e., reproduction error, and we estimate the deviation of a synthetically-generated subset from the original one. The reproduction error implies a threshold, under which all the samples are considered as belonging to the satellite to be authenticated. The most suitable class of algorithms for implementing the aforementioned strategy are autoencoders. Indeed, after the training phase, the autoencoders will be biased towards the training subset. Therefore, we expect that a syntheticallygenerated test subset will be characterized by a higher reproduction error, thus being discarded as not belonging to the satellite to be authenticated. We selected the reproduction error as coincident with the mean square error (m.s.e.). In the remainder of this section, we first discuss the architecture of the deployed autoencoders (Section VII-A). Then, we\nconsider two scenarios: One-vs-Rest (Section VII-B) and Onevs-One (Section VII-C). The former undertakes the challenge of authenticating the IQ samples from a reference satellite when compared with IQ samples coming from a set of sources (the other satellites from the constellation). The latter refers to the classification of IQ samples coming from two different sources, i.e., the satellite to be authenticated and another (random) one from the constellation. We stress that our test subset is constituted by IQ samples belonging to the IRIDIUM constellation, only. We consider this assumption the worst-case scenario for our detection algorithms, i.e., the test subset has the same characteristics of the training subset, in terms of technology, scenario, and noise pattern. Moreover, our solution is agnostic to both the content of the messages (bit-string) and the appearance order of the IQ samples, since we collect and classify the IQ samples independently of their mapping to the bit values.\n# A. Satellite Authentication via Autoencoders\n<div style=\"text-align: center;\">Table III: Training options of our autoencoder.</div>\nParameter\nValue\nHiddenSize\n1,024\nMaxEpochs\n100\nEncoderTransferFunction\nlogsig\nDecoderTransferFunction\nlogsig\nL2WeightRegularization\n0.001\nSparsityRegularization\n1\nSparsityProportion\n0.05\nLossFunction\nmsesparse\nTrainingAlgorithm\ntrainscg\nScaleData\ntrue\nIn this study, we relied on the MATLAB implementation of the Sparse Autoencoder to perform the one-vs-rest and one-vsone IRIDIUM satellites classification. A sparse autoencoder is an autoencoder whose training involves a penalty (also known as sparsity penalty). Several previous works, such as [40], observed that classification tasks may see their performance considerably improved when the representations are learned in a way that encourages sparsity (e.g., by adding a regularizer to the cost function). In the following, we motivate the choice of the training options of our autoencoder\u2014training options are summarized in table III. HiddenSize. It represents the number of neurons in the hidden layer of the autoencoder. The higher the number of neurons, the higher the risk of overfitting, while the lower the number of neurons, the higher the risk of underfitting. We empirically set the number of neurons to 1, 024 since, for our problem, it was a satisfactory trade-off between the two cited conflicting dimensions. MaxEpochs. It is defined as the maximum number of training epochs or iterations. An epoch is defined as a single pass through the training set for all the training examples. We empirically selected the value 50, since none of the subsequent epochs brought any benefit to the accuracy of our model. EncoderTransferFunction. It represents the linear transfer function of the encoder, i.e., the activation function of the\nneurons in the hidden layer. In this study, we empirically chose the standard logistic sigmoid function, whose formula is reported in Eq. 4:\n(4)\nDecoderTransferFunction. We relied on the same logistic sigmoid function as activation function of the decoders neurons. L2WeightRegularization. Generally speaking, regularization is a technique that discourages a model from becoming too complex, so as to avoid overfitting. It works on the assumption that smaller weights generate simpler models, and it requires to add a regularization term on the weights of the cost function, to prevent them from growing uncontrollably. The L2 regularization term is defined according to Eq. 5.\n(5)\nwhere L is the number of hidden layers, n is the number of samples, and k is the number of variables in the input data, respectively. This term is added to the loss function of the autoencoder with a multiplicator \u03bb, that we empirically set to 0.001. SparsityRegularization. Sparsity regularization methods attempt to leverage the assumption that, to be learned, an output variable can be described by a reduced number of variables in the feature space. The goal of these methods is to select the input variables that best describe the output. In the autoencoder context, the sparsity regularization term is represented by the Kullback-Leibler divergence, reported in Eq. 6.\nwhere \u03c1 and \u02c6\u03c1 represent two distributions. The KullbackLeibler divergence allows to measure the differences of two distributions. Since this term is inserted within the loss function, minimizing the cost function allows to minimize the term, thus eventually forcing the distributions to be similar. The sparsity regularization parameter (namely, \u03b2) allows to control the impact that the sparsity regularizer \u2126s has in the cost function. The higher the parameter, the more impact the regularizer has on the cost function. We empirically set this value to 1. SparsityProportion. It represents the proportion of training examples a neuron reacts to. The lower the value of this parameter, the more each neuron will be specialized (i.e., by giving high output only for a small number of training examples). Generally speaking, the lower the sparsity proportion, the higher the degree of sparsity is. We empirically set the parameter to 0.05. Loss Function. We relied on the standard mean squared error\nperformance function, with L2 weight and sparsity regularizers loss function (msesparse), defined as in Eq. 7.\n(7)\n\ufffd \ufffd where the first term in the addition represents the mean squared error, \u03bb is the coefficient controlling the impact of the L2 regularization term (i.e., 0.001 in our case), and \u03b2 is the coefficient controlling the impact of the sparsity regularization term (i.e., 1 in our case). TrainingAlgorithm. We relied on the scaled conjugate gradient descent [41] (trainscg) learning algorithm to train our autoencoder. The algorithm is based on a class of optimization techniques known as conjugate gradient methods, and proved to be more effective and one order of magnitude faster than the standard backpropagation algorithm. ScaleData. This parameter allows to control the rescaling of the input data. For the training to be effective, the range of the input data has to match the one of the transfer function for the decoder. By setting this value, the autoencoder scales the data whenever there is a need for, to optimize the algorithm learning capabilities.\n# B. One-vs-Rest\nIn this section, we consider the One-vs-Rest scenario: the reference satellite (to be authenticated) versus the rest of the constellation. Figure 13 resumes the results of our methodology for the case of the satellite with s = 25. We trained the autoencoder with the training subset, constituted by the 80% of the subset samples from satellite 25. Then, we used the trained autoencoder to generate a training subset and we estimated the m.s.e. between the two subsets, i.e., the original one and the generated one. The circles in Fig. 13 identifies the probability density function associated with the m.s.e. computed over the original training subset and the generated one. We performed the same procedure on the validation subset (remaining 20% of the samples from satellite 25), and we computed the probability density function associated with the m.s.e. between the original validation subset and the generated one, as depicted by the distribution identified by the crosses in Fig. 13. It is worth noting that the two distributions (the one associated to the training subset and one associated to the validation subsets) are characterized by the same m.s.e., in the range between 0.2 and 0.5. We applied the same process to a test set. The test set has been constructed by considering all the satellites from the IRIDIUM constellation, but the one with ID 25. We consider the previous one as the worst-case scenario, since we considered the IQ samples originated from transceivers belonging to the same owner, all of them deployed within a short time delay, and hence very likely featuring the same hardware. Asterisks in Fig. 13 identifies the distribution associated with the m.s.e. computed between the generated test and training subset. The test subset is characterized by m.s.e. values in the range between 0.7 and 1.4, with only a few values less than 0.5.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/96b4/96b4f773-83c9-4040-828c-0b216d0cce5d.png\" style=\"width: 50%;\"></div>\nFigure 13: Distribution of the m.s.e. for the training, validation, and testing procedures with autoencoders (One-vs-Rest scenario for satellite with ID 25). The inset figure highlights the Receiver Operating Characteristic (ROC) curve and the optimal point.\nBy defining a threshold thr in the range between 0.2 and 1.5, and assuming as legitimate the m.s.e. values less than thr, we can experience different False Positive (FP) and False Negative (FN) events. The trade-off between FP and FN can be evaluated by resorting to the associated ROC curve, as shown in in the inset of Fig. 13, where the True Positive Rate (TPR) is evaluated as a function of the False Positive Rate (FPR), with TPR and FPR being T P T P +F N , and F P F P +T N , respectively. In optimal conditions, i.e., TPR = 1 and FPR = 0, the AUC should be equal to 1; in our case, for the developed example related to the satellite with ID 25, we report an AUC of about 0.98. Finally, we considered the optimal ROC curve, i.e., the best cut-off with the highest TPR and lowest FPR, and we reported this value as the red circle in the inset of Fig. 13, with coordinates [0.048, 1]. We applied the aforementioned procedure for all the satellites in the constellation, thus evaluating the optimal operating point in the ROC curve for each of the investigated satellites. We report the results of our analysis in Fig. 14, via a heat-map which reports the minimum distance between each coordinate in the TPR-FPR plane to the optimal points (from the ROC curves). The 66 red dots identifying the optimal operating points of the ROC curves (one per satellite) are very close to each other, and in turn, very close to the optimal point TPR = 1, FPR = 0. Finally, we conclude the discussion of the one-vs-rest scenario by considering the AUC for each of the satellite in the constellation. Figure 15 shows the sorted AUC values for all the satellites in the IRIDIUM constellation. AUC values are characterized by very high values (greater than 0.93), proving the effectiveness of the proposed solution.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7311/731111e4-2b41-4361-851f-1d090e8f516a.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 FPR 0</div>\nFigure 14: Optimal operating point of the ROC curve for each satellite when testing (with autoencoders) one satellite against the features extracted from the whole constellation dataset (one-vs-rest).\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1c9d/1c9d1f5b-7457-484f-a6af-dbf513ac6b88.png\" style=\"width: 50%;\"></div>\nFigure 15: AUC for each satellite in the constellation when performing One-vs-Rest classification.\n<div style=\"text-align: center;\">Figure 15: AUC for each satellite in the constellation when performing One-vs-Rest classification.</div>\n# C. One-vs-One\nIn this section, we consider the One-vs-One scenario: the reference satellite (to be authenticated) versus each one of the satellites in the constellation. We followed the same methodology of Section VII-B, by considering the generation of a training and test subset and their comparison in terms of m.s.e. values. Finally, we considered different thresholds, and we evaluated the AUC for each satellite pair in the IRIDIUM constellation. Indeed, for each considered reference satellite, we evaluated 66 classifications and the related AUC. Figure 16 shows the error-bars (quantile 95, 50, and 5) associated with each considered reference satellite. We adopted the same order as before, i.e., satellites are sorted by performance (best on the left) considering the median value. We observe that the\nquantile 95 and the median are coincident and equal to 1 for almost all the satellites, while only few satellites are characterized by a quantile 5 below 0.99. This is due to a few satellite-to-satellite classifications experiencing lower performance, but still characterized by AUC values greater than 0.96.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/0cfa/0cfa3fa1-d891-44af-a232-ac4c88f9600f.png\" style=\"width: 50%;\"></div>\nFigure 16: Error-bars (quantile 5, 50, and 95) associated with the AUC for each satellite in the constellation, when performing One-vs-One classification.\n# VIII. CONCLUSION\nWe presented PAST-AI, a methodology to achieve physicallayer authentication of satellite transmitters by harnessing the power of deep learning classifiers, such as CNNs and autoencoders, applied to the IQ samples generated by transmitters. We are the first ones, to the best of our knowledge, to prove that radio fingerprinting can be achieved even in the satellite domain\u2014in particular, for LEO constellations\u2014characterized by high attenuation, multi-path fading, strong Doppler effect, and short link duration. We investigated the challenges associated with two scenarios: (i) intra-satellite classification; and, (ii) satellite classification in the wild. We validated our methodology on a dataset generated from a real measurement campaign, involving more than 100M IQ samples collected from the IRIDIUM constellation. Through a careful adaptation and tuning of the discussed deep learning classifiers, we are able to achieve a classification accuracy that spans between 0.8 and 1, depending on the scenario assumptions. We believe that the novelty of the introduced scenarios, the detailed methodology, the performance achieved by our solution and, finally, the publicly-available dataset, will pave the way for future research in the area.\n# REFERENCES\n[1] X. Wang, P. Hao, and L. Hanzo, \u201cPhysical-layer authentication for wireless security enhancement: current challenges and future developments,\u201d IEEE Communications Magazine, vol. 54, no. 6, pp. 152\u2013158, 2016.\n[2] L. Xiao, L. Greenstein, N. Mandayam, and W. Trappe, \u201cFingerprints in the Ether: Using the Physical Layer for Wireless Authentication,\u201d in 2007 IEEE International Conference on Communications, 2007, pp. 4646\u20134651. [3] Q. Xu, R. Zheng, W. Saad, and Z. Han, \u201cDevice Fingerprinting in Wireless Networks: Challenges and Opportunities,\u201d IEEE Communications Surveys & Tutorials, vol. 18, no. 1, pp. 94\u2013104, 2016. [4] O. A. Ibrahim, S. Sciancalepore, G. Oligeri, and R. Di Pietro, \u201cMAGNETO: Fingerprinting USB Flash Drives via Unintentional Magnetic Emissions,\u201d 2020. [5] D. Schmidt, K. Radke, S. Camtepe, E. Foo, and M. Ren, \u201cA survey and analysis of the GNSS spoofing threat and countermeasures,\u201d ACM Computing Surveys (CSUR), vol. 48, no. 4, pp. 1\u201331, 2016. [6] N. Soltanieh, Y. Norouzi, Y. Yang, and N. C. Karmakar, \u201cA Review of Radio Frequency Fingerprinting Techniques,\u201d IEEE Journal of Radio Frequency Identification, vol. 4, no. 3, pp. 222\u2013233, 2020. [7] G. Oligeri, S. Sciancalepore, O. A. Ibrahim, and R. Di Pietro, \u201cDrive Me Not: GPS Spoofing Detection via Cellular Network: (Architectures, Models, and Experiments),\u201d in Proceedings of the 12th Conference on Security and Privacy in Wireless and Mobile Networks, ser. WiSec \u201919. Association for Computing Machinery, 2019, p. 12\u201322. [8] G. Oligeri, S. Sciancalepore, and R. Di Pietro, \u201cGNSS spoofing detection via opportunistic IRIDIUM signals,\u201d in Proceedings of the 13th ACM Conference on Security and Privacy in Wireless and Mobile Networks, 2020, pp. 42\u201352. [9] X. Zhou, A. Hu, G. Li, L. Peng, Y. Xing, and J. Yu, \u201cDesign of a Robust RF Fingerprint Generation and Classification Scheme for Practical Device Identification,\u201d in IEEE Conference on Communications and Network Security (CNS), 2019, pp. 196\u2013204. [10] J. Yu, A. Hu, F. Zhou, Y. Xing, Y. Yu, G. Li, and L. Peng, \u201cRadio Frequency Fingerprint Identification Based on Denoising Autoencoders,\u201d in International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob), 2019, pp. 1\u20136. [11] K. Sankhe, M. Belgiovine, F. Zhou, L. Angioloni, F. Restuccia, S. D\u2019Oro, T. Melodia, S. Ioannidis, and K. Chowdhury, \u201cNo Radio Left Behind: Radio Fingerprinting Through Deep Learning of Physical-Layer Hardware Impairments,\u201d IEEE Transactions on Cognitive Communications and Networking, vol. 6, no. 1, pp. 165\u2013178, 2020. [12] X. Ying, J. Mazer, G. Bernieri, M. Conti, L. Bushnell, and R. Poovendran, \u201cDetecting ADS-B Spoofing Attacks Using Deep Neural Networks,\u201d in IEEE Conference on Communications and Network Security (CNS), 2019, pp. 187\u2013195. [13] A. Al-Shawabka, F. Restuccia, S. D\u2019Oro, T. Jian, B. Costa Rendon, N. Soltani, J. Dy, S. Ioannidis, K. Chowdhury, and T. Melodia, \u201cExposing the Fingerprint: Dissecting the Impact of the Wireless Channel on Radio Fingerprinting,\u201d in IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, 2020, pp. 646\u2013655. [14] Z. Zhuang, X. Ji, T. Zhang, J. Zhang, W. Xu, Z. Li, and Y. Liu, \u201cFBSleuth: Fake Base Station Forensics via Radio Frequency Fingerprinting,\u201d in Proceedings of the 2018 on Asia Conference on Computer and Communications Security, ser. ASIACCS \u201918, 2018, p. 261\u2013272. [15] S. Wang, L. Peng, H. Fu, A. Hu, and X. Zhou, \u201cA Convolutional Neural Network-Based RF Fingerprinting Identification Scheme for Mobile Phones,\u201d in IEEE INFOCOM 2020-IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS). IEEE, 2020, pp. 115\u2013120. [16] K. Sankhe, M. Belgiovine, F. Zhou, S. Riyaz, S. Ioannidis, and K. Chowdhury, \u201cORACLE: Optimized Radio clAssification through Convolutional neuraL nEtworks,\u201d in IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, 2019, pp. 370\u2013378. [17] T. Jian, B. C. Rendon, E. Ojuba, N. Soltani, Z. Wang, K. Sankhe, A. Gritsenko, J. Dy, K. Chowdhury, and S. Ioannidis, \u201cDeep Learning for RF Fingerprinting: A Massive Experimental Study,\u201d IEEE Internet of Things Magazine, vol. 3, no. 1, pp. 50\u201357, 2020. [18] H. Jafari, O. Omotere, D. Adesina, H. Wu, and L. Qian, \u201cIoT Devices Fingerprinting Using Deep Learning,\u201d in IEEE Military Communications Conference (MILCOM), 2018, pp. 1\u20139. [19] J. Bassey, D. Adesina, X. Li, L. Qian, A. Aved, and T. Kroecker, \u201cIntrusion Detection for IoT Devices based on RF Fingerprinting using Deep Learning,\u201d in International Conference on Fog and Mobile Edge Computing (FMEC), 2019, pp. 98\u2013104. [20] S. Balakrishnan, S. Gupta, A. Bhuyan, P. Wang, D. Koutsonikolas, and Z. Sun, \u201cPhysical Layer Identification Based on Spatial\u2013Temporal Beam Features for Millimeter-Wave Wireless Networks,\u201d IEEE Transactions on Information Forensics and Security, vol. 15, pp. 1831\u20131845, 2020.\n[21] M. Foruhandeh, A. Z. Mohammed, G. Kildow, P. Berges, and R. Gerdes, \u201cSpotr: GPS Spoofing Detection via Device Fingerprinting,\u201d in Proceedings of the 13th ACM Conference on Security and Privacy in Wireless and Mobile Networks, ser. WiSec \u201920, 2020, p. 242\u2013253. [22] T. Rappaport, Wireless Communications: Principles and Practice, 2nd ed. USA: Prentice Hall PTR, 2001. [23] I. Goodfellow, Y. Bengio, and A. Courville, Deep Learning. MIT Press, 2016, http://www.deeplearningbook.org. [24] D. P. Kingma and M. Welling, \u201cAn introduction to variational autoencoders,\u201d arXiv preprint arXiv:1906.02691, 2019. [25] C. Ieracitano, A. Adeel, F. C. Morabito, and A. Hussain, \u201cA novel statistical analysis and autoencoder driven intelligent intrusion detection approach,\u201d Neurocomputing, vol. 387, pp. 51 \u2013 62, 2020. [Online]. Available: http://www.sciencedirect.com/science/article/ pii/S0925231219315759 [26] S. Nazir, S. Patel, and D. Patel, \u201cAutoencoder based anomaly detection for scada networks,\u201d International Journal of Artificial Intelligence and Machine Learning (IJAIML), 2020. [27] K. Yang, J. Zhang, Y. Xu, and J. Chao, \u201cDdos attacks detection with autoencoder,\u201d in NOMS 2020 - 2020 IEEE/IFIP Network Operations and Management Symposium, 2020, pp. 1\u20139. [28] S. Raponi, I. Ali, and G. Oligeri, \u201cSound of Guns: Digital Forensics of Gun Audio Samples meets Artificial Intelligence,\u201d arXiv preprint arXiv:2004.07948, 2020. [29] W. Liu, Z. Wang, X. Liu, N. Zeng, Y. Liu, and F. E. Alsaadi, \u201cA survey of deep neural network architectures and their applications,\u201d Neurocomputing, vol. 234, pp. 11\u201326, 2017. [30] K. He, X. Zhang, S. Ren, and J. Sun, \u201cDeep Residual Learning for Image Recognition,\u201d in IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016, pp. 770\u2013778.\n[31] S. R. Pratt, R. A. Raines, C. E. Fossa, and M. A. Temple, \u201cAn operational and performance overview of the IRIDIUM low earth orbit satellite system,\u201d IEEE Communications Surveys, vol. 2, no. 2, pp. 2\u201310, 1999. [32] IRIDIUM Corp., \u201cIridium\u2019s Internet of Things - Connect to a World of IoT Possibilities,\u201d https://www.iridium.com/solutions/iot/, February 2020, accessed: 2020-08-25. [33] Beam Communications, \u201cIridium Beam Active Antenna (RST740),\u201d https://www.beamcommunications.com/satellite/ 76-iridium-beam-active-antenna, 2020, (Accessed: 2020-09-07). [34] Ettus Research, \u201cUSRP X310,\u201d https://www.ettus.com/all-products/ x310-kit/, 2020, (Accessed: 2020-09-07). [35] \u2014\u2014, \u201cUBX160 Daughterboard,\u201d https://www.ettus.com/product/details/ UBX160, 2020, (Accessed: 2020-09-07). [36] C. C. C. M\u00fcnchen, \u201cGnuradio iridium out of tree module,\u201d https://github. com/muccc/gr-iridium, Sep. 2019, accessed: 2020-09-07. [37] \u2014\u2014, \u201cSimple toolkit to decode iridium signals,\u201d https://github.com/ muccc/iridium-toolkit, Sep. 2019, accessed: 2020-09-07. [38] S. Sciancalepore, \u201cWeird patterns in i/q values,\u201d https://github.com/ muccc/gr-iridium/issues/48#issuecomment-657152591, 2020, [Online; accessed 26-August-2020]. [39] J. Yosinski, J. Clune, Y. Bengio, and H. Lipson, \u201cHow transferable are features in deep neural networks?\u201d in Proceedings of the 27th International Conference on Neural Information Processing Systems Volume 2, ser. NIPS\u201914. Cambridge, MA, USA: MIT Press, 2014, p. 3320\u20133328. [40] A. Makhzani and B. Frey, \u201cK-sparse autoencoders,\u201d arXiv preprint arXiv:1312.5663, 2013. [41] M. F. M\u00f8ller, \u201cA scaled conjugate gradient algorithm for fast supervised learning,\u201d Neural networks, vol. 6, no. 4, pp. 525\u2013533, 1993.\n6\n36\n69\n87\n110\n112\n115\n9\n26\n28\n46\n71\n78\n93\n107\n2\n7\n22\n43\n57\n67\n94\n103\n24\n33\n38\n42\n44\n51\n4\n8\n40\n77\n3\n16\n25\n65\n92\n39\n49\n96\n74\n89\n99\n5\n23\n82\n85\n13\n50\n72\n90\n109\n114\n29\n73\n88\n30\n79\n81\n17\n48\n104\n68\n111\n18\nPredicted Class\n6\n36\n69\n87\n10\n12\n15\n9\n26\n28\n46\n71\n78\n93\n07\n2\n7\n22\n43\n57\n67\n94\n03\n24\n33\n38\n42\n44\n51\n4\n8\n40\n77\n3\n16\n25\n65\n92\n39\n49\n96\n74\n89\n99\n5\n23\n82\n85\n13\n50\n72\n90\n09\n14\n29\n73\n88\n30\n79\n81\n17\n48\n04\n68\n11\n18\n10000 IQ samples per image - 30 runs\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n2\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n2\n2\n3\n1\n2\n5\n1\n2\n1\n3\n1\n1\n1\n6\n1\n5\n8\n12\n2\n1\n1\n1\n4\n1\n3\n7\n1\n4\n9\n2\n1\n7\n1\n1\n2\n1\n5\n1\n5\n23\n",
    "paper_type": "method",
    "attri": {
        "background": "Physical-layer security is regaining traction in the research community, due to the performance boost introduced by deep learning classification algorithms. This is particularly true for sender authentication in wireless communications via radio fingerprinting. However, previous research efforts mainly focused on terrestrial wireless devices while, to the best of our knowledge, none of the previous work took into consideration satellite transmitters.",
        "problem": {
            "definition": "The problem addressed in this paper is the authentication of Low-Earth Orbit (LEO) satellite transmitters using radio fingerprinting techniques, which are complicated by unique challenges such as high attenuation, multi-path fading, and the rapid movement of satellites.",
            "key obstacle": "The main difficulty lies in the non-standard electronics of satellite radio transducers, which are aged and specifically designed for harsh conditions, and the unique down-link characteristics experienced by receivers due to the satellites' high speeds and distances."
        },
        "idea": {
            "intuition": "The idea was inspired by the potential of deep learning algorithms, particularly Convolutional Neural Networks (CNNs) and autoencoders, to effectively classify and authenticate radio signals by exploiting unique characteristics in IQ samples.",
            "opinion": "The proposed idea entails a methodology called PAST-AI that utilizes advanced AI solutions to authenticate LEO satellites through fingerprinting their IQ samples.",
            "innovation": "The primary innovation of this method is the application of deep learning techniques to radio fingerprinting in the satellite domain, which has not been previously explored, particularly for LEO satellites."
        },
        "method": {
            "method name": "PAST-AI",
            "method abbreviation": "PAST-AI",
            "method definition": "PAST-AI is a methodology designed for the physical-layer authentication of satellite transmitters by analyzing their IQ samples using deep learning techniques.",
            "method description": "The core of the method involves collecting and processing IQ samples from satellite transmissions and using CNNs and autoencoders to classify and authenticate these signals.",
            "method steps": [
                "Collect IQ samples from satellite transmissions.",
                "Pre-process the IQ samples to generate suitable input for deep learning algorithms.",
                "Train deep learning models (CNNs and autoencoders) on the processed IQ samples.",
                "Evaluate the models on validation and test datasets to assess their performance in authenticating satellite transmitters."
            ],
            "principle": "This method is effective because it leverages the unique hardware imperfections in the satellite transmitters that can be detected and classified even in the presence of noise, thus enabling reliable authentication."
        },
        "experiments": {
            "evaluation setting": "The methodology was tested on real data collected from an extensive measurement campaign on the IRIDIUM LEO satellites constellation, involving over 100 million I/Q samples collected over 589 hours.",
            "evaluation method": "The performance of the method was evaluated by measuring classification accuracy across different scenarios, including intra-constellation satellite authentication and satellite authentication in the wild."
        },
        "conclusion": "The proposed PAST-AI methodology successfully demonstrates the feasibility of physical-layer authentication for satellite transmitters through advanced deep learning techniques, achieving high accuracy in classifying and authenticating satellite signals.",
        "discussion": {
            "advantage": "The key advantage of the proposed approach is its ability to authenticate satellite transmitters effectively, even in challenging conditions, leveraging deep learning for robust classification.",
            "limitation": "A limitation of the method is that it may require a significant amount of data for training to achieve optimal performance, and its effectiveness could vary based on the specific characteristics of the satellite signals.",
            "future work": "Future research could explore further refinements of the methodology, including the development of more sophisticated models and techniques for enhancing classification performance in even more challenging scenarios."
        },
        "other info": {
            "dataset availability": "The dataset used for the experiments, containing over 100 million IQ samples, will be made publicly available upon acceptance of the paper.",
            "measurement conditions": "The data was collected under harsh conditions, which may affect the performance of the authentication method but also demonstrates its robustness."
        }
    },
    "mount_outline": [
        {
            "section number": "1",
            "key information": "The paper discusses the significance of physical-layer security and its implications in wireless communications, particularly focusing on the authentication of Low-Earth Orbit (LEO) satellite transmitters."
        },
        {
            "section number": "2",
            "key information": "The paper defines the problem of authenticating LEO satellite transmitters using radio fingerprinting techniques, highlighting unique challenges such as high attenuation and multi-path fading."
        },
        {
            "section number": "2.1",
            "key information": "Key terms defined in the paper include 'physical-layer security', 'radio fingerprinting', and 'deep learning classification algorithms'."
        },
        {
            "section number": "3",
            "key information": "The paper explores the causes and consequences of authentication challenges in satellite communications, particularly focusing on the non-standard electronics of satellite radio transducers."
        },
        {
            "section number": "3.1",
            "key information": "The main difficulty in the paper is identified as the non-standard electronics of satellite radio transducers, designed for harsh conditions, which complicate authentication processes."
        },
        {
            "section number": "4",
            "key information": "The paper discusses the principles of the proposed PAST-AI methodology, which utilizes deep learning techniques for the physical-layer authentication of satellite transmitters."
        },
        {
            "section number": "4.1",
            "key information": "The PAST-AI methodology leverages Convolutional Neural Networks (CNNs) and autoencoders to classify and authenticate radio signals, ensuring alignment with advanced AI principles."
        },
        {
            "section number": "5",
            "key information": "The importance of model interpretability is highlighted through the explanation of how the PAST-AI methodology processes IQ samples to enhance understanding of satellite signal authentication."
        },
        {
            "section number": "5.1",
            "key information": "The methods used in the PAST-AI methodology include data collection, pre-processing of IQ samples, training of deep learning models, and performance evaluation."
        },
        {
            "section number": "6",
            "key information": "The paper defines responsible AI in the context of ensuring reliable authentication of satellite transmitters, emphasizing the need for robust classification techniques."
        },
        {
            "section number": "6.2",
            "key information": "Challenges faced in implementing responsible AI practices include the requirement for significant amounts of data for training and the variability of performance based on satellite signal characteristics."
        }
    ],
    "similarity_score": 0.5295150363682289,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-15-0337_algor/papers/PAST-AI_ Physical-layer Authentication of Satellite Transmitters via Deep Learning.json"
}