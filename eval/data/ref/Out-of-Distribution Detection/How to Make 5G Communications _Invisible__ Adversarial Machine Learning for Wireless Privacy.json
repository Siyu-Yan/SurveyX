{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:2005.07675",
    "title": "How to Make 5G Communications \"Invisible\": Adversarial Machine Learning for Wireless Privacy",
    "abstract": "We consider the problem of hiding wireless communications from an eavesdropper that employs a deep learning (DL) classifier to detect whether any transmission of interest is present or not. There exists one transmitter that transmits to its receiver in the presence of an eavesdropper, while a cooperative jammer (CJ) transmits carefully crafted adversarial perturbations over the air to fool the eavesdropper into classifying the received superposition of signals as noise. The CJ puts an upper bound on the strength of perturbation signal to limit its impact on the bit error rate (BER) at the receiver. We show that this adversarial perturbation causes the eavesdropper to misclassify the received signals as noise with high probability while increasing the BER only slightly. On the other hand, the CJ cannot fool the eavesdropper by simply transmitting Gaussian noise as in conventional jamming and instead needs to craft perturbation signals built by adversarial machine learning to enable covert communications. Our results show that signals with different modulation types and eventually 5G communications can be effectively hidden from an eavesdropper even if it is equipped with a DL classifier to detect transmissions.",
    "bib_name": "kim2020make5gcommunicationsinvisible",
    "md_text": "# How to Make 5G Communications \u201cInvisible\u201d: Adversarial Machine Learning for Wireless Privacy\nBrian Kim1, Yalin E. Sagduyu2, Kemal Davaslioglu2, Tugba Erpek2, and Sennur Ulukus1\nDepartment of Electrical and Computer Engineering, University of Maryland, College Park, MD 20742, US 2Intelligent Automation, Inc., Rockville, MD 20855, USA\nAbstract\u2014We consider the problem of hiding wireless communications from an eavesdropper that employs a deep learning (DL) classifier to detect whether any transmission of interest is present or not. There exists one transmitter that transmits to its receiver in the presence of an eavesdropper, while a cooperative jammer (CJ) transmits carefully crafted adversarial perturbations over the air to fool the eavesdropper into classifying the received superposition of signals as noise. The CJ puts an upper bound on the strength of perturbation signal to limit its impact on the bit error rate (BER) at the receiver. We show that this adversarial perturbation causes the eavesdropper to misclassify the received signals as noise with high probability while increasing the BER only slightly. On the other hand, the CJ cannot fool the eavesdropper by simply transmitting Gaussian noise as in conventional jamming and instead needs to craft perturbation signals built by adversarial machine learning to enable covert communications. Our results show that signals with different modulation types and eventually 5G communications can be effectively hidden from an eavesdropper even if it is equipped with a DL classifier to detect transmissions.\n# I. INTRODUCTION\nInformation privacy is a fundamental problem in wireless communications due to the open and shared nature of wireless medium. A canonical setting consists of a transmitterreceiver pair and an eavesdropper that aims to infer about the communications from the transmitter to its receiver. The eavesdropper may pursue different objectives such as decoding transmissions or detecting whether there is an ongoing transmission, or not. Information privacy regarding unauthorized decoding has been extensively studied both from encryptionbased security and information-theoretical studies [1], [2]. In this paper, we consider an eavesdropper that pursues the second objective, namely detecting an ongoing transmission. Once a transmission is detected, other attacks such as jamming can be launched subsequently. Covert communication has been studied in terms of hiding information in noise where the main goal has been to reduce the signal-to-noise ratio (SNR) at the eavesdropper [3], [4]. A fundamental bound has been established on the total transmit power over a given number of channel uses while keeping communications covert, known generally as the square-root law [5]; see also [6] for related work. In\nthis paper, we approach the covert communications problem from an adversarial machine learning (AML) point of view. AML studies the problem of machine learning (ML) in the presence of adversaries that may attempt to manipulate test and training processes of ML algorithms [7]\u2013[9]. While the origin of applications on AML is in computer vision, there has been a growing interest in applying AML to wireless communications, including exploratory (inference), causative (poisoning), evasion, Trojan and spoofing attacks [10]\u2013[16]. We consider an eavesdropper with a deep learning (DL) based classifier to identify an ongoing transmission. This classifier achieves high accuracy in distinguishing received signals from noise. We introduce a cooperative jammer (CJ) that has been extensively used in physical layer security literature [17]\u2013[19]. In this paper, the CJ transmits over the air at the same time as the transmitter with the purpose of misleading the eavesdropper\u2019s classifier. This corresponds to an evasion attack (or adversarial attack) in AML. Evasion attacks have been used to manipulate spectrum access [20]\u2013 [22], autoencoder communications [23] and modulation classifiers [24]\u2013[26]. In this paper, evasion attack is used as means of covert communications to prevent an eavesdropper from distinguishing an ongoing transmission from noise. We use the CJ as the source of adversarial perturbation to fool the classifier at an eavesdropper into making classification errors. While a large perturbation added by the CJ can easily fool the classifier, it would also increase the interference and the bit error rate (BER) at the intended receiver to undesirable levels. Therefore, an upper bound on the perturbation strength is imposed. A special case of our setting has been considered in [27], where the transmitter adds perturbations to its own signals to fool a modulation classifier while aiming to sustain its own communications performance. In this paper, our focus is on covert communications assisted by a CJ, whose position can further boost the impact on the eavesdropper to classify received signal as noise while reducing the impact on the BER performance. Note that it is typically more challenging to fool a classifier into misclassifying a signal as noise (as considered in this paper) instead of confusing it among signal types (as considered in [27]). For the performance evaluation, we start with basic (QPSK and 16QAM) modulated signals, and then extend to more complicated 5G communication signals, and show that we can effectively hide these signals from an eavesdropper that uses a DL classifier to detect transmissions.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4e3a/4e3adc69-b1d0-4b9e-baa9-28170a97d1f4.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Fig. 1. System model.</div>\nThe perturbation of the CJ is selected to minimize the strength of the perturbation subject to the condition of successfully fooling the eavesdropper, and an upper bound on the perturbation power that can translate to limiting the BER at the receiver. We show that Gaussian noise is not effective as an adversarial perturbation and develop an algorithm to optimize perturbations for the CJ to enable covert communications that we demonstrate for signals with different modulation types and 5G communications.\nWe consider a wireless system that consists of a transmitter, a receiver, a CJ, and an eavesdropper as shown in Fig. 1. The transmitter sends p complex symbols, x \u2208Cp, by mapping a binary input sequence m \u2208{0, 1}l. Specifically, x = gs(m), where gs : {0, 1}l \u2192Cp and s represents the modulation type of the transmitter. Then the transmitter\u2019s signal received at node j (either the receiver r or the eavesdropper e) is\n(1)\nwhere Htj = diag{htj,1, \u00b7 \u00b7 \u00b7 , htj,p} \u2208Cp\u00d7p and ntj \u2208Cp are the channel and complex Gaussian noise from the transmitter to node j, respectively. Upon receiving the signal rtr, the receiver decodes the message with the BER given by\n(2)\nwhere \u02c6mi is a decoded bit and I{\u00b7} is an indicator function. The eavesdropper tries to detect the existence of wireless transmission using a pre-trained DL-based classifier, namely a deep neural network (DNN), f(.; \u03b8) : X \u2192R2, where \u03b8 is the set of DNN parameters and X \u2282Cp. Input x \u2208X is assigned label \u02c6l(x, \u03b8) = arg maxk fk(x, \u03b8) where fk(x, \u03b8) is the output of classifier f corresponding to the kth class. To make communications between the transmitter and its receiver covert, the CJ transmits perturbation signal \u03b4 \u2208Cp to cause misclassification at the eavesdropper by changing the label of the received signal rte from signal to noise. Thus, if the transmitter transmits x, the received signal at node j is\n(3)\nwhere Hcj = diag{hcj,1, \u00b7 \u00b7 \u00b7, hcj,p} \u2208Cp\u00d7p is the channel from the CJ to node j.\nSince the perturbation signal from the CJ not only creates interference at the eavesdropper, but also at the receiver, the CJ determines its signal \u03b4 to cause misclassification at the eavesdropper using fixed power budget Pmax that also limits the BER at the receiver. Formally, the CJ first determines \u03b4 by solving the following optimization problem:\n(4)\n  The solution \u03b4\u2217to (4) results in the BER, Pe(m, r\u2032 tr(\u03b4\u2217)), at the receiver that can be bounded to a target level by selecting Pmax accordingly. Since solving (4) is difficult, different methods have been proposed in computer vision to approximate the adversarial perturbations like the fast gradient method (FGM) [7]. The FGM is computationally efficient for crafting adversarial attacks by linearizing the loss function, L(\u03b8, x, y), of the DNN classifier in a neighborhood of x where y is the label vector. This linearized function is used for optimization. In this paper, we consider a targeted attack, where the perturbation of the CJ aims to decrease the loss function of the class noise and cause a specific misclassification, from signal to noise, at the eavesdropper even though there is an actual transmission. We approach the problem from an AML point of view and aim to fool a target classifier, which is equivalent to hiding communications in noise from a wireless communication perspective. While designing the perturbation, we constrain the BER at the receiver to stay below certain level while satisfying the power constraint at the CJ, as stated in the constraints of the optimization problem (4). We assume that the CJ collaborates with the transmitter and thus knows the transmitted signal from the transmitter.\nIII. ADVERSARIAL PERTURBATION FOR THE CJ\nIn this section, we design the white-box perturbation for the CJ using targeted FGM to solve (4). For the targeted attack, the CJ minimizes L(\u03b8, r\u2032 te(\u03b4), ytarget) with respect to \u03b4 where ytarget is one-hot encoded desired target class. We fix ytarget as noise class since the CJ always tries to add perturbation to fool the eavesdropper into misclassifying a received signal as noise. We use FGM to linearize the loss function as L(\u03b8, r\u2032 te(\u03b4), ytarget) \u2248L(\u03b8, rte, ytarget) + \u03b4T \u2207xL(\u03b8, rte, ytarget) and then minimize it by setting \u03b4 = \u2212\u03b1\u2207xL(\u03b8, rte, ytarget), where \u03b1 is a scaling factor to constrain the adversarial perturbation power to Pmax. After we obtain \u03b4 that causes misclassification at the eavesdropper and satisfies the power constraint, we check the BER at the receiver. The perturbation power can further be adjusted to meet a target BER level. The details of determining the CJ\u2019s perturbation signal are presented in Algorithm 1.\nWe analyze the success of covertness achieved by CJ\u2019s perturbation at the eavesdropper and the corresponding effect on the BER at the receiver. We compare this perturbation with\nAlgorithm 1: Generating the perturbation of the CJ\nInputs: input rte, desired accuracy \u03b5acc, power constraint\nPmax and L(\u03b8, \u00b7, \u00b7)\nInitialize: \u03b5 \u21900, \u03b5max \u2190\u221aPmax, \u03b5min \u21900\n\u03b4norm =\n\u2207xL(\u03b8,rte,ytarget)\n(||\u2207xL(\u03b8,rte,ytarget)||2)\nwhile \u03b5max \u2212\u03b5min > \u03b5acc do\n\u03b5avg \u2190(\u03b5max + \u03b5min)/2\nxadv \u2190rte \u2212\u03b5avg\u03b4norm\nif \u02c6l(xadv) == noise then \u03b5min \u2190\u03b5avg\nelse \u03b5max \u2190\u03b5avg\nend\n\u03b5 = \u03b5max, \u03b4jam = \u2212\u03b5\u03b4norm\nrandom Gaussian noise transmitted by the CJ. Furthermore, we change the location of the CJ to investigate the effects of topology and channel. We assume that the binary source data is generated independently and uniformly at the receiver. The classifier at the eavesdropper is a convolutional neural network (CNN). The input to the CNN is of two dimensions (2,16) corresponding to 16 in-phase/quadrature (I/Q) data samples. The CNN consists of a convolutional layer with kernel size (1, 3), a hidden layer with dropout rate 0.1, ReLu activation function at convolutional and hidden layers and softmax activation function at the output layer that provides the label signal or noise. We apply backpropagation algorithm with Adam optimizer to train the CNN using cross-entropy as the loss function. The CNN is implemented in Keras with TensorFlow backend. We assume that the eavesdropper already knows the signal type that is used at the transmitter. Thus, the classifier at the eavesdropper is only trained with two labels, signal and noise. For each signal type, we train a separate classifier using different datasets, where 20000 symbols are generated and split into blocks of 16 I/Q symbols. The channel between the nodes have path-loss effects such that the channel gain from node i to node j is hij = \ufffd d0 dij \ufffd\u03b3 , where dij is the distance from node i to j, d0 is the reference distance and \u03b3 is the path loss exponent. We set d0 = 1 and \u03b3 = 2.8 throughout the simulations. Note that we can further use methods introduced in [25] to incorporate other channel effects such as shadowing and small-scale fading. We use the perturbation-to-noise ratio (PNR) metric from [24] that captures the relative perturbation power at the CJ with respect to the noise and measure how the increase in the PNR affects the accuracy of the classifier at the eavesdropper. As the PNR increases, the perturbation generated at the CJ is more likely to be detected by the eavesdropper and increases the BER at the receiver.\n# V. PERFORMANCE EVALUATION FOR SIGNALS WITH DIFFERENT MODULATIONS\n# A. Covertness of Communications\nWe aim to hide signals with a fixed modulation scheme, namely QPSK or 16QAM, used by the transmitter. The first topology that we consider is dcr = dce = 1. In Fig. 2, we\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/a2ae/a2ae5cbd-2706-4c8f-b957-3be8cf97df70.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Fig. 2. Success of covertness at the eavesdropper when dce = dcr = 1.</div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/2958/2958e434-ef62-4dc9-b041-a12db265e1a1.png\" style=\"width: 50%;\"></div>\nshow how the perturbation signal generated at the CJ affects the classifier at the eavesdropper. The x-axis is the PNR (measured in dB) and the y-axis is the success of covertness (measured in percentage) that indicates the success of making wireless communication covert, namely the likelihood that the eavesdropper classifies signal plus perturbation as noise. We observe that as the SNR of the signal increases, the CJ needs more perturbation power to cause misclassification at the eavesdropper. Furthermore, the 16QAM-modulated signal is more susceptible to adversarial perturbation than the QPSKmodulated signal, since it is more difficult to distinguish the 16QAM-modulated signal from the noise for the same SNR. Also, we observe that the success of covertness suddenly increases after some PNR value for both modulation types. On the contrary, the Gaussian noise-based perturbation has negligible effect on the classifier for all SNR values. We further observe that Gaussian noise with more power decreases the success of covertness when the SNR of 16-QAM modulated signal is 3 dB. The reason is the randomness of the Gaussian noise, which in fact strengthens the noise-like signal to be classified as a signal at the eavesdropper. In Fig. 3, we consider dcr = 1.5 and dce = 0.5 (namely, the distance between the CJ and the receiver is increased and the distance between the CJ and the eavesdropper is decreased compared to Fig. 2). As the SNR of the signal increases, the CJ requires more power to cause misclassification at the eavesdropper, as we have also observed in Fig. 2. Due to the reduced path loss effect between the CJ and the eavesdropper,\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/9e48/9e484835-460c-44de-8d3e-0d99b07b1026.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Fig. 4. BER at the receiver when dce = dcr = 1.</div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/fde3/fde3b94d-a167-445b-af38-fb46d8296000.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Fig. 5. BER at the receiver when dce = 0.5 and dcr = 1.5.</div>\nless power is required to cause misclassification compared to Fig. 2. This result motivates the use of AML instead of conventional jamming (e.g., [28]) to attack an eavesdropper.\n# B. Reliability of Communications\nThe BER performance at the receiver for different modulation types and SNR values is compared in Fig. 4 when dcr = dce = 1. We observe that the BER of 16QAM-modulated signals is more susceptible to the adversarial perturbation signal than the BER of QPSK-modulated signals. The reason is that since the 16QAM transmits more bits than the QPSK, the distances between constellation points are smaller, which leads to a larger BER for a given SNR. Moreover, as the SNR increases, the average BER decreases as expected. For the CJ with proposed adversarial perturbation, we observe that the BER curve saturates after some PNR value because the successful perturbation signal can be generated using less power than the maximum power that the CJ can use. Fig. 4 can be used as a guideline to determine the maximum PNR to satisfy the BER requirement at the receiver. For example, to meet the target BER of 0.15 for a QPSK-modulated signal, the PNR is selected at most -8dB when SNR is 3dB and the resulting success of covertness is 65%. Furthermore, we observe that the Gaussian noise-based perturbation results in lower BER than the adversarial perturbation in the low PNR regime. However, the BER gap between these two CJ schemes decreases when the PNR increases, and the adversarial perturbation results in a smaller BER in the high PNR region.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/efaa/efaa25f7-b629-418a-b959-ec2ef9660ca2.png\" style=\"width: 50%;\"></div>\nThe BER performance at the receiver for different modulation types and SNR values is compared in Fig. 5 when dcr = 1.5 and dce = 0.5. We observe that the BER gap between the Gaussian noise and adversarial perturbation for the same SNR value decreases due to the increased path loss effect between the CJ and the receiver. Thus, the CJ can create a perturbation signal that causes misclassification with higher success without increasing the BER further if the location of the CJ is closer to the eavesdropper. This result motivates the control of CJ positions to fool a target classifier while protecting the BER performance of the intended receiver.\nVI. PERFORMANCE EVALUATION FOR 5G COMMUNICATIONS\nAs a full-fledged waveform to hide, we consider the 5G physical layer communications where a 5G User Equipment (UE) transmits the 5G uplink signal to the base station (gNodeB) in the presence of the perturbation from the CJ. MATLAB 5G toolbox is used to generate 5G signals that include the transport (uplink shared channel, UL-SCH) and physical channel. The transport block is segmented after the cyclic redundancy check (CRC) addition and low-density parity-check (LDPC) coding is used as forward error correction. The output codewords are QPSK modulated as an example. Next, the generated resource grid is OFDM modulated with Inverse Fast Fourier Transform and Cyclic Prefix (CP) addition operations where the subcarrier spacing is 15 kHz. Target code rate is set to 820 1024 and the output I/Q samples are stored after the signal passes through the channel. Eavesdropper attempts to distinguish the received signals from noise, whereas the receiver attempts to decode the received signals by removing the CP and performing FFT, channel equalization, QPSK demodulation, LDPC and CRC decoding operations.\n# A. Covertness of Communications\nThe success of covertness for 5G communications is considered in Fig. 6. As we have seen in the previous figures for QPSK-modulated signals and 16QAM-modulated signals, the proposed jamming outperforms the Gaussian noise significantly in high PNR region for 5G communication signals. Also, we observe that more power is needed for CJ to fool the classifier at the eavesdropper when the distance between the CJ and the eavesdropper increases.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5a7b/5a7bd950-3a76-451a-a282-5d824d6d47b4.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Fig. 7. 5G communications BER performance at the receiver.</div>\n# B. Reliability of Communications\nThe BER for 5G communications is shown in Fig. 7. When dce = dcr = 1 and SNR is 5 dB, the Gaussian noise-based perturbation has higher BER performance compared to the proposed perturbation and a similar result is also observed for other SNR values. Note that the adversarial perturbation by the CJ not only increases the success of covertness, but also has less effect on the BER performance of the receiver compared to the Gaussian noise-based perturbation for 5G communication signals. We further observe that the Gaussian noise-based perturbation results in higher BER than the proposed adversarial perturbation when dce = 0.5, dcr = 1.5.\n# VII. CONCLUSION\nWe considered a wireless communication system in which a CJ designs its perturbation signal to fool a DL-based classifier at the eavesdropper into classifying the ongoing transmissions as noise. Following the AML approach, the CJ was designed to generate the perturbation signal with the FGM method subject to channel effects. For both basic modulated signals and sophisticated 5G signals, we showed that the CJ can generate a perturbation signal that causes misclassification at the eavesdropper (from signal to noise) with high success, while the BER at the receiver is only slightly affected. On the other hand, CJ with Gaussian noise is not successful in fooling the classifier. These results demonstrate the feasibility of covert communications when cast as an evasion attack against a DL-based classifier employed by an eavesdropper.\n",
    "paper_type": "method",
    "attri": {
        "background": "This paper addresses the issue of hiding wireless communications from an eavesdropper that employs a deep learning classifier to detect ongoing transmissions. Previous methods have focused on conventional jamming and covert communication strategies that reduce the signal-to-noise ratio at the eavesdropper. However, these methods have limitations, prompting the need for a new approach that leverages adversarial machine learning to enhance wireless privacy.",
        "problem": {
            "definition": "The problem defined in this paper is the detection of ongoing wireless transmissions by an eavesdropper using a deep learning-based classifier, which poses a significant threat to information privacy in wireless communications.",
            "key obstacle": "The main challenge is that existing jamming techniques, such as transmitting Gaussian noise, are ineffective in fooling sophisticated classifiers, necessitating a more advanced method to ensure covert communications."
        },
        "idea": {
            "intuition": "The intuition behind the proposed idea is to utilize adversarial machine learning techniques to craft perturbations that mislead the eavesdropper's classifier into misclassifying legitimate signals as noise.",
            "opinion": "The proposed idea involves a cooperative jammer (CJ) that generates adversarial perturbations to effectively obscure wireless communications from an eavesdropper equipped with a deep learning classifier.",
            "innovation": "The innovation lies in the use of adversarial perturbations tailored specifically for the communication context, which significantly enhances the ability to hide transmissions compared to traditional jamming methods."
        },
        "method": {
            "method name": "Adversarial Perturbation for Cooperative Jamming",
            "method abbreviation": "CJ-AP",
            "method definition": "The method involves a cooperative jammer that transmits adversarial perturbations designed to mislead a deep learning classifier at the eavesdropper, ensuring that ongoing transmissions are classified as noise.",
            "method description": "The core of the method is the generation of adversarial perturbations that effectively obscure the transmitted signals from detection by the eavesdropper.",
            "method steps": [
                "Identify the transmitted signal and its characteristics.",
                "Use a targeted fast gradient method to generate adversarial perturbations.",
                "Transmit the perturbation alongside the original signal to the eavesdropper.",
                "Evaluate the success of the perturbation in misclassifying the signal at the eavesdropper while monitoring the bit error rate at the intended receiver."
            ],
            "principle": "This method is effective because it strategically crafts perturbations that manipulate the classifier's decision boundary, allowing legitimate transmissions to remain undetected while minimally impacting the receiver's performance."
        },
        "experiments": {
            "evaluation setting": "The experiments were conducted using various modulation types, including QPSK and 16QAM, and later extended to 5G communication signals. The setup involved a transmitter, receiver, cooperative jammer, and eavesdropper with a deep learning classifier.",
            "evaluation method": "The performance of the proposed method was assessed by measuring the classifier's success rate in misclassifying the signals and analyzing the bit error rate at the receiver under different signal-to-noise ratios."
        },
        "conclusion": "The study demonstrated that the cooperative jammer could effectively generate perturbations that cause misclassification at the eavesdropper while maintaining a low bit error rate at the intended receiver. The adversarial perturbation approach outperformed traditional Gaussian noise methods, highlighting its potential for covert communications against deep learning-based classifiers.",
        "discussion": {
            "advantage": "The key advantages of the proposed approach include its effectiveness in fooling advanced classifiers and its minimal impact on the receiver's performance, making it a robust solution for enhancing wireless privacy.",
            "limitation": "A limitation of the method is the dependence on the accuracy of the deep learning classifier at the eavesdropper, as any improvements in the classifier could potentially reduce the effectiveness of the adversarial perturbations.",
            "future work": "Future research could explore optimizing the perturbation generation process further and investigating the application of this approach in more complex communication environments and against different types of classifiers."
        },
        "other info": {
            "info1": "The experiments utilized MATLAB 5G toolbox for generating 5G signals.",
            "info2": {
                "info2.1": "The cooperative jammer collaborates with the transmitter to know the transmitted signal.",
                "info2.2": "The classifier at the eavesdropper is trained using cross-entropy loss function with Adam optimizer."
            }
        }
    },
    "mount_outline": [
        {
            "section number": "1.1",
            "key information": "The paper addresses the critical issue of hiding wireless communications from eavesdroppers, emphasizing the importance of OOD detection in ensuring information privacy in wireless communication systems."
        },
        {
            "section number": "1.2",
            "key information": "The concepts of adversarial machine learning and its application in enhancing wireless privacy are interrelated with OOD detection, as both involve strategies to mislead classifiers and ensure secure communications."
        },
        {
            "section number": "3.4",
            "key information": "The method proposed in the paper, called Adversarial Perturbation for Cooperative Jamming (CJ-AP), utilizes deep learning techniques to mislead eavesdropper classifiers, showcasing a deep learning-based approach for OOD detection."
        },
        {
            "section number": "5.2",
            "key information": "The paper discusses how adversarial examples, in the form of adversarial perturbations, impact the robustness of machine learning models used by eavesdroppers to detect ongoing transmissions."
        },
        {
            "section number": "7.1",
            "key information": "A limitation of existing jamming techniques is highlighted, noting their ineffectiveness against sophisticated classifiers, which poses challenges in current OOD detection methods."
        },
        {
            "section number": "7.2",
            "key information": "Future research could explore optimizing adversarial perturbation generation and applying this approach in complex communication environments, suggesting potential advancements in OOD detection and adversarial techniques."
        }
    ],
    "similarity_score": 0.6189493301515825,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-07-2332_Out-o/papers/How to Make 5G Communications _Invisible__ Adversarial Machine Learning for Wireless Privacy.json"
}