{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:2306.15091",
    "title": "Understanding In-Context Learning via Supportive Pretraining Data",
    "abstract": "In-context learning (ICL) improves language models\u2019 performance on a variety of NLP tasks by simply demonstrating a handful of examples at inference time. It is not well understood why ICL ability emerges, as the model has never been specifically trained on such demonstrations. Unlike prior work that explores implicit mechanisms behind ICL, we study ICL via investigating the pretraining data. Specifically, we first adapt an iterative, gradient-based approach to find a small subset of pretraining data that supports ICL. We observe that a continued pretraining on this small subset significantly improves the model\u2019s ICL ability, by up to 18%. We then compare the supportive subset constrastively with random subsets of pretraining data and discover: (1) The supportive pretraining data to ICL do not have a higher domain relevance to downstream tasks. (2) The supportive pretraining data have a higher mass of rarely occurring, long-tail tokens. (3) The supportive pretraining data are challenging examples where the information gain from long-range context is below average, indicating learning to incorporate difficult long-range context encourages ICL. Our work takes a first step towards understanding ICL via analyzing instance-level pretraining data. Our insights have a potential to enhance the ICL ability of language models by actively guiding the construction of pretraining data in the future.",
    "bib_name": "han2023understandingincontextlearningsupportive",
    "md_text": "# Xiaochuang Han\u2660\u2663\u2217 D\u00e1niel Simig\u2663 Todor Mihaylov\u2663 Yulia Tsvetkov\u2660 Asli Celikyilmaz\u2663 Tianlu Wang\u2663\n{xhan77, yuliats}@cs.washington.edu simigd@gmail.com {tbmihaylov, aslic, tianluwang}@meta.com\n# Abstract\nIn-context learning (ICL) improves language models\u2019 performance on a variety of NLP tasks by simply demonstrating a handful of examples at inference time. It is not well understood why ICL ability emerges, as the model has never been specifically trained on such demonstrations. Unlike prior work that explores implicit mechanisms behind ICL, we study ICL via investigating the pretraining data. Specifically, we first adapt an iterative, gradient-based approach to find a small subset of pretraining data that supports ICL. We observe that a continued pretraining on this small subset significantly improves the model\u2019s ICL ability, by up to 18%. We then compare the supportive subset constrastively with random subsets of pretraining data and discover: (1) The supportive pretraining data to ICL do not have a higher domain relevance to downstream tasks. (2) The supportive pretraining data have a higher mass of rarely occurring, long-tail tokens. (3) The supportive pretraining data are challenging examples where the information gain from long-range context is below average, indicating learning to incorporate difficult long-range context encourages ICL. Our work takes a first step towards understanding ICL via analyzing instance-level pretraining data. Our insights have a potential to enhance the ICL ability of language models by actively guiding the construction of pretraining data in the future.\n# 1 Introduction\nIn-context learning in NLP has drawn tremendous attention recently (Dong et al., 2022). Unlike traditional learning paradigms that rely on training or finetuning models, in-context learning only provides a handful of demonstration examples to language models as a prefix to the test input, without any parameter updates. In-context learning has shown superior performance on a range of NLP tasks (Brown et al., 2020; Zhang et al., 2022b; \u2217Work done during an internship at Meta AI.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4aaf/4aafa4ea-44aa-4925-aecc-b2c751205ed0.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 1: An example from the pretraining data of OPT (Zhang et al., 2022b) and an illustrative in-context learning example of topic classification. The in-context learning task data can be drastically different from pretraining instances, both in content and format.</div>\nFigure 1: An example from the pretraining data of OPT (Zhang et al., 2022b) and an illustrative in-context learning example of topic classification. The in-context learning task data can be drastically different from pretraining instances, both in content and format.\nChowdhery et al., 2022; Hoffmann et al., 2022), but the origin and reason of this emergent ability remain under-investigated. In-context learning is surprising since language models have not been explicitly trained to learn from demonstration examples (Xie et al., 2022). As shown in an illustrative scenario in Figure 1, a typical pretraining data instance is highly different from an in-context learning example for downstream tasks, in both content and format. Prior work have attempted to answer what incontext learning is, through empirically investigating useful and irrelevant attributes of the demonstration examples (Min et al., 2022; Zhang et al., 2022a), or theoretically proving certain synthetic language models implicitly do Bayesian inference with demonstrations (Xie et al., 2022). Furthermore, recent work have drawn connections between the mechanism of in-context learning and standard learning algorithms, such as regression, nearest neighbor, and gradient descent (Olsson et al., 2022; Aky\u00fcrek et al., 2022; Dai et al., 2022; von Oswald et al., 2022). Differently, in this work we are interested in understanding from where the in-context learning ability is acquired, through a perspective of pre-\ntraining data. Although not many, some recent work have investigated this direction. For instance, Shin et al. (2022) pretrain a variety of language models on different corpora. They study correlations between attributes of pretraining datasets and in-context learning performance, at a relatively coarse dataset-level. Chan et al. (2022) construct pretraining data with different attributes and discover that some distributional properties of the data drive the emergence of in-context learning. However, their experiment is limited to synthetic data of image-label pairs. In this work, we investigate a large language model OPT (Zhang et al., 2022b) and its pretraining data. We first hypothesize that there exists some specific pretraining data instances that are particularly helpful to the model\u2019s in-context learning ability. As an attempt to find such instances, we adapt an iterative, gradient-based method ORCA (Han and Tsvetkov, 2022) to search within OPT\u2019s pretraining corpus. The process is guided by the gradients of the in-context learning data from downstream tasks, and we refer to the identified subset as supportive pretraining data to in-context learning following Han and Tsvetkov (2022). Furthermore, we quantitatively verify through a perturbative continued pretraining, that the supportive subset does improve the model\u2019s in-context learning performance on downstream tasks, while not affecting a spurious zero-shot performance (\u00a72). We then analyze the identified supportive data in contrast to the general pretraining data, to obtain data features particularly relevant to in-context learning. We specifically approach from three aspects: the domain relevance to downstream tasks, the token frequency distribution, and the information gain of incorporating long-range pretraining context. Our major findings include: (1) Compared to general pretraining data, the supportive data do not have a higher domain relevance to the downstream tasks. (2) The supportive pretraining data contain a relatively higher amount of rarely occurring, long-tail tokens. (3) The supportive pretraining data are challenging examples in incorporating long-range context for language modeling (\u00a73). Our work offers a first step towards interpreting in-context learning in NLP tasks via analyzing instance-level pretraining data. We believe it can help improve the transparency and interpretability of language models\u2019 in-context learning behavior. Our analysis can also pave the way to improved\nin-context learning in the future by informing pretraining data construction.\n# 2 Finding supportive pretraining data for in-context learning\nHan and Tsvetkov (2022) propose an iterative, gradient-based method ORCA to find supportive pretraining data of BERT (Devlin et al., 2019) under a vanilla zero-shot prompting setup. In this section, we provide some background and adapt ORCA for large language models in a setting of incontext learning (ICL), finding supportive pretraining data for downstream tasks with demonstration examples.1\n# 2.1 Methodology\nAssume we have a pretrained language model (LM) \u03b8 and data pairs (x, y) representing the inputs and ground truth outputs of task Dtask. Both x and y are in natural language. For classification tasks, the target labels can be converted to natural language via verbalizers (Schick and Sch\u00fctze, 2021).\nZero-shot prompting A pretrained language model can be applied to perform downstream tasks via zero-shot prompting (e.g., Petroni et al., 2019). For classification tasks, the language model \u03b8 outputs a candidate answer with top probability, argmaxy\u2032\u2208Y p\u03b8(y\u2032 | x) = argmaxy\u2032\u2208Y \ufffdt<|y\u2032| t=0 p\u03b8(y\u2032 t | x, y\u2032 <t), where Y contains all candidate answers y\u2032. For generation tasks, outputs can be obtained by sampling autoregressively from \u03b8 conditioned on x (e.g., Holtzman et al., 2019). This is a zero-shot scenario with no demonstration examples.\nIn-context learning Instead of modeling p\u03b8(y | x), ICL estimates p\u03b8(y | {(xdemo, ydemo)}, x), prepending the original model input with several demonstration examples (xdemo, ydemo) sampled from the target task Dtask. The language model \u03b8 is never trained on the task data with demonstrations. However, we can form a loss on the in-context data as a surrogate for \u03b8\u2019s\n1Identifying important training data for an inference time model output is an estabilished topic in model interpretability, with various prior work measuring data importance via variants of gradient similarity (Koh and Liang, 2017; Pruthi et al., 2020). However, these methods are prohibitively expensive to be applied to large-scale pretraining data. Concurrent to our work, Guu et al. (2023) propose an interesting method to model the importance of individual training examples by simulating training runs, but it is also on a scale of finetuning instead of pretraining.\nconstruct w given a prefixing context, L \u03b8 (w) = \u2212log \ufffdt<|w| t=0 p\u03b8(wt | w<t). Supportive pretraining data Our goal is to locate what pretraining data w if upweighted would be most helpful to the LM \u03b8\u2019s ICL ability. Following ORCA (Han and Tsvetkov, 2022), we use the similarity between gradients \u2207\u03b8LPT \u03b8 (w) and \u2207\u03b8LICL \u03b8 (x, y) iteratively to find such supportive pretraining data. We show details of our adapted algorithm ORCA-ICL in Figure 2. The algorithm finds pretraining data that exert a gradient to \u03b8 similarly as a group of guidance ICL task data would. \u2207\u03b8LICL \u03b8 (x, y) provides a guidance for the direction the model parameters should be updated towards to be better at ICL, while \u2207\u03b8LPT \u03b8 (w) approximates how the direction the model parameters would be updated based on individual pretraining instances. We conduct a multi-iteration process (a total of M iterations each selecting k supportive instances) to mitigate noise.2 SGD denotes an one-pass stochastic gradient descent to mimick an incremental upweight to the selected data, with a minimum number of steps to prevent overfitting. The resulting supportive set S has a very small size (under 2000 in this work).3 Verifying supportiveness To quantitatively evaluate the supportiveness of the selected set of pretraining data, we perform an one-pass gradient descent on the original LM with the selected set S, which mimics a perturbative continued pretraining with a minimum number of updates: \u03b8M \u2190 SGD S (\u03b80). We then benchmark this perturbed model (\u03b8M) with the original model (\u03b80) and a model perturbed with a random set of pretraining data. We expect the perturbed model using our selected supportive pretraining data to achieve a better ICL performance.\nAlgorithm 1 ORCA-ICL\n1: Load a pretrained language model as \u03b80\n2: for i \u21901, M do\n3:\nif i = 1 then\n4:\nS1 \u2190argtop-k\nw\u2208DPT\n[cos(\u2207\u03b8LPT\n\u03b80(w), \u2207\u03b8\n\ufffd\nDtask\nLICL\n\u03b80 (x, y))]\n5:\n\u03b81 \u2190SGD\nS1 (\u03b80)\n6:\nelse\n7:\nSi \u2190argtop-k\nw\u2208DPT\n[cos(\u2207\u03b8LPT\n\u03b80(w), \u2207\u03b8\n\ufffd\nDtask\nLICL\n\u03b8i\u22121(x, y))]\n8:\n\u03b8i \u2190SGD\n\u222ai\nj=1Sj\n(\u03b80)\n9:\nend if\n10: end for\n11: Return supportive pretraining data S \u2190\u222aM\ni=1Si\nFigure 2: ORCA-ICL, an iterative gradient-based selection of supportive pretraining data for ICL.\n# 2.2 Setup\nLanguage model Throughout the work, we use a pretrained, autoregressive OPT-6.7B (Zhang et al., 2022b) as our LM \u03b8.\nTasks In this work, we focus on classification problems and first retrieve 48 classification-based tasks from Natural Instructions v2 (NI-v2, Wang et al., 2022). We apply the LM on the tasks with both a zero-shot and in-context learning setup. We extract tasks that achieve at least 10% better performance with in-context demonstrations. We group 17 tasks that satisfies the constraint and further select 6 typical tasks among them: SST-2: Movie review sentiment classification (Socher et al., 2013). AG News: News topic classification (Zhang et al., 2015). Story Cloze Test: Story coherence classification (Mostafazadeh et al., 2017). SMS Spam Collection: Spam classification (Almeida et al., 2011). Sentiment 140: Tweet sentiment classification (Go et al., 2009). TweetQA: Answer verification (Xiong et al., 2019). For each task, we randomly sample 500 examples with a balanced class distribution as Dtask, guiding the ORCA-ICL algorithm. The quantitative evaluation is performed on the full dataset. For ICL, for each instance in the task data, we randomly sample 4 demonstration examples under each candidate class defined in the task.4 The order of demonstration examples in the context is randomly shuffled. The template and verbalizer of each task follows the original NI-v2 dataset, though we did not include the task instructions, as\nthe focus of this work is in-context learning with demonstration examples.\nPretraining Considering the size of pretraining data DPT, we include an as large portion of OPT\u2019s pretraining data as possible under a reasonable budget. Specifically, in this work we use a total of 2.5M pretraining instances each consists of 2048 tokens.5 For computing efficiency, we use intralayer model parallelism (Shoeybi et al., 2019) and fully sharded data parallel (Ott et al., 2021).6\nImplementation Details We run ORCA-ICL with a maximum of M = 5 iterations. In each iteration we extract k = 400 pretraining instances with top gradient similarity with the ICL task data. We use a batch size of 16 and learning rate of 2e-5 for the one-pass gradient descent with an Adam optimizer (Kingma and Ba, 2014). This results in a total of 125 updates7 to the original LM after all iterations as the perturbative continued pretraining.\n# 2.3 Results\nPerturbative continued pretraining As the main evaluation of the supportive pretraining data obtained by ORCA-ICL, we perform perturbative continued pretraining on both the selected supportive data and random pretraining data as a control. Table 1 shows the main results of task accuracy. The leftmost column shows a source task Dtask guiding the selection of supportive pretraining data. At each row, we evaluate the perturbed model (SGD S (\u03b80)) on all 6 tasks. The ICL performance of the original LM is reported in the headers of the table. In each cell of the table, the top number shows the continued pretraining result with the supportive data we identified. We consider M \u2208[1, 5] iterations as a hyperparameter and report result with a best M. We want to know at a same size of selection, how our identified subset performs compared to random pretraining data. We therefore run random selection with 5 seeds, and the bottom number of the cell shows the continued pretraining result with random data at a same size of our selection, accompanied by a standard deviation. The performance of our selection is bolded when\nthe performance difference with random selection exceeds one standard deviation. The diagonal cells show the performance of perturbed models on the same task used for selecting supportive data. We observe on 4 of the 6 source tasks, our selection of supportive pretraining data is effective. For the cross-task performance, we observe on 5 of the 6 source tasks, our selection is effective for at least three tasks.8 We conclude that our identified supportive pretraining data is overall effective for ICL, though the cross-task results show a portion of the ICL behavior can be task-specific and not universal across tasks.\n# 3 Analyzing supportive pretraining data for in-context learning\nIn the previous section, we identify a small subset of pretraining data that supports the ICL ability of language models. In this section, we analyze the selected supportive pretraining data to understand what makes them useful to ICL. Specifically, we compare the supportive pretraining data contrastively with randomly sampled pretraining instances, investigating three aspects of the pretraining data: the domain relevance to downstream\nSource\nEval\nSST-2\nAG News\nStory\nCloze\nSMS\nSpam\nSentiment\n140\nTweetQA\n75.47\n74.12\n66.09\n45.07\n67.23\n62.36\nSST-2\n83.15\n75.87\u00b1 1.64\n74.91\n73.24\u00b1 1.24\n67.76\n66.24\u00b1 1.25\n52.48\n49.82\u00b1 4.50\n69.03\n66.23\u00b1 1.24\n62.20\n61.75\u00b1 0.26\nAG News\n79.04\n74.99\u00b1 0.77\n75.40\n73.77\u00b1 0.41\n68.34\n66.38\u00b1 0.69\n59.24\n46.55\u00b1 4.24\n68.96\n66.23\u00b1 1.24\n61.86\n62.02\u00b1 0.55\nStory Cloze\n75.33\n72.50\u00b1 2.53\n74.12\n73.77\u00b1 0.41\n67.47\n65.25\u00b1 1.52\n51.36\n47.15\u00b1 4.90\n69.92\n66.23\u00b1 1.24\n62.33\n62.02\u00b1 0.55\nSMS Spam\n73.88\n75.87\u00b1 1.64\n72.78\n73.77\u00b1 0.41\n67.25\n65.25\u00b1 1.52\n64.69\n46.55\u00b1 4.24\n63.70\n66.33\u00b1 1.34\n62.13\n61.75\u00b1 0.26\nSentiment 140\n77.56\n73.49\u00b1 2.33\n72.78\n73.77\u00b1 0.41\n66.78\n66.38\u00b1 0.69\n51.64\n44.52\u00b1 2.45\n66.66\n66.00\u00b1 1.41\n62.93\n61.64\u00b1 0.21\nTweetQA\n75.22\n72.50\u00b1 2.53\n71.52\n73.01\u00b1 1.42\n66.27\n64.91\u00b1 2.01\n43.09\n44.52\u00b1 2.45\n66.76\n66.33\u00b1 1.34\n61.31\n61.33\u00b1 0.80\nTable 1: Evaluation of supportive pretraining data to ICL. We obtain supportive pretraining data using the guidance of a source task and evaluate ICL on all tasks. In the headers, we show the ICL performance of the original LM. We perform perturbative continued pretraining with both our selected supportive data (top number in cells) and an equal number of randomly sampled pretraining data (bottom number in cells). Diagonal cells indicate same-task evaluation and are marked purple. Our performance is bolded when the difference exceeds one standard deviation. On 4 of 6 tasks, the same-task ICL performance gain is observed (diagonal). On 5 of 6 tasks, the corresponding supportive pretraining data improves ICL on at least three tasks (rows).\nZero-shot Eval\nOriginal\n+ICL-supportive\nSST-2\n46.82\n46.83\nAG News\n46.14\n44.05\nStory Cloze\n50.43\n51.39\nSMS Spam\n44.41\n43.84\nSentiment 140\n55.84\n54.90\nTweetQA\n50.44\n50.32\nTable 2: Control evaluation. We report the zero-shot prompting performance of the original LM and the perturbed LM after trained on our selected supportive pretraining data. No significant performance gain is observed for most tasks, showing our selected supportive pretraining data is specific to ICL without improving the zero-shot, no-demonstration task performance.\ntasks, the token frequency distribution, and the information gain of incorporating long-range context.\n# 3.1 Domain relevance\nXie et al. (2022) and Min et al. (2022) imply that in-context demonstration is useful since it helps locate a particular domain or concept of the test input the LM already learned through the pretraining\ndata. On the other hand, Olsson et al. (2022) imply that in-context demonstration is useful because the decision over the test input may be done through a soft-copy mechanism from the demonstration examples. These lead to two different expectations of the role of supportive pretraining data: (1) Inferred from Xie et al. (2022) and Min et al. (2022), the supportive pretraining data should be from a same domain as the demonstration and test examples, providing direct supporting knowledge to solve the downstream task. (2) Inferred from Olsson et al. (2022), the supportive pretraining data should be beneficial to the soft-copy mechanism, providing meta support for the abstract ability, unconstrained with the concrete data domain.9 We aim to measure the domain relevance between supportive pretraining data and downstream tasks.\nMethod To quantify domain relevance, we use MAUVE score (Pillutla et al., 2021) to measure an information divergence between two text distributions. We compute two MAUVE scores, between the target task data and our selected supportive pretraining data, and between the task data and ran-\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/a8ed/a8ed5239-0492-48cb-864d-10cac02b52ef.png\" style=\"width: 50%;\"></div>\nFigure 3: The MAUVE score between the supportive pretraining data and target task data, subtracted by the MAUVE score between random data and target task data. The error bars indicate the 95% confidence interval. No tasks show the supportive data has a significant higher domain relevance compared to random data.\ndom pretraining data. We then compute and report their difference. A positive MAUVE difference indicates a higher domain relevance of our supportive pretraining data.10 We use RoBERTa (Liu et al., 2019) as MAUVE\u2019s embedding model following He et al. (2022). Results We show the difference of MAUVE scores in Figure 3. The error bar shows the 95% confidence interval using 32 random seeds. We find that for 5 of the 6 tasks, there is no significant difference between the MAUVE scores of supportive pretraining data and random data. For SST-2, the supportive pretraining data even shows a lower MAUVE score. Therefore, the supportive pretraining data to ICL do not have a higher domain relevance to the task, compared to general pretraining data. This result aligns with the domain relevance finding in Shin et al. (2022) where dataset-level analyses were performed. This implies the improved ICL behavior of our models may be a meta ability, aided by pretraining data unrelated to the specific domain knowledge for solving the task, but related to a domain-invariant mechanism to learn from a data\u2019s context. \u00a73.3 continues this discussion.\n# 3.2 Token frequency distribution\nProviding demonstrations to a task input under an ICL setup creates repetitions (e.g., of label tokens), which changes the token frequency distribution of the ICL task data. Therefore, we are interested in\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1b64/1b64c146-5e09-4f62-a05a-237ad76e55e4.png\" style=\"width: 50%;\"></div>\nFigure 4: The difference in average Zipf\u2019s coefficients of the token frequency distribution of supportive pretraining instances and random examples. The error bars indicate the 95% confidence interval. We find a lower Zipf\u2019s coefficient for supportive pretraining data, indicating a flatter frequency distribution, with a relatively higher mass on the rare, long-tail tokens.\nwhether the supportive pretraining data possess a different token frequency distribution from general pretraining data. Experimented with sequences of image-label pairs, Chan et al. (2022) find that a skewed class distribution (high burstiness) and a large number of rarely occurring classes in training data promote the ICL ability of Transformer models (Vaswani et al., 2017). However, it is unknown whether the findings on the synthetic image-label data can transfer to the natural language pretraining data, a gap we address in this subsection.\nResults In Figure 4, we show the difference in average Zipf\u2019s coefficients between supportive and random pretraining data, each with a group size of 2000. The error bar shows the 95% confidence interval with 32 random seeds. We find that for all tasks, the Zipf\u2019s coefficient of the supportive pretraining data is significantly lower than that of the random pretraining data. This indicates a flatter Zipfian distribution with a relatively higher mass over the long-tail tokens. In other words, though the overall burstiness of data is lower, there is a relatively higher amount of rarely occurring, long-\ntail tokens in the supportive pretraining data for ICL. Flatter frequency distribution also indicates higher entropy over the tokens, presumably making the supportive pretraining data challenging examples to fit by the model, a concept we explore further in the next subsection.\n# 3.3 Information gain from long-range context\nIn \u00a73.1, we find that the domain relevance of the supportive pretraining data to downstream tasks is not higher than that of random pretraining data. This is comprehendible if we follow the aforementioned perspective of Olsson et al. (2022), hypothesizing that there exists a soft-copy mechanism between the in-context demonstrations and test input. The supportive pretraining data may provide meta support for the abstract soft-copy mechanism rather than task-specific knowledge. We further hypothesize that to facilitate such meta support, the incorporation of long-range context during language modeling in supportive pretraining data should be different from random pretraining data, since the demonstration examples in the ICL setup is a form of long-range context. We propose a novel information gain measure to quantify this feature of incorporating long-range context. Method Recall that the canonical definition of information gain (IG) is IG(T, a) = H(T) \u2212H(T | a), where T is a target variable, a is an attribute conditioned on by T, and H(\u00b7) computes entropy. It measures the decrease of entropy (thus the gain of information) in T if conditioned on a. We adapt the canonical IG to measure the decrease of cross entropy for each token (wi) in a pretraining dataset when conditioned on a long (l) context over a short (s) context:\nIG(l, s) = CE(wi | ctxs) \u2212CE(wi | ctxl)\nIdeally the length of long or short context should remain constant across different tokens wi, but it would be a very expensive computation due to a lack of parallelism. We approximate the computation by splitting a full sequence of pretraining tokens (e.g., 2048 tokens) to smaller blocks and calculate cross entropy with the boundary of blocks:\nWith the above definition, the average length of context for all wi is s and l, respectively. In the\nexperiments below, we keep s = 128 for the length of short context and increase the length of long context at l = {256, 512, 1024}. We report the difference in the average information gain (across wi) of incorporating long-range context for a language modeling objective, in supportive pretraining data over random pretraining data. Additionally, we want to use the defined information gain measure as a standalone feature of data, so we use a different LM to compute the cross entropy than the LM on which we perform ICL. Below we report results using OPT-1.3B, while experiments using OPT-350M shows a similar trend. Results In Figure 5, we see for all of the experimented tasks, there is a significant trend that increasing the length l for the long-range context for supportive pretraining data has a lower relative information gain compared to random pretraining data. Though seeming counterintuitive at first glance, this suggests that the supportive pretraining data are more challenging examples in incorporating the long-range context information.11 A possible explanation for this is that such challenging examples contain confounding spans that harms the information gain measure. The language model has to learn to decide which part of the longrange context is truly relevant to the prediction of next tokens. This would resemble more and thus helpful to the ICL task scenario where there are multiple demonstrations from different classes.\n# 3.4 Future work\nDespite our aforementioned findings, we mainly conduct correlational analyses throughout the work. Despite the potential confounding factors, future work can try converting the correlational findings to causal ones. For example, to actively refine or construct pretraining data to improve existing models\u2019 ICL performance, with a metric of token frequency distribution (i.e., find data with a higher mass of long-tail tokens) or context information gain (i.e., find difficult examples in incorporating long-range context). Additionally, we only investigate classification tasks in this work. However, the ORCA-ICL method can be applicable to generation tasks as well in the future, if the ICL loss is defined over a sequence probability of the generation.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/4853/48532ada-bd4a-4c7b-90a7-4c8bd37b5c3d.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/a6c0/a6c08701-8c7f-4c83-9bf8-258eb8293d99.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 5: The difference between supportive pretraining instances and random examples in information gain of incorporating long-range context for next-token prediction. We fix the average short context length (s) at 128 tokens and iterate through long context lengths (l) of {256, 512, 1024}. The shaded area shows the 95% confidence interval. The results show that the long-range context in supportive pretraining data leads to a lower information gain than random pretraining examples. Supportive pretraining data are challenging examples in incorporating their long-range context.</div>\nFigure 5: The difference between supportive pretraining instances and random examples in information gain of incorporating long-range context for next-token prediction. We fix the average short context length (s) at 128 tokens and iterate through long context lengths (l) of {256, 512, 1024}. The shaded area shows the 95% confidence interval. The results show that the long-range context in supportive pretraining data leads to a lower information gain than random pretraining examples. Supportive pretraining data are challenging examples in incorporating their long-range context.\n# 4 Related Work\nDemonstration examples Min et al. (2022) understand ICL through analyzing which aspects of the demonstration examples contribute or are irrelevant to task performance. They find replacing ground truth demonstration labels with random labels would not hurt task performance, while ICL still benefits from knowing the label space, distribution of inputs, and sequence format specified in demonstration examples.12 Zhang et al. (2022a) further show on sequence labeling tasks, the length of demonstrations and the relevance of their tokens are important for ICL.\nLearning mechanism Xie et al. (2022) explain ICL as implicit Bayesian inference, occurring when language models infer a shared latent concept from demonstration examples at inference time. They show language models exhibit such ICL behavior by constructing synthetic pretraining data with a controlled distribution of concepts. Garg et al. (2022) empirically show that Transformer models can be trained to learn unseen linear functions from in-context demonstration examples. Olsson et al. (2022) present evidence that multi-layer attention-\nbased models form an induction head and perform ICL by a pattern copying behavior from the prefixing context. More recent work like Aky\u00fcrek et al. (2022), Dai et al. (2022), and von Oswald et al. (2022) explain ICL in Transformer models as a kind of standard learning algorithms over the demonstration examples, such as gradient descent and regression.\nPretraining data Razeghi et al. (2022) find on numerical reasoning tasks, a language model\u2019s ICL performance is highly correlated with the term frequency of the input data in the pretraining corpus. Shin et al. (2022) investigate how ICL can be affected when the pretraining dataset varies. They discover that ICL heavily depends on the corpus domain source, but pretraining with a corpus related to a downstream task does not always translate to a competitive ICL performance on the task. Chan et al. (2022) experiment on a synthetic image-label pairs dataset. They show certain distributional properties of the synthetic pretraining data, such as the burstiness of classes and large numbers of rarely occurring classes, promote the emergence of ICL. Our work belongs to this line of work, but offers a first step towards understanding ICL in realistic NLP tasks through analyzing instance-level pretraining data. Additionally, concurrent to our work, Gu et al. (2023) propose a method that groups pre-\ntraining data by their instrinsic tasks, enhancing instead of interpreting existing language models\u2019 ICL ability.\n# 5 Conclusion\nIn-context learning has shown superior performance on a range of NLP tasks, yet it remained unclear from where language models acquired this ability. We approach the problem by identifying a small subset of pretraining data that particularly supports language models to do in-context learning on downstream tasks. We analyze common features of the supportive instances in contrast to general pretraining data and find that: (1) The supportive pretraining data do not have a higher domain relevance to the downstream tasks. (2) The supportive data contain a relatively larger amount of rare, longtail tokens. (3) The supportive pretraining data are more challenging instances in incorporating longrange context in language modeling. Our findings may be beneficial to future work that refine or construct pretraining data, in order to actively improve existing models\u2019 in-context learning performance.\n# Limitations\nIt is worth noting that the supportive pretraining data we investigated throughout the work is w.r.t. the current LM, such that a perturbative continued pretraining with the supportive data would improve the final LM checkpoint deployed to downstream tasks. It is possible that for some data which we did not determine as supportive, they had been supportive w.r.t. early checkpoints of the LM. With more computing resources, future work may investigate the trend of supportive patterns across multiple checkpoints of a LM throughout the pretraining process. Additionally, another significant limitation of our work is the amount of involved computing resource. The ORCA-ICL method is gradient-based that requires back-propagation. Since we iterate through a large size of pretraining data, the cost of computation is similar to training a language model with a batch size of 1 on the considered pretraining data. On our 4 nodes each consists of 8 Nvidia V100 GPUs, finding the supportive pretraining data for each source task in our experiment would take about a week. One mitigating aspect of such computation is that the gradient calculation can be done asynchronously, therefore enabling the use of idle, leftover GPUs scattered across a cluster\nof nodes. We plan to explore efficient computation of gradient similarity or move from a paradigm of extracting supportive data to generating supportive data in future work.\n# Acknowledgements\nWe thank Naman Goyal, Anjali Sridhar, Zeyu Liu, Victoria Lin, Mengzhou Xia, Weijia Shi, Jiacheng Liu, Hao Zhu, and Tianxing He for helpful discussions. We also thank the anonymous ACL reviewers and all members of TsvetShop for the valuable feedback. This research is supported in part by the Office of the Director of National Intelligence (ODNI), Intelligence Advanced Research Projects Activity (IARPA), via the HIATUS Program contract #2022-22072200004. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies, either expressed or implied, of ODNI, IARPA, or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation therein.\n# References\nTiago A Almeida, Jos\u00e9 Mar\u00eda G Hidalgo, and Akebo Yamakami. 2011. Contributions to the study of sms spam filtering: new collection and results. In Proceedings of the 11th ACM symposium on Document engineering, pages 259\u2013262.\nTom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. 2020. Language models are few-shot learners. In Advances in Neural Information Processing Systems, volume 33, pages 1877\u20131901. Curran Associates, Inc.\nStephanie CY Chan, Adam Santoro, Andrew Kyle Lampinen, Jane X Wang, Aaditya K Singh, Pierre Harvey Richemond, James McClelland, and Felix Hill. 2022. Data distributional properties drive\n2022b. Opt: Open pre-trained transformer language models. arXiv preprint arXiv:2205.01068.\nXiang Zhang, Junbo Jake Zhao, and Yann LeCun. 2015. Character-level convolutional networks for text classification. In Proc. NeurIPS.\n# A Qualitative examples\nIn Table 3, we show some qualitative examples of the supportive pretraining data to ICL and random pretraining data. Note that these are illustrative examples extracted from long pretraining instances (each instance consists of 2048 tokens), for a better understandability of our findings. A manual examination of such data is difficult, and we thus propose the quantitative analyses described in the main paper.\n# Supportive pretraining data to ICL\n# Random pretraining data\nTable 3: Qualitative examples of the supportive pretraining data to ICL in the task of SMS spam detection. We also show an example of random pretraining data for comparison. As our finding on domain relevance suggested, neither of the examples are about SMS spam, so the language model may not learn direct knowledge about the task from supportive pretraining data to ICL. Compared to the random data, the supportive data to ICL has some relatively low-frequency tokens appear multiple times (e.g., VR, Odyssey, AMOLED) and the language model may learn some meta-knowledge about ICL (e.g., copying behaviors from the context) based on them. However, such patterns are sparse, noisy, and hard to analyze through manual inspections. We therefore present the quantitative analyses in the main paper.\n",
    "paper_type": "method",
    "attri": {
        "background": "In-context learning (ICL) improves language models\u2019 performance on various NLP tasks by demonstrating examples at inference time, but the reasons behind its emergence remain unclear. Previous methods have explored implicit mechanisms of ICL, but this paper investigates the pretraining data to understand ICL better.",
        "problem": {
            "definition": "The issue at hand is to identify the specific pretraining data that enhances the ICL ability of language models, which has not been thoroughly explored.",
            "key obstacle": "Existing methods do not effectively pinpoint the pretraining data instances that support ICL, limiting the understanding of how ICL can be improved."
        },
        "idea": {
            "intuition": "The idea stems from the hypothesis that certain pretraining data instances are particularly beneficial for ICL, which can be identified through an iterative, gradient-based approach.",
            "opinion": "The proposed idea involves adapting the ORCA method to locate supportive pretraining data that enhances the ICL performance of language models.",
            "innovation": "The primary innovation lies in the identification and analysis of supportive pretraining data, revealing that such data do not necessarily correlate with higher domain relevance but rather with unique characteristics like long-tail token distribution."
        },
        "method": {
            "method name": "ORCA-ICL",
            "method abbreviation": "ORCA-ICL",
            "method definition": "A gradient-based iterative approach to identify a subset of pretraining data that enhances the in-context learning ability of language models.",
            "method description": "ORCA-ICL iteratively selects supportive pretraining data based on gradient similarities with ICL task data.",
            "method steps": [
                "Load a pretrained language model.",
                "Iteratively select top-k pretraining instances based on gradient similarity.",
                "Perform one-pass stochastic gradient descent on the selected instances.",
                "Return the identified supportive pretraining data."
            ],
            "principle": "The method is effective because it leverages the gradients from ICL tasks to identify pretraining data that most closely aligns with the learning objectives of the model."
        },
        "experiments": {
            "evaluation setting": "The experiments involved a pretrained autoregressive OPT-6.7B model evaluated on six classification tasks, comparing performance with supportive versus random pretraining data.",
            "evaluation method": "The evaluation was conducted through perturbative continued pretraining, measuring the performance of models trained on both supportive and random pretraining data."
        },
        "conclusion": "The experiments confirmed that supportive pretraining data significantly enhance ICL performance in several tasks, revealing that such data contain unique characteristics that do not correlate with higher domain relevance but with challenging examples and long-tail tokens.",
        "discussion": {
            "advantage": "The proposed approach demonstrates clear advantages in improving ICL performance without adversely affecting zero-shot task performance.",
            "limitation": "The analysis is limited to specific language models and may not generalize across different architectures or tasks.",
            "future work": "Future research should focus on refining pretraining data construction and exploring the application of ORCA-ICL to generation tasks."
        },
        "other info": {
            "acknowledgements": "The authors express gratitude to various colleagues for discussions and feedback, and acknowledge support from the ODNI and IARPA.",
            "limitations": {
                "computational resources": "The method requires significant computational resources, similar to training a language model, which may limit its applicability."
            }
        }
    },
    "mount_outline": [
        {
            "section number": "1.1",
            "key information": "In-context learning (ICL) improves language models\u2019 performance on various NLP tasks by demonstrating examples at inference time."
        },
        {
            "section number": "1.2",
            "key information": "The reasons behind the emergence of ICL remain unclear, highlighting its relevance within the broader field of NLP."
        },
        {
            "section number": "3.1",
            "key information": "The proposed method, ORCA-ICL, identifies supportive pretraining data that enhances the ICL ability of language models."
        },
        {
            "section number": "3.2",
            "key information": "The analysis reveals that supportive pretraining data do not necessarily correlate with higher domain relevance but with unique characteristics like long-tail token distribution."
        },
        {
            "section number": "4.1",
            "key information": "The ORCA-ICL method employs a gradient-based iterative approach to identify a subset of pretraining data that enhances ICL performance."
        },
        {
            "section number": "6.2",
            "key information": "The method requires significant computational resources, similar to training a language model, which may limit its applicability."
        },
        {
            "section number": "6.4",
            "key information": "Future research should focus on refining pretraining data construction and exploring the application of ORCA-ICL to generation tasks."
        }
    ],
    "similarity_score": 0.7373196274431751,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-07-2330_in-co/papers/Understanding In-Context Learning via Supportive Pretraining Data.json"
}