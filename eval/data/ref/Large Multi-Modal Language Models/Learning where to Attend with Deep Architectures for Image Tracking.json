{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:1109.3737",
    "title": "Learning where to Attend with Deep Architectures for Image Tracking",
    "abstract": "We discuss an attentional model for simultaneous object tracking and recognition that is driven by gaze data. Motivated by theories of perception, the model consists of two interacting pathways: identity and control, intended to mirror the what and where pathways in neuroscience models. The identity pathway models object appearance and performs classification using deep (factored)-Restricted Boltzmann Machines. At each point in time the observations consist of foveated images, with decaying resolution toward the periphery of the gaze. The control pathway models the location, orientation, scale and speed of the attended object. The posterior distribution of these states is estimated with particle filtering. Deeper in the control pathway, we encounter an attentional mechanism that learns to select gazes so as to minimize tracking uncertainty. Unlike in our previous work, we introduce gaze selection strategies which operate in the presence",
    "bib_name": "denil2011learningattenddeeparchitectures",
    "md_text": "# Learning where to Attend with Deep Architectures for Image Tracking\n# Misha Denil1, Loris Bazzani2, Hugo Larochelle3 and Nando de Freitas 1University of British Columbia. 2University of Verona. 3University of Sherbrooke.\n# Keywords: Restricted Boltzmann machines, Bayesian optimization, bandits, attenion, deep learning, particle filtering, saliency\n# Abstract\nWe discuss an attentional model for simultaneous object tracking and recognition that is driven by gaze data. Motivated by theories of perception, the model consists of two interacting pathways: identity and control, intended to mirror the what and where pathways in neuroscience models. The identity pathway models object appearance and performs classification using deep (factored)-Restricted Boltzmann Machines. At each point in time the observations consist of foveated images, with decaying resolution toward the periphery of the gaze. The control pathway models the location, orientation, scale and speed of the attended object. The posterior distribution of these states is estimated with particle filtering. Deeper in the control pathway, we encounter an attentional mechanism that learns to select gazes so as to minimize tracking uncertainty. Unlike in our previous work, we introduce gaze selection strategies which operate in the presence\nof partial information and on a continuous action space. We show that a straightforward extension of the existing approach to the partial information setting results in poor performance, and we propose an alternative method based on modeling the reward surface as a Gaussian Process. This approach gives good performance in the presence of partial information and allows us to expand the action space from a small, discrete set of fixation points to a continuous domain.\n# 1 Introduction\nHumans track and recognize objects effortlessly and efficiently, exploiting attentional mechanisms (Rensink, 2000; Colombo, 2001) to cope with the vast stream of data. We use the human visual system as inspiration to build a system for simultaneous object tracking and recognition from gaze data. An attentional strategy is learned online to choose fixation points which lead to low uncertainty in the location of the target object. Our tracking system is composed of two interacting pathways. This separation of responsibility is a common feature in models from the computational neuroscience literature as it is believed to reflect a separation of information processing into ventral and dorsal pathways in the human brain (Olshausen et al., 1993a). The identity pathway (ventral) is responsible for comparing observations of the scene to an object template using an appearance model, and on a higher level, for classifying the target object. The identity pathway consists of a two hidden layer deep network. The top layer corresponds to a multi-fixation Restricted Boltzmann Machine (RBM) (Larochelle & Hinton, 2010), as shown in Figure 1. It accumulates information from the first hidden layers at consecutive time steps. For the first layers, we use (factored)-RBMs (Hinton & Salakhutdinov, 2006; Ranzato & Hinton, 2010; Welling et al., 2005; Swersky et al., 2011), but autoencoders (Vincent et al., 2008), sparse coding (Olshausen & Field, 1996; Kavukcuoglu et al., 2009), two-layer ICA (K\u00a8oster & Hyv\u00a8arinen, 2007) and convolutional architectures (Lee et al., 2009) could also be adopted. The control pathway (dorsal) is responsible for aligning the object template with the full scene so the remaining modules can operate independently of the object\u2019s position and scale. This pathway is separated into a localization module and a fixation module\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5b3e/5b3e43a5-3244-4980-a717-fa7cbfa4e8b0.png\" style=\"width: 50%;\"></div>\nFigure 1: From a sequence of gazes (vt, vt+1, . . .), the model infers the hidden features h for each gaze (that is, the activation intensity of each receptive field), the hidden features for the fusion of the sequence of gazes and the object class c. Only one time step of classification is kept in the figure for clarity. The location, size, speed and orientation of the gaze patch are encoded in the state xt. The actions at follow a learned policy \u03c0t that depends on the past rewards {r1, . . . , rt\u22121}. This particular reward is a function of the belief state bt = p(xt|a1:t, h1:t), also known as the filtering distribution. Unlike typical commonly used partially observed Markov decision models (POMDPs), the reward is a function of the beliefs. In this sense, the problem is closer to one of sequential experimental design. With more layers in the ventral v\u2212h\u2212h[2] \u2212c pathway, other rewards and policies could be designed to implement higher-level attentional strategies.\nwhich work cooperatively to accomplish this goal. The localization module is implemented with a particle filter (Doucet et al., 2001) which estimates the location, velocity and scale of the target object. We make no attempt to implement such states with neural architectures, but it seems clear that they could be encoded with grid cells (McNaughton et al., 2006) and retinotopic maps as in V1 and the superior colliculus (Rosa, 2002; Girard & Berthoz, 2005). The fixation module learns an attentional strategy to select fixation points relative to the object template. These fixation points are the centres of partial template observations, and are compared with observations of the corresponding locations in the scene using the appearance model (see Figure 2). Reward is assigned to each fixation based on the uncertainty of the target location at each time step. The fixation module uses the reward signal to adapt its gaze selection policy to achieve good localization. Our previous work (Bazzani et al., 2010) used Hedge (Auer et al., 1998a; Freund & Schapire, 1997) to learn this policy. In this extended paper we show that a straightforward adaptation of our previous approach to the partial information setting results in poor performance, and we propose an alternative method based on modelling the reward surface as a Gaussian Process. This approach gives good performance in the presence of partial information and allows us to expand the action space from a small, discrete set of fixation points to a continuous domain. The proposed system can be motivated from different perspectives. First, starting with Isard & Blake (1996), many particle filters have been proposed for image tracking, but these typically use simple observation models such as B-splines (Isard & Blake, 1996) and colour templates (Okuma et al., 2004). RBMs are more expressive models of shape, and hence, we conjecture that they will play a useful role where simple appearance models fail. Second, from a deep learning computational perspective, this work allows us to tackle large images and video, which is typically not possible due to the number of parameters required to represent large images in deep models. The use of fixations synchronized with information about the state (e.g. location and scale) of such fixations eliminates the need to look at the entire image or video. Third, the system is invariant to image transformations encoded in the state, such as location, scale and orientation. Fourth, from a dynamic sensor network perspective, this paper presents a very simple, but efficient and novel way of deciding how to gather measurements dynamically. Lastly, in the context of psychology, the proposed model realizes\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/83b1/83b11e20-24c4-4dcf-84fd-47c1301fd7bb.png\" style=\"width: 50%;\"></div>\nFigure 2: Left: A typical video frame with the estimated target region highlighted. To cope with the large image size our system considers only the target region at each time step. Centre left: A close-up of the template extracted from the first frame. The template is compared to the target region by selecting a fixation point for comparison as shown. Centre right: A visualization of a single fixation. In addition to covering only a very small portion of the original frame, the image is foveated with high resolution near the centre and low resolution on the periphery to further reduce the dimensionality. Right: The most active filters of the first layer (factored)-RBM when observing the displayed location. The control pathway compares these features to the features active at the corresponding scene location in order to update the belief state. to some extent the functional architecture for dynamic scene representation of Rensink (2000). The rate at which different attentional mechanisms develop in newborns (including alertness, saccades and smooth pursuit, attention to object features and highlevel task driven attention) guided the design of the proposed approach and was a great source of inspiration (Colombo, 2001). Our attentional model can be seen as building a saliency map (Koch & Ullman, 1985) over the target template. Previous work on saliency modelling has focused on identifying salient points in an image using a bottom up process which looks for outliers under some local feature model (which may include a task dependent prior, global scene features, or various other heuristics). These features can be computed from static images (Torralba et al., 2006), or from local regions of spacetime (Gaborski et al., 2004) for video. Additionally, a wide variety of different feature types have been applied to this problem, including engineered features (Gao et al., 2007) as well as features that are learned from data (Zhang et al., 2009). Core to these methods is the idea that saliency is determined by some type of novelty measure. Our approach is different, in that rather than identifying locally or globally novel features, our process identifies features which are useful for the task at hand. In our system the saliency signal for a location comes from a top down process which evaluates how well the features at that location enable\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/893d/893d1a3c-8754-4a8b-852f-607c601108c1.png\" style=\"width: 50%;\"></div>\nthe system to localize the target object. The work of Gao et al. (2007) considers a similar approach to saliency by defining saliency to be the mutual information between the features at a location and the class label of an object being sought; however, in order to make their model tractable the authors are forced to use specifically engineered features. Our system is able to cope with arbitrary feature types, and although we consider only on localization in this paper, our model is sufficiently general to be applied to identifying salient features for other goals. Recently, a dynamic RBM state-space model was proposed in Taylor et al. (2010). Both the implementation and intention behind that proposal are different from the approach discussed here. To the best of our knowledge, our approach is the first successful attempt to combine dynamic state estimation from gazes with online policy learning for gaze adaptation, using deep network network models of appearance. Many other dualpathway architectures have been proposed in computational neuroscience, including Olshausen et al. (1993b) and Postma et al. (1997), but we believe ours has the advantage that it is very simple, modular (with each module easily replaceable), suitable for large datasets and easy to extend.\n# 2 Identity Pathway\nThe identity pathway in our model mirrors the ventral pathway in neuroscience models. It is responsible for modelling the appearance of the target object and also, at a higher level, for classification.\n# 2.1 Appearance Model\nWe use (factored)-RBMs to model the appearance of objects and perform object classification using the gazes chosen by the control module (see Figure 3). These undirected probabilistic graphical models are governed by a Boltzmann distribution over the gaze data vt and the hidden features ht \u2208{0, 1}nh. We assume that the receptive fields w, also known as RBM weights or filters, have been trained beforehand. We also assume that readers are familiar with these models and, if otherwise, refer them to Ranzato & Hinton (2010) and Swersky et al. (2010).\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/9ceb/9ceb3feb-ae36-458d-9ef1-77fd49485bc7.png\" style=\"width: 50%;\"></div>\nFigure 3: An RBM senses a small foveated image derived from the video. The level of activation of each filter is recorded in the ht units. The RBM weights (filters) W are visualized in the upper left. We currently pre-train these weights.\n# 2.2 Classification Model\nThe identity pathway also performs object recognition, classifying a sequence of gaze instances selected with the gaze policy. We implement a multi-fixation RBM very similar to the one proposed in Larochelle & Hinton (2010), where the binary variables zt (see Figure 4) are introduced to encode the relative gaze location at within the multifixation RBM (a \u201c1 in K\u201d or \u201cone hot\u201d encoding of the gaze location was used for zt). The multi-fixation RBM uses the relative gaze location information in order to aggregate the first hidden layer representations ht at \u2206consecutive time steps into a single, higher level representation h[2] t . More specifically, the energy function of the multi-fixation RBM is:\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/dfca/dfcade3f-c829-45ac-8eb6-9cc4401d46c7.png\" style=\"width: 50%;\"></div>\nFigure 4: Gaze accumulation and classification in the identity pathway. A multi-fixation RBM models the conditional distribution (given the gaze positions at) of \u2206consecutive hidden features ht, extracted by the first layer RBM on the foveated images. In this illustration, \u2206= 2. The multi-fixation RBM encodes the gaze position at in a \u201cone hot\u201d representation noted zt. The activation probabilities of the second layer hidden units h[2] t are used by a classifier to predict the object\u2019s class.\n# through the Boltzmann distribution:\np(ht\u2212\u2206+1:t, h[2] t |zt\u2212\u2206+1:t) = exp \ufffd \u2212E(ht\u2212\u2206+1:t, zt\u2212\u2206+1:t, h[2] t ) \ufffd /Z(\nwhere the normalization constant Z(zt\u2212\u2206+1:t) ensures that Equation 1 sums to 1. To sample from this distribution, one can use Gibbs sampling by alternating between sampling the top-most hidden layer h[2] t given all individual processed gazes ht\u2212\u2206+1:t and vice versa. To train the multi-fixation RBM, we collect a training set consisting in sequences of \u2206pairs (ht, zt) by randomly selecting \u2206gaze positions at which to fixate and computing the associated ht. These sets are extracted from a collection of images in which the object to detect has been centred. Unsupervised learning using contrastive divergence can then be performed on this training set. See Larochelle & Hinton (2010) for more details. The main difference between this multi-fixation RBM and the one described in\n(1)\nLarochelle & Hinton (2010) is that h[2] t does not explicitly model the class label ct. Instead, a multinomial logistic regression classifier is trained separately, to predict ct from the aggregated representation extracted from h[2] t . More specifically, we use the vector of activation probabilities of all hidden units h[2] t,j in h[2] t , conditioned on ht\u2212\u2206+1:t and zt\u2212\u2206+1:t, as the aggregated representation: p(h[2] t,j = 1|ht\u2212\u2206+1:t, zt\u2212\u2206+1:t) = sigm \ufffd dj + \u2206 \ufffd i=1 F \ufffd f=1 Pf,j(Wf,:ht\u2212\u2206+i)(Vf,:zt\u2212\u2206+i) \ufffd We experimented with a single fixation module, but found the multi-fixation module to increase classification accuracy. To improve the estimate the class variable ct over time, we accumulate the classification decisions at each time step. Note that the process of pursuit (tracking) is essential to classification. As the target is tracked, the algorithm fixates at locations near the target\u2019s estimated location. The size and orientation of these fixations also depends on the corresponding state estimates. Note that we don\u2019t fixate exactly at the target location estimate as this would provide only one distinct fixation over several time steps if the tracking policy has converged to a specific gaze. It should also be pointed out that instead of using random fixations, one could again use the control strategy proposed in this paper to decide where to look with respect to the track estimate so as to reduce classification uncertainty. We leave the implementation of this extra attentional mechanism for future work.\nLarochelle & Hinton (2010) is that h[2] t does not explicitly model the class label ct. Instead, a multinomial logistic regression classifier is trained separately, to predict ct from the aggregated representation extracted from h[2] t . More specifically, we use the vector of activation probabilities of all hidden units h[2] t,j in h[2] t , conditioned on ht\u2212\u2206+1:t and zt\u2212\u2206+1:t, as the aggregated representation:\n\ufffd \ufffd We experimented with a single fixation module, but found the multi-fixation module to increase classification accuracy. To improve the estimate the class variable ct over time, we accumulate the classification decisions at each time step. Note that the process of pursuit (tracking) is essential to classification. As the target is tracked, the algorithm fixates at locations near the target\u2019s estimated location. The size and orientation of these fixations also depends on the corresponding state estimates. Note that we don\u2019t fixate exactly at the target location estimate as this would provide only one distinct fixation over several time steps if the tracking policy has converged to a specific gaze. It should also be pointed out that instead of using random fixations, one could again use the control strategy proposed in this paper to decide where to look with respect to the track estimate so as to reduce classification uncertainty. We leave the implementation of this extra attentional mechanism for future work.\n# 3 Control Pathway\nThe control pathway mirrors the responsibility of the dorsal pathway in human visual processing. It tracks the state of the target (position, speed, etc) and normalizes the input so that other modules need not account for these variations. At a higher level it is responsible for learning an attentional strategy which maximizes the amount of information learned with each fixation. The structure of the control pathway is shown in Figure 5.\n# 3.1 State-space model\nThe standard approach to image tracking is based on the formulation of Markovian, nonlinear, non-Gaussian state-space models, which are solved with approximate Bayesian\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/40c2/40c23859-a79f-4236-9c3d-71836bca362b.png\" style=\"width: 50%;\"></div>\nFigure 5: Influence diagram for the control pathway. The true state of the tacked object xt, generates some set of features ht, in the identity pathway. These features depend on the action chosen at time t and are used to update the belief state bt. Statistics of the belief state are collected to compute the reward rt, which is used to update the policy for the next time step. filtering techniques. In this setting, the unobserved signal (object\u2019s position, velocity, scale, orientation or discrete set of operations) is denoted {xt \u2208X; t \u2208N}. This signal has initial distribution p (x0) and transition equation p (xt| xt\u22121, at\u22121) . Here at \u2208A denotes an action at time t, defined on a compact set A. For descrete policies A is finitie whereas for continuous policies A is a region in R2. The observations {ht \u2208H; t \u2208N\u2217}, are assumed to be conditionally independent given the process state {xt; t \u2208N}. Note that from the state space model perspective the observations are the hidden units of the second layer of the of the appearance model in the identity pathway. In summary, the state-space model is described by the following distributions:\nOur aim is to estimate recursively in time the posterior distribution1 p (x0:t| h1:t, a1:t) and its associated features, including the marginal distribution bt \u225cp (xt| h1:t, a1:t) \u2014 known as the filtering distribution or belief state. This distribution satisfies the following recurrence: \ufffd\nand its associated features, including the marginal distribution bt \u225cp (xt| h1:t, a1:t) \u2014 known as the filtering distribution or belief state. This distribution satisfies the following recurrence: bt \u221dp(ht|xt, at) \ufffd p(xt|xt\u22121, at\u22121)p(dxt\u22121|h1:t\u22121, a1:t\u22121). Except for standard distributions (e.g. Gaussian or discrete), this recurrence is intractable. After learning the observation model we will use it for tracking. The observation model is often defined in terms of the distance of the observations from a template \u03c4, p (ht|xt, at) \u221dexp (\u2212d(h(xt, at), \u03c4)) , where d(\u00b7, \u00b7) denotes a distance metric and \u03c4 an object template (for example, a color histogram or spline). In this model, the observation h(xt, at) is a function of the current state hypothesis and the selected action. The problem with this approach is eliciting a good template. Often color histograms or splines are insufficient. For this reason, we will construct the templates with (factored)-RBMs as follows. First, optical flow is used to detect new object candidates entering the visual scene. Second, we assign a template to the detected object candidate, as shown in Figure 2. The same figure also shows a typical foveated observation (higher resolution in the center and lower in the periphery of the gaze) and the receptive fields for this observation learned beforehand with an RBM. The control algorithm will be used to learn which parts of the template are most informative, either by picking from amoung a predefined set of fixation points, or by using a continuous policy. Finally, we define the likelihood of each observation directly in terms of the distance of the hidden units of the RBM h(xt, at, vt), to the hidden units of the corresponding template region h(x1, at = k, v1). That is, p (ht|xt, at = k) \u221dexp (\u2212d(h(xt, at = k, vt), h(x1, at = k, v1))) . The above template is static, but conceivably one could adapt it over time.\np (ht|xt, at) \u221dexp (\u2212d(h(xt, at), \u03c4)) ,\nwhere d(\u00b7, \u00b7) denotes a distance metric and \u03c4 an object template (for example, a color histogram or spline). In this model, the observation h(xt, at) is a function of the current state hypothesis and the selected action. The problem with this approach is eliciting a good template. Often color histograms or splines are insufficient. For this reason, we will construct the templates with (factored)-RBMs as follows. First, optical flow is used to detect new object candidates entering the visual scene. Second, we assign a template to the detected object candidate, as shown in Figure 2. The same figure also shows a typical foveated observation (higher resolution in the center and lower in the periphery of the gaze) and the receptive fields for this observation learned beforehand with an RBM. The control algorithm will be used to learn which parts of the template are most informative, either by picking from amoung a predefined set of fixation points, or by using a continuous policy. Finally, we define the likelihood of each observation directly in terms of the distance of the hidden units of the RBM h(xt, at, vt), to the hidden units of the corresponding template region h(x1, at = k, v1). That is, p (ht|xt, at = k) \u221dexp (\u2212d(h(xt, at = k, vt), h(x1, at = k, v1))) . The above template is static, but conceivably one could adapt it over time.\n# 3.2 Reward Function\nA gaze control strategy specifies a policy \u03c0(\u00b7) for selecting fixation points. The purpose of this strategy is to select fixation points which maximize an instantaneous reward 1We use the notation x0:t \u225c{x0, ..., xt} to represent the past history of a variable over time.\nA gaze control strategy specifies a policy \u03c0(\u00b7) for selecting fixation points. The purpose of this strategy is to select fixation points which maximize an instantaneous reward\nfunction rt(\u00b7). The reward can be any desired behaviour for the system, such as minimizing posterior uncertainty or achieving a more abstract goal. We focus on gathering observations so as to minimize the uncertainty in the estimate of the filtering distribution: rt(at|bt) \u225cu[\ufffdp(xt|h1:t, a1:t)]. More specifically, as discussed later, this reward will be a function of the variance of the importance weights of the particle filter approximation \ufffdp(xt|h1:t, a1:t) of the belief state. It is also useful to consider the cumulative reward\nwhich is the sum of the instantaneous rewards which have been received up to time T. The gaze control strategies we consider are all \u201cno-regret\u201d which means that the average gap between our cumulative reward and the cumulative reward from always picking the optimal action goes to zero as T \u2192\u221e. In our current implementation, each action is a different gaze location and the objective is to choose where to look so as to minimize the uncertainty about the belief state.\n# 4 Gaze control\nWe compare several different strategies for learning the gaze selection policy. In an earlier version of this work (Bazzani et al., 2010) we learned the gaze selection policy with a portfolio allocation algorithm called Hedge (Freund & Schapire, 1997; Auer et al., 1998b). Hedge requires knowledge of the rewards for all actions at each time step, which is not realistic when gazes must be preformed sequentially, since the target object will move between fixations. We compare this strategy, as well as two baseline methods, to two very different alternatives. EXP3 is an extension of Hedge to partial information games (Auer et al., 2001). Unlike Hedge, EXP3 requires knowledge of the reward only for the action selected at each time step. EXP3 is more appropriate to the setting at hand, and is also more computationally efficient than Hedge; however, this comes at a cost of substantially lower theoretical performance. Both Hedge and EXP3 learn gaze selection policies which choose among a discrete\nset of predetermined fixation points. We can instead learn a continuous policy by estimating the reward surface using a Gaussian Process (Rasmussen & Williams, 2006). By assuming that the reward surface is smooth, we can draw on the tools of Bayesian optimization (Brochu et al., 2010) to search for the optimal gaze location using as few exploratory steps as possible. The following sections describe each of these approaches in more detail.\n# 4.1 Baseline\nWe consider two baseline strategies, which we call random and circular. The random strategy samples gaze selections uniformly from a small discrete set of possibilities The circular strategy also uses a small discrete set of gaze locations and cycles through them in a fixed order.\n# 4.2 Hedge\nTo use Hedge (Freund & Schapire, 1997; Auer et al., 1998b) for gaze selection we must first discretize the action space by selecting a fixed finite number of possible fixation points. Hedge maintains an importance weight G(i) for each possible fixation point and uses them to form a stochastic policy at each time step. An action is selected according to this policy and the reward for each possible action is observed. These rewards are then used to update the importance weights and the process repeats. Pseudo code for Hedge is shown in Algorithm 1.\nAlgorithm 1 Hedge\nInput: \u03b3 > 0\nInput: G0(i) \u21900\nforeach i \u2208A\nfor t = 1, 2, . . . do\nfor i \u2208A do\npt(i) \u2190\nexp(\u03b3Gt\u22121(i))\n\ufffd\nj\u2208A exp(\u03b3Gt\u22121(j))\nat \u223c(pt(1), . . . , pt(|A|))\n// sample an action from the distribution (pt(k))\nfor i \u2208A do\nrt(i) \u2190rt(i|bt)\nGt(i) \u2190Gt\u22121(i) + rt(i)\nEXP3 (Auer et al., 2001) is a generalization of Hedge to the partial information setting. In order to maintain estimates for the importance weights, Hedge requires reward information for each possible action at each time step. EXP3 works by wrapping Hedge in an outer loop which simulates a fully observed reward vector at each time step. EXP3 selects actions based on a mixture of the policy found by Hedge and a uniform distribution. EXP3 is able to function in the presence of partial information, but this comes at the cost of substantially worse theoretical guarantees. Pseudo code for EXP3 is shown in Algorithm 2.\nAlgorithm 2 EXP3\nInput: \u03b3 \u2208(0, 1]\nInitialize Hedge(\u03b3)\nfor t \u22081, 2, . . . do\nReceive pt from Hedge\n\u02c6pt \u2190(1 \u2212\u03b3)pt +\n\u03b3\n|A|\nat \u223c(\u02c6pt(1), . . . , \u02c6pt(|A|))\nSimulate reward vector for Hedge where \u02c6rt(j) \u2190\n\uf8f1\n\uf8f4\n\uf8f2\n\uf8f4\n\uf8f3\nrt(j)/pt(j)\nifj = at\n0\notherwise\n# 4.4 Bayesian Optimization\nBoth Hedge and EXP3 discretize the space of possible fixation points and learn a distribution over this finite set. In contrast, Bayesian optimization is able to treat the space of possible fixation points as fully continuous by placing a smoothness prior on how reward is expected to vary with location. Intuitively, if we know the reward at one location, then we expect other, nearby locations to produce similar rewards. Gaussian Process priors encode this type of belief (Rasmussen & Williams, 2006), and have been used extensively for optimization of cost functions when it is important to minimize the total number of function evaluations (Brochu et al., 2010). We model the latent reward function rt(at|bt) \u225cr(at|bt, \u03b8t) as a zero mean Gaus-\nr(at|bt, \u03b8t) \u223cGP(0, k(at, a\u2032 t|bt, \u03b8t)) ,\nwhere bt is the belief state (see Section 3.1), and \u03b8t are the model hyperparameters. The kernel function k(\u00b7, \u00b7), gives the covariance between the reward at any two gaze locations. To ease the notation, the explicit dependence of r(\u00b7) and k(\u00b7, \u00b7) on bt and \u03b8t will be dropped. We assume that the true reward function r(\u00b7) is not directly measurable, and what we observe are measurements of this function corrupted by Gaussian noise. That is, at each time step the instantaneous reward rt, is given by\nwhere \u03b4n \u223cN(0, 1) and \u03c3n is a hyperparameter indicating the amount of observation noise, which we absorb into \u03b8t. Given a set of observations we can compute the posterior predictive distribution for r(\u00b7):\nr(\u00b7):\nwhere\n\ufffd \ufffd It remains to specify the form of the kernel function, k(\u00b7, \u00b7). We experimented with several possibilities, but found that the specific form of the kernel function is not crit ical to the performance of this method. For the experiments in this paper we used the squared exponential kernel, \ufffd \ufffd\n(2)\nwhere \u03c32 m and the {\u21131, . . . , \u2113D} are hyperparameters. Equation 2 is a Gaussian Process estimate of the reward surface and can be used to select a fixation point for the next time step. This estimate gives both a predicted reward value and an associated uncertainty for each possible fixation point. This is the strength of Gaussian Processes for this type of optimization problem, since the predictions can be used to balance exploration (choosing a fixation point where the reward is highly uncertain) and exploitation (choosing a point we are confident will have high reward). There are many selection methods available in the literature which offer different tradeoffs between these two criteria. In this paper we use GP-UCB (Srinivas et al., 2010) which selects\n\ufffd where \u03b2t is a parameter. The setting \u03b2t = 2 log(t3\u03c02/3\u03b4) (with \u03b4 = 0.001) is used throughout this paper. Equation 3 must still be optimized to find at+1, which can be performed using standard global optimization tools. We use DIRECT (Jones et al., 1993) due to the existence of a readily available implementation. The Gaussian Process regression is controlled by several hyperparameters (see Figure 6): \u03c32 m controls the overall magnitude of the covariance, and \u03c32 n controls the amount of observation noise. The remaining parameters {\u21131, . . . , \u2113D} are length scale parameters which control the range of the covariance effects in each dimension. Treatment of the hyperparameters requires special consideration in this setting. The pure Bayesian approach is to put a prior on each parameter and integrate them out of the predictive distribution. However, since the integrals involved are not tractable analytically, this requires computationally expensive numerical approximations. Speed is an issue here since GP-UCB requires that we optimize a function of the posterior process at each time step so, for instance, computing Monte Carlo averages for each evaluation of Equation 2 is prohibitively slow. An alternative approach is to choose parameter values via maximum likelihood. This can be done quickly, and allows us to make speedy predictions; however, in this case we suffer from problems of data scarcity, particularly early in the tracking process when few observations have been made. The length scale parameters are particularly\n(3)\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1981/1981012d-025a-42ab-ab23-013894d1a78f.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 6: Graphical model for Bayesian optimization. The \u2113i are length scales in each dimen sion, \u03c32 m is the magnitude parameter and \u03c32 n is the noise level. In our model \u03c32 m and \u03c32 n follow a uniform prior and the \u2113i follow independent Student-t priors.</div>\nprone to receiving very poor estimates when there is little data available. We have found that using informative priors for the length scale parameters and making MAP, rather than ML, estimates at each time step provides a solution to the problems described above. MAP estimates can be made quickly using gradient optimization methods (Rasmussen & Williams, 2006), and informative priors provide resistance to the problems encountered with ML. The experiments in Section 6 place uniform priors on the magnitude and noise parameters and place independent Student-t priors on each length scale parameter. The experiments also use an initial data collection phase of 10 time steps before any adjustment of the parameters is made.\n# 5 Algorithm\nSince the belief state cannot be computed analytically, we will adopt particle filtering to approximate it. The full algorithm is shown in Algorithm 3. We refer readers to Doucet et al. (2001) for a more in depth treatment of these sequential Monte Carlo methods. Assume that at time t \u22121 we have N \u226b1 particles (samples) {x(i) 0:t\u22121}N i=1 distributed according to p (dx0:t\u22121|h1:t\u22121, a1:t\u22121). We can\nAlgorithm 3 Particle filtering algorithm with gaze control. The algorithm shown here is for partial information strategies. For full information strategies the importance sampling step is done independently for each possible action and the gaze control step is able to use reward information from each possible action to create the new strategy \u03c0t+1(\u00b7).\n\ufffd \ufffd 3. Gaze control\n// Select an action according to the policy // Evaluate the importance weights\n\ufffd // Normalize the importance weights\n// Receive reward for the chosen action\n\ufffdp (dx0:t\u22121|h1:t\u22121, a1:t\u22121) \u225c1 N N \ufffd i=1 \u03b4x(i) 0:t\u22121 (dx0:t\u22121) .\n\ufffd \ufffd Particle filters combine sequential importance sampling with a selection scheme designed to obtain N new particles {x(i) 0:t}N i=1 distributed approximately according to p (dx0:t|h1:t\n# 5.1 Importance sampling step\nThe joint distributions p (dx0:t\u22121|h1:t\u22121, a1:t\u22121) and p (dx0:t|h1:t, a1:t) are of different dimension. We first modify and extend the current paths x(i) 0:t\u22121 to obtain new paths \ufffdx(i) 0:t using a proposal kernel qt (d\ufffdx0:t|x0:t\u22121, h1:t, a1:t) . As our goal is to design a sequential procedure, we set qt (d\ufffdx0:t| x0:t\u22121, h1:t, a1:t) = \u03b4x0:t\u22121 (d\ufffdx0:t\u22121) qt (d\ufffdxt| \ufffdx0:t\u22121, h1:t, a1:t) , that is \ufffdx0:t = (x0:t\u22121, \ufffdxt). The aim of this kernel is to obtain new paths whose distribution qt (d\ufffdx0:t|h1:t, a1:t) = p (d\ufffdx0:t\u22121|h1:t\u22121, a1:t\u22121) qt (d\ufffdxt| \ufffdx0:t\u22121, h1:t, a1:t) , is as \u201cclose\u201d as possible to p (d\ufffdx0:t|h1:t, a1:t). Since we cannot choose qt (d\ufffdx0:t|h1:t, a1:t)  p (d\ufffdx0:t|h1:t, a1:t) because this is the quantity we are trying to approximate in the first place, it is necessary to weight the new particles so as to obtain consistent estimates. We perform this \u201ccorrection\u201d with importance sampling, using the weights \ufffdwt = \ufffdwt\u22121 p (ht|\ufffdxt, at) p (d\ufffdxt|\ufffdx0:t\u22121, at\u22121) qt (d\ufffdxt| \ufffdx0:t\u22121, h1:t, a1:t) . The choice of the transition prior as proposal distribution is by far the most common one. In this case, the importance weights reduce to the expression for the likelihood. However, it is possible to construct better proposal distributions, which make use of more recent observations, using object detectors (Okuma et al., 2004), saliency maps (Itti et al., 1998), optical flow, and approximate filtering methods such as the unscented particle filter. One could also easily incorporate strategies to manage data association and other tracking related issues. After normalizing the weights, w(i) t = \ufffdw(i) t \ufffdN j=1 \ufffdw(j) t , we obtain the following estimate of the filtering distribution: N \ufffd\n\ufffd\ufffd\ufffd \ufffd is as \u201cclose\u201d as possible to p (d\ufffdx0:t|h1:t, a1:t). Since we cannot choose qt (d\ufffdx0:t|h1:t, a1:t)  p (d\ufffdx0:t|h1:t, a1:t) because this is the quantity we are trying to approximate in the first place, it is necessary to weight the new particles so as to obtain consistent estimates. We perform this \u201ccorrection\u201d with importance sampling, using the weights\n\ufffd \ufffd \ufffd\ufffd\ufffd \ufffd| \ufffd The choice of the transition prior as proposal distribution is by far the most common one. In this case, the importance weights reduce to the expression for the likelihood. However, it is possible to construct better proposal distributions, which make use of more recent observations, using object detectors (Okuma et al., 2004), saliency maps (Itti et al., 1998), optical flow, and approximate filtering methods such as the unscented particle filter. One could also easily incorporate strategies to manage data association and other tracking related issues. After normalizing the weights, w(i) t = \ufffdw(i) t \ufffdN  \ufffdw(j)  , we obtain the following estimate of the filtering distribution:\nFinally a selection step is used to obtain an \u201cunweighted\u201d approximate empirical distribution \u02c6p(dx0:t|h1:t, a1:t) of the weighted measure \u02dcp(dx0:t|h1:t, a1:t). The basic idea is to discard samples with small weights and multiply those with large weights. The use of a selection step is key to making the SMC procedure effective; see Doucet et al. (2001) for details on how to implement this black box routine.\n# 6 Experiments\n# 6.1 Full Information Policies\nIn this section, three experiments are carried out to evaluate quantitatively and qualitatively the proposed approach. The first experiment provides comparisons to other control policies on a synthetic dataset. The second experiment, on a similar synthetic dataset, demonstrates how the approach can handle large variations in scale, occlusion and multiple targets. The final experiment is a demonstration of tracking and classification performance on several real videos. For the synthetic digit videos, we trained the first-layer RBMs on the foveated images, while for the real videos we trained factoredRBMs on foveated natural image patches (Ranzato & Hinton, 2010). The first experiment uses 10 video sequences (one for each digit) built from the MNIST dataset. Each sequence contains a moving digit and static digits in the background (to create distractions). The objective is to track and recognize the moving digit; see Figure 7. The gaze template had K = 9 gaze positions, chosen so that gaze G5 was at the center. The location of the template was initialized with optical flow. We compare the Hedge learning algorithm against algorithms with deterministic and random policies. The deterministic policy chooses each gaze in sequence and in a particular pre-specified order, whereas the random policy selects a gaze uniformly at random. We adopted the Bhattacharyya distance in the specification of the observation model. A multi-fixation RBM was trained to map the first layer hidden units of three time consecutive time steps into a second hidden layer, and trained a logistic regressor to further map to the 10 digit classes. We used the transition prior as proposal for the particle filter. Tables 6.1 and 6.1 report the comparison results. Tracking accuracy was measured\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nAVG.\nLEARNED\nPOLICY\n1.2\n(1.2)\n3.0\n(2.0)\n2.9\n(1.0)\n2.2\n(0.7)\n1.0\n(1.9)\n1.8\n(1.9)\n3.8\n(1.0)\n3.8\n(1.5)\n1.5\n(1.7)\n3.8\n(2.8)\n2.5\n(1.6)\nDETERMINISTIC\nPOLICY\n18.2\n(29.6)\n536.9\n(395.6)\n104.4\n(69.7)\n2.9\n(2.2)\n201.3\n(113.4)\n4.6\n(4.0)\n5.6\n(3.1)\n64.4\n(45.3)\n142.0\n(198.8)\n144.6\n(157.7)\n122.5\n(101.9)\nRANDOM\nPOLICY\n41.5\n(54.0)\n410.7\n(329.4)\n3.2\n(2.0)\n3.3\n(2.4)\n42.8\n(60.9)\n6.5\n(9.6)\n5.7\n(3.2)\n80.7\n(48.6)\n38.9\n(50.6)\n225.2\n(241.6)\n85.9\n(80.2)\nTable 1: Tracking error (in pixels) on several video sequences using different policies for gaze selection.\nTable 1: Tracking error (in pixels) on several video sequences using different policies for gaze selection.\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nAVG.\nLEARNED\nPOLICY\n95.62%\n100.00%\n99.66%\n99.33%\n99.66%\n100.00%\n100.00%\n98.32%\n97.98%\n89.56%\n98.01%\nDETERMINISTIC\nPOLICY\n99.33%\n100.00%\n98.99%\n94.95%\n5.39%\n98.32%\n0.00%\n29.63%\n52.19%\n0.00%\n57.88%\nRANDOM\nPOLICY\n98.32%\n100.00%\n96.30%\n99.66%\n29.97%\n96.30%\n89.56%\n22.90%\n12.79%\n13.80%\n65.96%\nTable 2: Classification accuracy on several video sequences using different policies for gaze selection. in terms of the mean and standard deviation (in brackets) over time of the distance between the target ground truth and the estimate; measured in pixels. The analysis highlights that the error of the learned policy is always below the error of the other policies. In most of the experiments, the tracker fails when an occlusion occurs for the deterministic and the random policies, while the learned policy is successful. This is very clear in the videos at: http://www.youtube.com/user/anonymousTrack The loss of track for the simple policies is mirrored by the high variance results in Table 6.1 (experiments 0, 1, 4, and so on). The average mean and standard deviations (last column of Table 6.1) make it clear that the proposed strategy for learning a gaze policy can be of enormous benefit. The improvements in tracking performance are mirrored by improvements in classification performance (Table 6.1). Figure 7 provides further anecdotal evidence for the policy learning algorithm. The top sequence shows the target and the particle filter estimate of its location over time. The middle sequence illustrates how the policy changes over time. In particular, it demonstrates that hedge can effectively learn where to look in order to improve tracking performance (we chose this simple example as in this case it is obvious that the center of the eight (G5) is the most reliable gaze action). The classification results over time are shown in the third row.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/abc0/abc094af-b416-46cc-bea4-f8382e66dc96.png\" style=\"width: 50%;\"></div>\nFigure 7: Tracking and classification accuracy results with the learned policy. First row: position of the target and estimate over time. Second row: policy distribution over the 9 gazes; hedge clearly converges to the most reasonable policy. Third row: cumulative class distribution for recognition. The second experiment addresses a similar video sequence, but tracking multiple targets. The image scale of each target changes significantly over time, so the algorithm has to be invariant with respect to these scale transformations. In this case, we used a mixture proposal distribution consisting of motion detectors and the transition prior. We also tested a saliency proposal but found it to be less effective than the motion detectors for this dataset. Figure 8 (top) shows some of the video frames and tracks. The videos allow one to better appreciate the performance of the multi-target tracking algorithm in the presence of occlusions. Tracking and classification results for the real videos are shown in Figure 8 and the accompanying videos.\n# 6.2 Partial Information Policies\nIn this section, two experiments are carried out to evaluate the performance of the different gaze selection policies. In the first experiment we compare the performance of each gaze selection method on a data set of several videos of digits from the MNIST data set moving on a black background. The target in each video encounters one or more partial occlusions which the tracking algorithm must handle gracefully. Additionally, each video sequence has\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/ff87/ff87b1ac-1ef4-4223-8721-93ba9326babb.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 8: Top: Multi-target tracking with occlusions and changes in scale on a synthetic video.</div>\n<div style=\"text-align: center;\">Middle and bottom: Tracking in real video sequences.</div>\n<div style=\"text-align: center;\">Middle and bottom: Tracking in real video sequences.</div>\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nAvg\nBayesopt\n5.36\n(2.32)\n7.92\n(2.52)\n2.62\n(3.89)\n4.05\n(1.67)\n1.70\n(5.10)\n8.31\n(3.35)\n4.94\n(2.28)\n12.09\n(3.53)\n1.52\n(2.76)\n9.06\n(1.66)\n5.76\n(2.91)\nHedge\n2.97\n(1.56)\n3.20\n(2.19)\n2.97\n(1.99)\n2.92\n(2.00)\n3.14\n(1.80)\n2.96\n(2.08)\n2.86\n(1.96)\n2.98\n(1.76)\n2.81\n(1.64)\n3.15\n(3.73)\n3.00\n(2.07)\nEXP3\n3.18\n(5.05)\n3.03\n(10.08)\n65.46\n(3212.16)\n91.81\n(3671.66)\n2.62\n(2.35)\n7.20\n(303.29)\n67.54\n(2346.82)\n2.97\n(3.99)\n3.06\n(2.71)\n77.01\n(3135.17)\n32.39\n(1269.33)\nTable 3: Tracking error on several video sequences using different methods for gaze selection. The table shows mean tracking error as well as the error variance (in brackets) over a single test sequence. been corrupted with 30% noise. We measure the error between the estimated track and the ground truth for each gaze selection method, and demonstrate that Bayesian optimization preforms comparably to Hedge, but that EXP3 is not able to reach a satisfactory level of performance. We also demonstrate qualitatively that the Bayesian optimization approach learns good gaze selection policies on this data set. Our second experiment provides evidence that the Bayesian optimization method can generalize to real world data. Table 3 reports the results from our first experiment. The table shows the mean tracking error, measured by averaging distance between the estimated and ground truth\ntrack over the entire video sequence. Here we see that the Bayesian optimization approach compares favorably to Hedge in terms of tracking performance, and that EXP3 preforms substantially worse than the other two methods. Although Hedge preforms marginally better than Bayesian optimization, it is important to remember that Bayesian optimization solves a significantly more difficult problem. Hedge relies on discretizing the action space, and must have access to the rewards for all possible actions at each time step. In contrast, Bayesian optimization considers a fully continuous action space, and receives reward information only for the chosen actions.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/ef6b/ef6ba330-05d1-46df-8af2-92409c753b81.png\" style=\"width: 50%;\"></div>\nFigure 9: Top: Digit templates with the estimated reward surfaces superimposed. Markers indicate the best fixation point found in each of ten runs. Bottom: A visualization of the image found by averaging the best fixation points found across ten runs. Figure 9 shows the reward surfaces learned for each digit by Bayesian optimization, as well as a visualization of the overall best fixation points using data aggregated across ten runs. The optimal fixation points found by the algorithm are tightly clustered, and the resulting observations are very distinguishable. In our second experiment we use the Youtube celebrity dataset from Kim et al. (2008). This data set consists of several videos of celebrities taken from Youtube and is challenging for tracking algorithms as the videos exhibit a wide variety of illuminations, expressions and face orientations. We run our tracking model using Bayesian optimization to learn a gaze selection policy on this data set, and present some results in Figure 10. Although we report only qualitative results from this experiment, it provides anecdotal evidence that Bayesian optimization is able to form a good gaze selection policy on real world data.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/605c/605c6831-f787-4acd-8ab8-30be6aa6edb4.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1a02/1a023438-85b0-4b1f-b1eb-1800d193161e.png\" style=\"width: 50%;\"></div>\nFigure 10: Results on a real data set. Far left: An example frame from the video sequence. Center left: The tracking template with the optimal fixation window highlighted. Center right: The reward surface produced by Bayesian optimization. The white markers show the centers of each fixation point in a single tracking run. Right: Input to the observation model when fixating on the best point. (Best viewed from a distance).\n# 7 Conclusions and Future Work\nWe have proposed a decision-theoretic probabilistic graphical model for joint classification, tracking and planning. The experiments demonstrate the significant potential of this approach. We examined several different strategies for gaze control in both the full and partial information settings. We saw that a straightforward generalization of the full information policy to partial information gave poor performance and we proposed an alternative method which is able not only to perform well in the presence of partial information but also allows us to expand the set of possible fixation points to be a continuous domain. There are many routes for further exploration. In this work we pre-trained the (factored)-RBMs. However, existing particle filtering and stochastic optimization algorithms could be used to train the RBMs online. Following the same methodology, we should also be able to adapt and improve the target templates and proposal distributions over time. This is essential to extend the results to long video sequences where the object undergoes significant transformations (e.g. as is done in the predator tracking system (Kalal et al., 2010)). Deployment to more complex video sequences will require more careful and thoughtful design of the proposal distributions, transition distributions, control algorithms, template models, data-association and motion analysis modules. Fortunately, many of the solutions to these problems have already been engineered in the computer vision, tracking and online learning communities. Admittedly, much work remains to be done.\nSaliency maps are ubiquitous in visual attention studies. Here, we simply used standard saliency tools and motion flow in the construction of the proposal distributions for particle filtering. There might be better ways to exploit the saliency maps, as neurophysiological experiments seem to suggest (Gottlieb et al., 1998). One of the most interesting avenues for future work is the construction of more abstract attentional strategies. In this work, we focused on attending to regions of the visual field, but clearly one could attend to subsets of receptive fields or objects in the deep appearance model. The current model has no ability to recover from a tracking failure. It may be possible to use information from the identity pathway (i.e. the classifier output) to detect and recover from tracking failure. A closer examination of the exploration/exploitation tradeoff in the tracking setting is in order. For instance, the methods we considered assume that future rewards are independent of past actions. This assumption is clearly not true in our setting, since choosing a long sequence of very poor fixation points can lead to tracking failure. We can potentially solve this problem by incorporating the current tracking confidence into the gaze selection strategy. This would allow the exploration/exploitation trade off to be explicitly modulated by the needs of the tracker, e.g. after choosing a poor fixation point the selection policy could be adjusted temporarily to place extra emphasis on exploiting good fixation points until confidence in the target location has been recovered. Contextual bandits provide a framework for integrating and reasoning about this type of side-information in a principled manner.\n# Acknowledgments\nWe thank Ben Marlin, Kenji Okuma, Marc\u2019Aurelio Ranzato and Kevin Swersky. This work was supported by CIFAR\u2019s NCAP program and NSERC.\n# References\nAuer, P., Cesa-Bianchi, N., Freund, Y., and Schapire, R.E. Gambling in a rigged casino: The adversarial multi-armed bandit problem. In focs, pp. 322. Published by the IEEE\nAuer, P., Cesa-Bianchi, N., Freund, Y., and Schapire, R.E. The nonstochastic multiarmed bandit problem. SIAM Journal on Computing, 32(1):48\u201377, 2001. ISSN 0097-5397. Auer, Peter, Cesa-Bianchi, Nicol`o, Freund, Yoav, and Schapire, Robert E. Gambling in a rigged casino: the adversarial multi-armed bandit problem. Technical Report NC2-TR-1998-025, 1998b. Bazzani, L., de Freitas, N., and Ting, J.A. Learning attentional mechanisms for simultaneous object tracking and recognition with deep networks. NIPS 2010 Deep Learning and Unsupervised Feature Learning Workshop, 2010. Brochu, E., Cora, V.M., and de Freitas, N. A tutorial on Bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning. Technical report, University of British Columbia, 2010. Colombo, John. The development of visual attention in infancy. Annual Review of Psychology, pp. 337\u2013367, 2001. Doucet, A, de Freitas, N, and Gordon, N. Introduction to sequential Monte Carlo methods. In Doucet, A, de Freitas, N, and Gordon, N J (eds.), Sequential Monte Carlo Methods in Practice. Springer-Verlag, 2001. Freund, Yoav and Schapire, Robert E. A decision-theoretic generalization of on-line learning and an application to boosting. Journal of Computer and System Sciences, 55:119\u2013139, 1997. Gaborski, R., Vaingankar, V., Chaoji, V., Teredesai, A., and Tentler, A. Detection of inconsistent regions in video streams. In Proc. SPIE Human Vision and Electronic Imaging. Citeseer, 2004. Gao, D., Mahadevan, V., and Vasconcelos, N. The discriminant center-surround hypothesis for bottom-up saliency. Advances in neural information processing systems, 20, 2007.\nLarochelle, Hugo and Hinton, Geoffrey. Learning to combine foveal glimpses with a third-order Boltzmann machine. In Neural Information Processing Systems, 2010. Lee, H., Grosse, R., Ranganath, R., and Ng, A.Y. Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations. In International Conference on Machine Learning, 2009. McNaughton, Bruce L., Battaglia, Francesco P., Jensen, Ole, Moser, Edvard I., and Moser, May-Britt. Path integration and the neural basis of the \u2019cognitive map\u2019. Nature Reviews Neuroscience, 7(8):663\u2013678, 2006. Okuma, Kenji, Taleghani, Ali, de Freitas, Nando, and Lowe, David G. A boosted particle filter: Multitarget detection and tracking. In ECCV, 2004. Olshausen, B. A. and Field, D. J. Emergence of simple-cell receptive field properties by learning a sparse code for natural images. Nature, 381:607\u2013609, 1996. Olshausen, B.A., Anderson, C.H., and Van Essen, D.C. A neurobiological model of visual attention and invariant pattern recognition based on dynamic routing of information. The Journal of Neuroscience, 13(11):4700, 1993a. ISSN 0270-6474. Olshausen, Bruno A., Anderson, Charles H., and Essen, David C. Van. A neurobiological model of visual attention and invariant pattern recognition based on dynamic routing of information. Journal of Neuroscience, 13:4700\u20134719, 1993b. Postma, Eric O., van den Herik, H. Jaap, and Hudson, Patrick T. W. SCAN: A scalable model of attentional selection. Neural Networks, 10(6):993 \u2013 1015, 1997. Ranzato, M.A. and Hinton, G.E. Modeling pixel means and covariances using factorized third-order Boltzmann machines. In Computer Vision and Pattern Recognition, pp. 2551\u20132558, 2010. Rasmussen, C.E. and Williams, C.K.I. Gaussian processes for machine learning. Adaptive computation and machine learning. MIT Press, 2006. ISBN 9780262182539. URL http://books.google.ca/books?id=vWtwQgAACAAJ. Rensink, Ronald A. The dynamic representation of scenes. Visual Cognition, pp. 17\u201342, 2000.\n",
    "paper_type": "method",
    "attri": {
        "background": "This paper addresses the issue of simultaneous object tracking and recognition driven by gaze data, highlighting the limitations of existing methods and the necessity for a new approach that effectively incorporates attentional mechanisms inspired by human perception.",
        "problem": {
            "definition": "The problem is the challenge of accurately tracking and recognizing objects in dynamic environments using gaze data, particularly when faced with partial information and the need for real-time processing.",
            "key obstacle": "The main difficulty lies in the inability of existing methods to effectively manage gaze selection and tracking uncertainty in the presence of partial information, leading to poor performance."
        },
        "idea": {
            "intuition": "The idea is inspired by human visual attention mechanisms, which allow for efficient tracking and recognition by selecting fixation points that minimize uncertainty.",
            "opinion": "The proposed method combines deep learning with attentional strategies to select gaze points that enhance tracking accuracy and object recognition.",
            "innovation": "The key innovation is the introduction of a gaze selection strategy that operates in a continuous action space and utilizes a Gaussian Process to model the reward surface, significantly improving performance over existing discrete methods."
        },
        "method": {
            "method name": "Deep Attentional Model for Tracking",
            "method abbreviation": "DAT",
            "method definition": "A probabilistic graphical model that integrates deep learning with gaze control strategies to optimize object tracking and recognition in real-time.",
            "method description": "The method employs two interacting pathways (identity and control) to process gaze data for tracking and recognition tasks.",
            "method steps": [
                "Initialize the gaze selection policy.",
                "Process foveated images through the identity pathway using RBMs.",
                "Estimate the target object's state using a particle filter in the control pathway.",
                "Select fixation points based on the learned policy to minimize tracking uncertainty.",
                "Update the model based on the observed rewards from the selected actions."
            ],
            "principle": "This method is effective due to its ability to dynamically adapt gaze selection based on real-time feedback from the tracking process, leveraging the strengths of deep learning and probabilistic modeling."
        },
        "experiments": {
            "evaluation setting": "Experiments were conducted on synthetic datasets and real video sequences, comparing the proposed method against baseline strategies like Hedge and EXP3 in terms of tracking accuracy and classification performance.",
            "evaluation method": "Performance was assessed by measuring tracking error in pixels and classification accuracy across various video sequences with different levels of occlusion and target dynamics."
        },
        "conclusion": "The proposed method demonstrated significant improvements in tracking accuracy and classification performance compared to existing approaches, showcasing its potential for practical applications in real-time object tracking.",
        "discussion": {
            "advantage": "The primary advantages include the ability to operate in a continuous action space and the effective management of partial information, leading to enhanced tracking and recognition capabilities.",
            "limitation": "The method may struggle with rapid changes in object dynamics or extreme occlusions, which could hinder tracking performance.",
            "future work": "Future research should focus on enhancing the adaptability of the model to long video sequences, improving proposal distributions, and exploring more abstract attentional strategies."
        },
        "other info": {
            "acknowledgments": "The authors thank Ben Marlin, Kenji Okuma, Marc\u2019Aurelio Ranzato, and Kevin Swersky for their contributions. This work was supported by CIFAR\u2019s NCAP program and NSERC."
        }
    },
    "mount_outline": [
        {
            "section number": "4.1",
            "key information": "The proposed method combines deep learning with attentional strategies to select gaze points that enhance tracking accuracy and object recognition."
        },
        {
            "section number": "4.2",
            "key information": "The main difficulty lies in the inability of existing methods to effectively manage gaze selection and tracking uncertainty in the presence of partial information, leading to poor performance."
        },
        {
            "section number": "5.1",
            "key information": "The method employs two interacting pathways (identity and control) to process gaze data for tracking and recognition tasks."
        },
        {
            "section number": "5.4",
            "key information": "Future research should focus on enhancing the adaptability of the model to long video sequences, improving proposal distributions, and exploring more abstract attentional strategies."
        },
        {
            "section number": "6.5",
            "key information": "The proposed method demonstrated significant improvements in tracking accuracy and classification performance compared to existing approaches, showcasing its potential for practical applications in real-time object tracking."
        }
    ],
    "similarity_score": 0.5829442326989477,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-11-1421_trans/papers/Learning where to Attend with Deep Architectures for Image Tracking.json"
}