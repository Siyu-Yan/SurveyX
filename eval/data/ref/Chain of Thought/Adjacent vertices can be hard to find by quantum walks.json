{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:1605.05598",
    "title": "Adjacent vertices can be hard to find by quantum walks",
    "abstract": "Quantum walks have been useful for designing quantum algorithms that outperform their classical versions for a variety of search problems. Most of the papers, however, consider a search space containing a single marked element only. We show that if the search space contains more than one marked element, their placement may drastically affect the performance of the search. More specifically, we study search by quantum walks on general graphs and show a wide class of configurations of marked vertices, for which search by quantum walk needs \u2126(N) steps, that is, it has no speed-up over the classical exhaustive search. The demonstrated configurations occur for certain placements of two or more adjacent marked vertices. The analysis is done for the two-dimensional grid and hypercube, and then is generalized for any graph.",
    "bib_name": "nahimovs2017adjacentverticeshardquantum",
    "md_text": "# Adjacent vertices can be hard to find by quantum walks\u2217\nNikolajs Nahimovs and Raqueline A. M. Santos\n# Nikolajs Nahimovs and Raqueline A. M. Santos\nFaculty of Computing, University of Latvia Raina bulv. 19, Riga, LV-1586, Latvia nikolajs.nahimovs@lu.lv, rsantos@lu.lv\n# Abstract\nQuantum walks have been useful for designing quantum algorithms that outperform their classical versions for a variety of search problems. Most of the papers, however, consider a search space containing a single marked element only. We show that if the search space contains more than one marked element, their placement may drastically affect the performance of the search. More specifically, we study search by quantum walks on general graphs and show a wide class of configurations of marked vertices, for which search by quantum walk needs \u2126(N) steps, that is, it has no speed-up over the classical exhaustive search. The demonstrated configurations occur for certain placements of two or more adjacent marked vertices. The analysis is done for the two-dimensional grid and hypercube, and then is generalized for any graph.\n# 1 Introduction\nQuantum walks are quantum counterparts of classical random walks [9]. Similarly to classical random walks, there are two types of quantum walks: discrete-time quantum walks, first introduced by Aharonov et al. [1], and continuous-time quantum walks, introduced by Farhi et al. [5]. For the discrete-time version, the step of the quantum walk is usually given by coin and shift operators, which are applied repeatedly. The coin operator acts on the internal state of the walker and rearranges the amplitudes of going to adjacent vertices. The shift operator moves the walker between the adjacent vertices.\n\u2217This work was supported by the European Union Seventh Framework Programme (FP7/20072013) under the QALGO (Grant Agreement No. 600700) project and the RAQUEL (Grant Agreement No. 323970) project, the Latvian State Research Programme NeXIT project No. 1, and the ERC Advanced Grant MQC.\nQuantum walks have been useful for designing algorithms for a variety of search problems [3, 6, 2]. To solve a search problem using quantum walks, we introduce the notion of marked elements (vertices), corresponding to elements of the search space that we want to find. We perform a quantum walk on the search space with one transition rule at the unmarked vertices, and another transition rule at the marked vertices. If this process is set up properly, it leads to a quantum state in which marked vertices have higher probability than the unmarked ones. This method of search using quantum walks was first introduced in [11], which describes a quantum search in the hypercube, and has been used many times since then. Not many papers in the literature consider search by quantum walks with multiple marked vertices. Wong [13] analyzed the spatial search problem solved by continuous-time quantum walk on the simplex of complete graphs and showed that the location of marked vertices can dramatically influence the required jumping rate of the quantum walk. Wong and Ambainis [14] analysed the discrete-time quantum walk on the simplex of complete graphs and showed that if one of the complete graphs is fully marked then there is no speed-up over classical exhaustive search. Nahimovs and Rivosh [8] studied the dependence of the running time of the AKR algorithm [3] on the number and the placement of marked locations. They found some \u201cexceptional configurations\u201d of marked vertices, for which the probability of finding any of the marked vertices does not grow over time. Another previously known exceptional configuration for the two-dimensional grid is the \u201cdiagonal construction\u201d by Ambainis and Rivosh [4]. In this paper, we extend the work of Nahimovs and Rivosh [7]. We study search by quantum walks on general graphs with multiple marked vertices and show a wide class of configurations of marked vertices, for which the probability of finding any of the marked vertices does not grow over time. These configurations occur for certain placements of two and more adjacent marked vertices. We prove that for such configurations the state of the algorithm is close to a stationary state. We start by reviewing the simple example of the two-dimensional grid from [7] by showing that any pair of adjacent marked vertices forms an exceptional configuration. The same construction is valid for the hypercube. We extend the proof to general graphs by showing that any pair of adjacent marked vertices having the same degree d forms an exceptional configuration, for which the probability of finding a marked vertex is limited by const \u00b7 d2/N. Then, we prove that any k-clique of marked vertices forms an exceptional configuration. Additionally, we formulate general conditions for a state to be stationary given a configuration of marked vertices. Our results greatly extend the class of known exceptional configurations.\n# 2 Two-dimensional grid\n# 2.1 Quantum walk on the two-dimensional \n2.1 Quantum walk on the two-dimensional grid\nConsider a two-dimensional grid of size \u221a N \u00d7 \u221a N with periodic (torus-like) boundary conditions. Let us denote n = \u221a N. The locations of the grid are labeled by the coordinates (x, y) for x, y \u2208{0, . . . , n \u22121}. The coordinates define a set of state vectors, |x, y\u27e9, which span the Hilbert space, HP, associated to the position. Additionally, we define a 4-dimensional Hilbert space with the set of states {|c\u27e9: c \u2208{\u2190, \u2192, \u2191, \u2193}}, HC, associated with the direction. We refer to it as the direction or the coin subspace. The quantum walk has associated Hilbert space HP \u2297HC with basis states |x, y, c\u27e9for x, y \u2208{0, . . . , n \u22121} and c \u2208{\u2191, \u2193, \u2190, \u2192}. The evolution of a state of the walk is driven by the unitary operator U = S \u00b7 (I \u2297C), where S is the flip-flop shift operator\nand C is the coin operator, given by the Grover\u2019s diffusion transformation\n\uf8ed \uf8f8 The spatial search algorithm uses the unitary operator U \u2032 = S\u00b7(I \u2297C)\u00b7(Q\u2297I), where Q is the query transformation which flips the sign of marked vertices, that is, Q|x, y\u27e9= \u2212|x, y\u27e9, if (x, y) is marked and Q|x, y\u27e9= |x, y\u27e9, otherwise. The initial state of the algorithm is\nNote that |\u03c8(0)\u27e9is a 1-eigenvector of U but not of U \u2032. If there are marked vertices the state of the algorithm starts to deviate from |\u03c8(0)\u27e9. In case of one marked vertex, after O(\u221aN log N) steps the inner product \u27e8\u03c8(t)|\u03c8(0)\u27e9becomes close to 0. If we measure the state at this moment, we will find the marked vertex with O(1/ log N) probability [3]. This gives the total running time of O( \u221a N log N) steps with amplitude amplification.\n(1) (2) (3) (4)\n(5)\n(6)\nBy analyzing the quantum search algorithm for a group of marked vertices of size \u221a k \u00d7 \u221a k, Ref. [7] identified that the algorithm does not work as expected when k is even, meaning that the overlap of the initial state with the state at time t, \u27e8\u03c8(0)|\u03c8(t)\u27e9, stays close to 1. Moreover, the same effect holds for any block of size 2k \u00d7 l or k \u00d7 2l, with l and k being positive integers. The reason for such behavior is that blocks of marked vertices form stationary states, as we are going to see below.\n# 2.2 Stationary states for the two-dimensional grid\nConsider a two-dimensional grid with two marked vertices (i, j) and (i, j + 1) Let |\u03c6a stat\u27e9be a state having amplitudes of all basis states equal to a except for |i, j, \u2192\u27e9and |i + 1, j, \u2190\u27e9, which have amplitudes equal to \u22123a (see Fig. 1), that is,\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b889/b889a05b-3228-4432-9719-5c6716d3c49c.png\" style=\"width: 50%;\"></div>\nFigure 1: The amplitudes of the state |\u03c6a stat\u27e9. The vertices (i, j) and (i + 1, j) are marked.\nThen, this state is not changed by a step of the algorithm.\nLemma 1. Consider a grid of size \u221a N \u00d7 \u221a N with two adjacent marked vertices (i, j) and (i + 1, j). Then the state |\u03c6a stat\u27e9, given by Eq. (7), is not changed by the step of the algorithm, that is, U \u2032|\u03c6a stat\u27e9= |\u03c6a stat\u27e9.\nProof. Consider the effect of a step of the algorithm on |\u03c6a stat\u27e9. The query transformation changes the signs of all the amplitudes of the marked vertices. The coin transformation performs an inversion about the average: for unmarked vertices, it does nothing, as all amplitudes are equal to a; for marked vertices, the average is 0, so applying the coin results in sign flip. Thus, (I \u2297C)(Q \u2297I) does nothing for the amplitudes of the non-marked vertices and twice flips the sign of the amplitudes of the marked vertices. Therefore, we have (I \u2297C)(Q \u2297\n(7)\nI)|\u03c6a stat\u27e9= |\u03c6a stat\u27e9. The shift transformation swaps the amplitudes of near-by vertices. For |\u03c6a stat\u27e9, it swaps a with a and \u22123a with \u22123a. Thus, we have S(I \u2297C)(Q \u2297I)|\u03c6a stat\u27e9= |\u03c6a stat\u27e9.\nfor a = 1/ \u221a 4N. Therefore, the only part of the initial state which is changed by the step of the algorithm is\nLet us establish an upper bound on the probability of finding a marked vertex, \ufffd \ufffd\nwhere M is the set of marked vertices. \u221a\nLemma 2. Consider a grid of size \u221a N \u00d7 \u221a N with two adjacent marked vertices (i, j) and (i, j + 1). Then for any number of steps, the probability of finding a marked vertex pM is O \ufffd1 N \ufffd . Proof. Follows from the proof of Theorem 2 by substituting d = 4 and m = 2N.\nLemma 2. Consider a grid of size \u221a N \u00d7 \u221a N with two adjacent marked vertices (i, j) and (i, j + 1). Then for any number of steps, the probability of finding a marked vertex pM is O \ufffd1 N \ufffd .\n\ufffd \ufffd Proof. Follows from the proof of Theorem 2 by substituting d = 4 and m = 2N.\n\ufffd \ufffd Proof. Follows from the proof of Theorem 2 by substituting d = 4 and m = 2N.\nFig. 2 shows the absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, and the probability of finding a marked vertex, pM, during the first 100 steps of the walk for a grid of size 50 \u00d7 50 and two different sets of marked vertices. In the first case (solid line), we have two adjacent marked vertices, M = {(0, 0), (0, 1)} and in the second case (dashed line), we have M = {(0, 0), (0, 2)}. Clearly, one can see the effect of the stationary state on the evolution. If the two marked vertices are adjacent, the overlap stays closes to 1 and the probability of finding a marked vertex stays close to the probability in the initial state. If the two marked vertices are not adjacent, the quantum walk behaves as expected (as in the single marked vertex case). Note that if we have a block of marked vertices of size k \u00d7 m we can construct a stationary state as long as we can tile the block by the blocks of size 1 \u00d7 2 and 2 \u00d7 1. For example, consider M = {(0, 0), (0, 1), (2, 0), (3, 0)} for n \u22653. Then the stationary state is given by\nMore details on alternative constructions of stationary states for blocks of marked vertices on the two-dimensional grid can be found in [7].\n(8)\n(9)\n(10)\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/40b3/40b3f4d9-8166-4e2e-9a8a-33bb26de23a1.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 2: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for the first 100 steps of the quantum walk on a grid o size 50 \u00d7 50. (Solid line) We have two adjacent marked vertices, (0, 0) and (0, 1) (Dashed line) We have two non-adjacent marked vertices, (0, 0) and (0, 2).</div>\nFigure 2: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for the first 100 steps of the quantum walk on a grid o size 50 \u00d7 50. (Solid line) We have two adjacent marked vertices, (0, 0) and (0, 1) (Dashed line) We have two non-adjacent marked vertices, (0, 0) and (0, 2).\n# 3 Hypercube\n# 3.1 Quantum walk on the hypercube\nThe n-dimensional hypercube is a graph with N = 2n vertices where each vertex has degree n. The discrete-time quantum walk has associated Hilbert space H2n \u2297Hn. The evolution operator is given by U = S \u00b7 (I \u2297C), where the shift operator, S, acts in the following way\nwith \u20d7v being the binary representation of v. This operator moves the walker from state |\u20d7v\u27e9|c\u27e9to |\u20d7v \u2295\u20d7ec\u27e9|c\u27e9, where \u20d7ec is the binary vector with 1 in the c-th position. Note, that vertices are connected to each other if they differ in only one bit position. The coin transformation is the Grover coin C = 2|s\u27e9\u27e8s| \u2212I, where |s\u27e9= 1 \u221an \ufffdn\u22121 i=0 |i\u27e9. Searching for marked vertices in the hypercube is done by using the unitary operator U \u2032 = S \u00b7 (I \u2297C) \u00b7 (Q \u2297I), where Q is the query transformation, which flips the sign of marked vertices. The initial state of the algorithm is given by\nIn case of SKW algorithm with one marked vertex [11], if we measure the state of the quantum walk after O( \u221a N) time steps, we will find the marked vertex with probability 1/2 \u2212O(1/n). Hence, we expect to repeat the algorithm a constant number of times, which gives the total running time of O( \u221a N) steps.\n(12)\n(13)\n# 3.2 Stationary states for the hypercube\nConsider a hypercube with two adjacent marked vertices i and j. Without loss of generality, suppose \u20d7i and \u20d7j differ in the first bit. Let |\u03c6a stat\u27e9be a state having amplitudes of all basis states equal to a except for |\u20d7i, 0\u27e9and |\u20d7j, 0\u27e9which have amplitudes equal to \u2212(n \u22121)a (see Fig. 3), that is,\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/b35d/b35deb19-b7e5-4422-b5db-ddb9c352bd3b.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 3: Amplitudes of the stationary state in an n-dimensional hypercube with two adjacent marked vertices i and j.</div>\nFigure 3: Amplitudes of the stationary state in an n-dimensional hypercube with two adjacent marked vertices i and j.\nLemma 3. Consider an n-dimensional hypercube with two adjacent marked vertices i and j. Then |\u03c6a stat\u27e9, given by Eq. (14), is not changed by a step of the algorithm, that is, U \u2032|\u03c6a stat\u27e9= |\u03c6a stat\u27e9. Proof. Similar to proof of Lemma 1. The initial state of the algorithm, given by Eq. (13), can be written as\nLemma 3. Consider an n-dimensional hypercube with two adjacent marked vertices i and j. Then |\u03c6a stat\u27e9, given by Eq. (14), is not changed by a step of the algorithm, that is, U \u2032|\u03c6a stat\u27e9= |\u03c6a stat\u27e9.\nThe initial state of the algorithm, given by Eq. (13), can be written as\n\ufffd \ufffd for a = 1/ \u221a nN. Therefore, the only part of the initial state, which is changed by a step of the algorithm is\n\ufffd \ufffd From this fact, we can establish an upper bound for the probability of finding a marked vertex.\nFrom this fact, we can establish an upper bound for the probability of finding a marked vertex. Lemma 4. Consider an n-dimensional hypercube with two adjacent marked vertices i and j. Then for any number of steps, the probability of finding a marked vertex pM is O \ufffd n2 N \ufffd . Proof. Follows from the proof of Theorem 2 by substituting d = n and m = (nN)/2.\n(14)\n\n(15)\n(16)\nFig. 4 shows the probability of finding a marked vertex and the absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for a hypercube of dimension n = 10 for the first 100 steps of the algorithm. We consider two different sets of marked vertices. In the first case (solid line), we have two adjacent marked vertices M = {0, 1}. In this case, the overlap stays close to 1 and the probability stays close to the probability in the initial state, because the quantum walk has a stationary state. In the\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/fe79/fe79f8dc-d3fd-4209-8d24-d7cf8645de64.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 4: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for 100 steps of the quantum walk on hupercube with N = 210 vertices. (Solid line) We have two adjacent marked vertices, 0 and 1. (Dashed line) We have two non-adjacent marked vertices, 0 and 3.</div>\nsecond case (dashed line), we have two non-adjacent marked vertices M = {0, 3}. As one can see, the behavior in the second case is very different from the behavior in the first case. Note that any set of marked vertices which can be divided into unique blocks of two adjacent marked vertices will result in a stationary state.\n# 4 General graphs\n# 4.1 Quantum walks on general graphs\nConsider a graph G = (V, E) with a set of vertices V and a set of edges E. Let n = |V | and m = |E|. The discrete-time quantum walk on G has associated Hilbert space H2m with the set of basis states {|v, c\u27e9: v \u2208V, 0 \u2264c < dv}, where dv is the degree of vertex v. Note, that the state |v, c\u27e9cannot be written as |v\u27e9\u2297|c\u27e9unless G is regular. The evolution operator is given by\nU = SC.\n(17)\nThe coin transformation C is the direct sum of coin transformations for individual vertices, i.e. C = Cd1 \ufffd\u00b7 \u00b7 \u00b7 \ufffdCdn with Cdi being the Grover diffusion transformation of dimension di. The shift operator S acts in the following way,\nwhere v and v\u2032 are adjacent, c and c\u2032 represent the directions that points v to v\u2032 and v\u2032 to v, respectively. Searching for marked vertices is done by using the unitary operator\nwhere Q is the query transformation, which flips the signs of the amplitudes at the marked vertices, that is,\nwith M being the set of marked vertices. The initial state of the algorithm is the equal superposition over all vertex-direction pairs:\nIt can be easily verified that the initial state stays unchanged by the evolution operator U, regardless of the number of steps. The running time of the algorithm depends on both the structure of the graph as well as the placement of marked vertices. Next, we describe a class of exceptional configurations of marked vertices, for which the probability of finding a marked vertex is limited.\n# 4.2 Stationary states for general graphs\nIt is not difficult to see that the construction of stationary states for the twodimensional grid and the hypercube can be generalized to any graph. First, we consider only two adjacent marked vertices. Then, we show we can also construct a stationary state for three adjacent marked vertices. Later, we describe general conditions for a state to be stationary.\n# 4.2.1 Two adjacent marked vertices\nConsider a graph G = (V, E) with two adjacent marked vertices i and j with the same degree, that is, di = dj = d. Let |\u03c6a stat\u27e9be a state having all amplitudes\n(18)\n(19)\n(20)\n(21)\nequal to a except of the amplitude of vertex i pointing to vertex j and amplitude of vertex j pointing to vertex i, which are equal to \u2212(d \u22121)a. Fig. 5 shows the configuration of the amplitudes in the marked vertices. Then, this state is not changed by a step of the algorithm.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/cc30/cc301948-cf9b-4c70-9239-917859fdab42.png\" style=\"width: 50%;\"></div>\nFigure 5: The amplitudes for the stationary state with two adjacent marke vertices i and j.\nTheorem 1. Let G = (V, E) be a graph with two adjacent marked vertices i and j with di = dj = d, and let\n\ufffd \ufffd where c(i,j) represents the direction which points vertex i to vertex j. Then,\n\ufffd \ufffd where c(i,j) represents the direction which points vertex i to vertex j. Then,\nis not affected by a step of the algorithm, that is, U \u2032|\u03c6a stat\u27e9= |\u03c6a stat\u27e9.\nProof. Consider the effect of a step of the algorithm. The query transformation changes the sign of all amplitudes of the marked vertices. The coin flip performs an inversion about the average of these amplitudes: for unmarked vertices, it does nothing as all amplitudes are equal to a; for marked vertices, the average is 0, so it results in sign flip. Thus, CQ does nothing for the amplitudes of the unmarked vertices and twice flips the sign of amplitudes of the marked vertices. Therefore, we have\nThe shift transformation swaps amplitudes of adjacent vertices. For |\u03c6a stat\u27e9, it swaps a with a and \u2212(d \u22121)a with \u2212(d \u22121)a. Thus, we have\nThe initial state of the algorithm |\u03c8(0)\u27e9, given by Eq. (21), can be written as |\u03c8(0)\u27e9= |\u03c6a stat\u27e9\u2212|\u03c6a i,j\u27e9, (26)\n(22)\n(23)\n(24)\n25)\n(25)\n(25)\n(26)\nfor a = 1/ \u221a 2m. Therefore, the only part of the initial state which is changed by a step of the algorithm is |\u03c6a i,j\u27e9. From this fact, we can establish an upper bound for the probability of finding a marked vertex. Theorem 2. Let G = (V, E) be a graph with two adjacent marked vertices i and j with di = dj = d, and let the probability of finding a marked vertex be given by\nfor a = 1/ \u221a 2m. Therefore, the only part of the initial state which is changed by a step of the algorithm is |\u03c6a i,j\u27e9. From this fact, we can establish an upper bound for the probability of finding a marked vertex.\nTheorem 2. Let G = (V, E) be a graph with two adjacent marked vertices i and j with di = dj = d, and let the probability of finding a marked vertex be given by\nwhere |\u03c8(t)\u27e9= U t|\u03c8(0)\u27e9. Then, pM = O \ufffd d2 m \ufffd , where m is the number of edges of he graph.\nwhere |\u03c8(t)\u27e9= U t|\u03c8(0)\u27e9. Then, pM = O \ufffd d2 m \ufffd , where m is the number of edges of the graph. Proof. The only part of the initial state |\u03c8(0)\u27e9which is changed by the step of the algorithm is |\u03c6a i,j\u27e9= \u2212ad \ufffd |i, c(i,j)\u27e9+ |j, c(j,i)\u27e9 \ufffd , for a = 1/ \u221a 2m. Since the evolution is unitary, this part will keep its norm unchanged. In this way, we want to find how big amplitudes can get in order to maximize the value of pM. This means we want to maximize the function\nProof. The only part of the initial state |\u03c8(0)\u27e9which is changed by the step of the algorithm is |\u03c6a i,j\u27e9= \u2212ad \ufffd |i, c(i,j)\u27e9+ |j, c(j,i)\u27e9 \ufffd , for a = 1/ \u221a 2m. Since the evolution is unitary, this part will keep its norm unchanged. In this way, we want to find how big amplitudes can get in order to maximize the value of pM. This means we want to maximize the function\n# 2(d \u22121)(a + x1)2 + 2(\u2212(d \u22121)a \u2212x2)2,\nsubject to 2(d \u22121)x2 1 + 2x2 2 = |||\u03c6a i,j\u27e9||2 = 2a2d2. Note that x1 represents the amplitudes going from the marked vertices to unmarked vertices and x2 represents the amplitudes going from one marked vertex to the other. Then, we obtain\npM \u22642a2(2 \ufffd (d \u22121)d3 + d(2d \u22121)) = O \ufffdd2 m \ufffd .\nOne of corollaries of Theorem 2 is that if the degree of the marked vertices is constant or if it does not grow as a function of n, then for large n, the probability of finding a marked vertex will stay close to the initial probability. Consider the example of the graphs in Fig. 6. Intuitively, one might expect that the probability of finding a marked vertex in graph 6a would be bigger than in 6b. However, Fig. 7 shows something different. We calculate the probability of finding a marked vertex and the absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for 100 steps of the evolution and when the size of the two complete graphs attached to the marked vertices is 10. The graph 6a produces a stationary state, and that is why its overlap stays very close to 1 and the probability of finding a marked vertex is smaller than in the other graph.\n(27)\n(28)\n(29)\n\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/8200/820049cd-e1b0-4da6-bf57-02ce812ee8c3.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">(a) Two adjacent marked vertices with the same degree.</div>\nFigure 6: Graphs with two adjacent marked vertices i and j connected to two complete graphs of size 5. (a) The marked vertices have the same degree. (b) The marked vertices have different degrees.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/3820/38203e89-8e78-4f28-8c07-47c1b581e531.png\" style=\"width: 50%;\"></div>\nFigure 7: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for 100 steps of the quantum walk. (Solid line) Graph 6a with two adjacent marked vertices with the same degree and complete graphs of size 10. (Dashed line) Graph 6b with two adjacent marked vertices with different degree and complete graphs of size 10.\nCorollary 1. Suppose the set of marked vertices, M, can be divided in groups of two adjacent marked vertices without intersecting each other. Let M\u2032 be the set of such pairs. Then\nis not changed by a step of the algorithm, that is, U \u2032|\u03c6a stat\u27e9= |\u03c6a stat\u27e9. Proof. Follows from the proof of Theorem 1.\n# 4.2.2 Three adjacent marked vertices\nNow, consider a graph G = (V, E) with three adjacent marked vertices i, j and k, that is, a marked triangle. The stationary state for this case will have the\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/2aa5/2aa58723-c7bf-4956-aa09-8dc5bd5e90ae.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">(b) Two adjacent marked vertices with different degrees.</div>\n(30)\n\namplitudes in the marked vertices as depicted in Fig. 8.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/5d87/5d87f8df-ab57-40dc-b746-61c5c128f52a.png\" style=\"width: 50%;\"></div>\nFigure 8: Sketch of amplitudes for the stationary state with three adjacent marked vertices i, j and k.\n<div style=\"text-align: center;\">Figure 8: Sketch of amplitudes for the stationary state with three adjacent marked vertices i, j and k.</div>\nNote that in order to have a stationary state the sum of amplitudes of each marked vertex should be 0, so the action of the coin operator will be a sign flip. By solving the following system of equations:\nwe obtain,\nTheorem 3. Let G = (V, E) be a graph with three adjacent marked vertices i, j and k; and let |\u03c6a i,j,k\u27e9= \u2212a(lij + 1) \ufffd |i, c(i,j)\u27e9+ |j, c(j,i)\u27e9 \ufffd \u2212a(lik + 1) \ufffd |i, c(i,k)\u27e9+ |k, c(k,i)\u27e9 \ufffd \u2212 \u2212a(ljk + 1) \ufffd |i, c(j,k)\u27e9+ |k, c(k,j)\u27e9 \ufffd ,\nTheorem 3. Let G = (V, E) be a graph with three adjacent marked vertices i, j and k; and let |\u03c6a \u27e9= \u2212a(l + 1) \ufffd |i, c\u27e9+ |j, c\u27e9 \ufffd \u2212a(l + 1) \ufffd |i, c\u27e9+ |k, c\u27e9 \ufffd \u2212\nTheorem 3. Let G = (V, E) be a graph with three adjacent marked vertices i, j and k; and let\n|\u03c6a i,j,k\u27e9= \u2212a(lij + 1) \ufffd |i, c(i,j)\u27e9+ |j, c(j,i)\u27e9 \ufffd \u2212a(lik + 1) \ufffd |i, c(i,k)\u27e9+ |k, c(k,i)\u27e9 \ufffd \u2212 \u2212a(ljk + 1) \ufffd |i, c(j,k)\u27e9+ |k, c(k,j)\u27e9 \ufffd ,\nwhere lij, lik, and ljk are defined in (32). Then,\nis not affected by a step of the quantum walk on G. Proof. Similar to Theorem 1.\n(31)\n\u2212 (32)\n(33)\n(34)\n\nFig. 9 shows two graphs with three adjacent marked vertices i, j and k connected to three complete graphs. Remember, that for three adjacent marked vertices it doesn\u2019t matter if their degrees are different or equal. Both cases will result in a stationary state.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/da3f/da3fb3b2-6539-450d-9096-2b3bccbbdee2.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">(a) Three adjacent marked vertices with di = 4, dj = 3 and dk = 5.</div>\nFigure 9: Graphs with three marked vertices connected to three complete grap of size 5.\n<div style=\"text-align: center;\">Figure 9: Graphs with three marked vertices connected to three complete graphs of size 5.</div>\nIn Fig. 10, we can see how the probability of finding a marked vertex depends on the degree of the marked vertices. Although, both graphs have a stationary state, the maximum probability achieved by 9b is bigger. Moreover, if we consider that the size of the complete graphs can grow, then for graph 9a the probability of finding a marked vertex will stay close to the initial probability (the degree of the marked vertices does not scales as a function of the number of vertices), while for graph 9b it will increase (dk increases with the size of the complete graph).\n# 4.2.3 k-clique of marked vertices\nNext, we generalize the previous result for any complete subgraph of marked vertices.\nTheorem 4. Let G = (V, E) be a graph with k marked vertices v1, . . . , vk forming a k-clique. Then it forms an exceptional configuration.\nProof. Let dvj = (k \u22121) + d\u2032 j, where d\u2032 j is the number of edges of vj outside the clique. To construct a stationary state, we need to assign amplitudes to internal edges of the clique, so that the amplitudes in vertex vj sum up to d\u2032 j. Without a loss of generality let d\u2032 1 < d\u2032 2 < \u00b7 \u00b7 \u00b7 < d\u2032 k. We set the amplitude of the edge (v1, v2) to \u2212ad\u2032 1 and amplitudes of other edges within the clique outgoing from v1 to 0. By this, we have satisfied the condition for the vertex v1 and reduced\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/06aa/06aafb1b-a20b-4068-9b71-182a054cc5bc.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">(b) Three adjacent marked vertices with di = 4, dj = 3 and dk = 6.</div>\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/71dd/71ddc261-c9eb-45b5-86b5-046ec34b2b4e.png\" style=\"width: 50%;\"></div>\nFigure 10: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for 100 steps of the quantum walk. (Solid line) Graph 9a with complete graphs of size 20 and three adjacent marked vertices with di = 4, dj = 3 and dk = 5. (Dashed line) Graph 9b with complete graphs of size 20 and three adjacent marked vertices with di = 4, dj = 3 and dk = 21. the problem from size k to k \u22121. I.e. now we have a (k \u22121)-clique with degrees (d\u2032 2 \u2212d\u2032 1), d\u2032 3, . . . , d\u2032 k. Next, we recursively repeat the previous step until we get a 3-clique, which always have an assignment. In this way, we have constructed a stationary state for a k-clique of marked vertices.\nFigure 10: Probability of finding a marked vertex, pM, and absolute value of the overlap, |\u27e8\u03c8(0)|\u03c8(t)\u27e9|, for 100 steps of the quantum walk. (Solid line) Graph 9a with complete graphs of size 20 and three adjacent marked vertices with di = 4, dj = 3 and dk = 5. (Dashed line) Graph 9b with complete graphs of size 20 and three adjacent marked vertices with di = 4, dj = 3 and dk = 21.\nthe problem from size k to k \u22121. I.e. now we have a (k \u22121)-clique with degrees (d\u2032 2 \u2212d\u2032 1), d\u2032 3, . . . , d\u2032 k. Next, we recursively repeat the previous step until we get a 3-clique, which always have an assignment. In this way, we have constructed a stationary state for a k-clique of marked vertices.\nNote that any set of marked vertices which can be divided into unique blocks of two adjacent marked vertices with the same degree and/or k-clique marked vertices will result in a stationary state.\nIn this section, we describe general conditions in which a state is stationary. Theorem 5 (General conditions). Let |\u03c8\u27e9be a state with the following properties: 1 All amplitudes of the unmarked vertices are equal; 2 The sum of the amplitudes of any marked vertex is 0; 3 The amplitudes of two adjacent vertices pointing to each other are equal. Then, |\u03c8\u27e9is not changed by a step of the quantum walk, that is, U|\u03c8\u27e9= |\u03c8\u27e9. Proof. Item 1 is required in order for the coin transformation to have no effect on the unmarked vertices. It is easy to see that Cn|u\u27e9= |u\u27e9, where |u\u27e9= a \ufffdn\u22121 i=0 |i\u27e9 for some constant a.\n\nItem 2 is necessary so the coin transformation can flip the signs of the amplitudes in the marked vertices. Note that previously the sign of these amplitudes were inverted by the query transformation. Item 3 is necessary for the shift transformation to have no effect on the state.\nItem 2 is necessary so the coin transformation can flip the signs of the amplitudes in the marked vertices. Note that previously the sign of these amplitudes were inverted by the query transformation. Item 3 is necessary for the shift transformation to have no effect on the state. Note that the aforementioned conditions are established for the case CQ|\u03c8\u27e9= |\u03c8\u27e9and S|\u03c8\u27e9= |\u03c8\u27e9. There might be even more general conditions for the case U \u2032|\u03c8\u27e9= |\u03c8\u27e9.\nNote that the aforementioned conditions are established for the case CQ|\u03c8\u27e9= |\u03c8\u27e9and S|\u03c8\u27e9= |\u03c8\u27e9. There might be even more general conditions for the case U \u2032|\u03c8\u27e9= |\u03c8\u27e9.\n# 5 Conclusions\nIn this paper, we have demonstrated a wide class of exceptional configurations of marked vertices for the quantum walk based search on various graphs. The above phenomenon is purely quantum. Classically, additional marked vertices result in the decrease of the number of steps of the algorithm and the increase of the probability of finding a marked location. Quantumly, the addition of a marked vertex can drastically drop the probability of finding a marked location. An open question is whether the found phenomenon has analogs for other models of quantum walks (continuous time quantum walks [5], Szegedy\u2019s quantum walk [12], staggered quantum walks [10], etc.) as well as for alternative coin operators. Another open question is algorithmic applications of the found effect. For example, in case of two-dimensional grid the search algorithm can \u201cdistinguish\u201d between odd-times-odd and even-times-even groups of marked locations. Moreover, if there are multiple odd-times-odd and even-times-even groups of marked locations, the algorithm will find only odd-times-odd groups and will \u201cignore\u201d even-times-even groups. Nothing like this is possible for classical random walks without adding additional memory resources and complicating the algorithm. Another example is the general graphs where the algorithm \u201cignores\u201d marked triangles. We think that the found phenomenon should have algorithmic applications which would be very interesting to find.\nAcknowledgements. The authors thank Andris Ambainis for helpful ideas and suggestions, which was a great help during this research, and Tom Wong for useful comments and careful revision of the manuscript.\n# References\n[1] Y. Aharonov, L. Davidovich, and N. Zagury. Quantum random walks. Physical Review A, 48(2):1687\u20131690, 1993.\n] Y. Aharonov, L. Davidovich, and N. Zagury. Quantum random walks. Physical Review A, 48(2):1687\u20131690, 1993.\n[2] A. Ambainis. Quantum walk algorithm for element distinctness. In Proceedings of the 45th Annual IEEE Symposium on Foundations of Computer Science, 2004. [3] A. Ambainis, J. Kempe, and A. Rivosh. Coins make quantum walks faster. In Proceedings of the 16th ACM-SIAM Symposium on Discrete Algorithms, pages 1099\u20131108, 2005. [4] A. Ambainis and A. Rivosh. Quantum walks with multiple or moving marked locations. In Proceedings of SOFSEM, pages 485\u2013496, 2008. [5] E. Farhi and S. Gutmann. Quantum computation and decision trees. Physical Review A, 58:915\u2013928, 1998. [6] F. Magniez, M. Santha, and M. Szegedy. An o(n1.3) quantum algorithm for the triangle problem. In Proceedings of SODA, pages 413\u2013424, 2005. [7] N. Nahimovs and A. Rivosh. Exceptional configurations of quantum walks with Grover\u2019s coin. In Proceedings of MEMICS, pages 79\u201392, 2015. [8] N. Nahimovs and A. Rivosh. Quantum walks on two-dimensional grids with multiple marked locations, 2015. arXiv:quant-ph/150703788. [9] R. Portugal. Quantum walks and search algorithms. Springer, New York, 2013. 10] R. Portugal, R. A. M. Santos, T. D. Fernandes, and D. N. Gon\u00b8calves. The staggered quantum walk model. Quantum Information Processing, 15(1):85\u2013 101, 2015. 11] N. Shenvi, J. Kempe, and K. B. Whaley. A quantum random walk search algorithm. Physical Review A, 67(052307), 2003. 12] M. Szegedy. Quantum speed-up of Markov chain based algorithms. In Proceedings of the 45th Symposium on Foundations of Computer Science, pages 32\u201341, 2004. 13] T. G. Wong. Spatial search by continuous-time quantum walk with multiple marked vertices. Quantum Information Processing, 15(4):1411\u20131443, 2016. 14] T. G. Wong and A. Ambainis. Quantum search with multiple walk steps per oracle query. Phys. Rev. A, 92:022338, Aug 2015.\n",
    "paper_type": "theory",
    "attri": {
        "background": "Quantum walks have been useful for designing quantum algorithms that outperform their classical versions for a variety of search problems. This paper addresses the performance of quantum walks in search problems involving multiple marked vertices, which has not been extensively studied in the literature.",
        "problem": {
            "definition": "The problem involves understanding how the placement of multiple marked vertices in a search space affects the performance of quantum walks.",
            "key obstacle": "The main challenge is that certain configurations of adjacent marked vertices can lead to quantum walks that require \u2126(N) steps, resulting in no speed-up over classical exhaustive search methods."
        },
        "idea": {
            "intuition": "The idea was inspired by previous findings that the location of marked vertices can influence the performance of quantum walks.",
            "opinion": "The authors propose that adjacent marked vertices create exceptional configurations that limit the probability of finding a marked vertex over time.",
            "innovation": "The main difference compared to previous methods is the identification of a wide class of configurations for which quantum walks do not yield a significant speed-up, particularly when marked vertices are adjacent."
        },
        "Theory": {
            "perspective": "The theory perspective involves analyzing quantum walks on general graphs with multiple marked vertices and establishing conditions under which the states become stationary.",
            "opinion": "The authors assume that certain configurations of marked vertices lead to stationary states that hinder the search process.",
            "proof": "The paper provides proofs that demonstrate how specific configurations of marked vertices result in stationary states, limiting the probability of finding a marked vertex."
        },
        "experiments": {
            "evaluation setting": "The experiments are conducted on two-dimensional grids and hypercubes, analyzing configurations of marked vertices and their impact on search efficiency.",
            "evaluation method": "The evaluation involves simulating quantum walks and measuring the probability of finding marked vertices over time for different configurations."
        },
        "conclusion": "The findings conclude that certain arrangements of marked vertices can drastically reduce the efficiency of quantum walks, highlighting the importance of vertex placement in quantum search algorithms.",
        "discussion": {
            "advantage": "The paper provides a comprehensive analysis of exceptional configurations, offering insights into the limitations of quantum walks in search problems.",
            "limitation": "The study primarily focuses on specific configurations and may not generalize to all possible graph structures or quantum walk models.",
            "future work": "Future research could explore the implications of these findings on other quantum walk models and investigate potential algorithmic applications of the identified exceptional configurations."
        },
        "other info": [
            {
                "acknowledgements": "The authors thank Andris Ambainis for helpful ideas and suggestions, and Tom Wong for useful comments and careful revision of the manuscript."
            },
            {
                "funding": "This work was supported by the European Union Seventh Framework Programme (FP7/2007-2013) under the QALGO project and the RAQUEL project, as well as the Latvian State Research Programme NeXIT."
            }
        ]
    },
    "mount_outline": [
        {
            "section number": "2.1",
            "key information": "The problem involves understanding how the placement of multiple marked vertices in a search space affects the performance of quantum walks."
        },
        {
            "section number": "2.3",
            "key information": "The theory perspective involves analyzing quantum walks on general graphs with multiple marked vertices and establishing conditions under which the states become stationary."
        },
        {
            "section number": "3.3",
            "key information": "The paper provides proofs that demonstrate how specific configurations of marked vertices result in stationary states, limiting the probability of finding a marked vertex."
        },
        {
            "section number": "5.3",
            "key information": "The findings conclude that certain arrangements of marked vertices can drastically reduce the efficiency of quantum walks, highlighting the importance of vertex placement in quantum search algorithms."
        },
        {
            "section number": "8",
            "key information": "Future research could explore the implications of these findings on other quantum walk models and investigate potential algorithmic applications of the identified exceptional configurations."
        }
    ],
    "similarity_score": 0.5040622861753802,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-11-1142_cogni/papers/Adjacent vertices can be hard to find by quantum walks.json"
}