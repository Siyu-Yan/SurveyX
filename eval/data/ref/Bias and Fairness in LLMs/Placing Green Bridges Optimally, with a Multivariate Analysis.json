{
    "from": "arxiv",
    "scholar_id": null,
    "detail_id": "arXiv:2102.04539",
    "title": "Placing Green Bridges Optimally, with a Multivariate Analysis",
    "abstract": "\nAbstract. We study the problem of placing wildlife crossings, such as green bridges, over human-made obstacles to challenge habitat fragmentation. The main task herein is, given a graph describing habitats or routes of wildlife animals and possibilities of building green bridges, to find a low-cost placement of green bridges that connects the habitats. We develop three problem models for this task and study them from a computational complexity and parameterized algorithmics perspective. Keywords. wildlife crossings \u00b7 computational sustainability \u00b7 connected subgraphs \u00b7 NP-hardness \u00b7 parameterized algorithmics\n# 1 Introduction\nSustainability is a major concern impacting today\u2019s politics, economy, and industry. Accordingly, sustainability sciences are well-established by now. Yet, the interdisciplinary scientific field \u201ccomputational sustainability\u201d [20, 21], which combines practical and theoretical computer science with sustainability sciences, is quite young. For instance, the Institute for Computational Sustainability at Cornell University was founded in 2008, the 1st International Conference on Computational Sustainability (CompSust\u201909) took place in 2009, and special tracks on computational sustainability and AI were established at AAAI [17] and IJCAI [33]. This work contributes to computational sustainability: We model problems of elaborately placing wildlife crossings and give complexity-theoretical and algorithmic analysis for each. Wildlife crossings are constructions (mostly bridges or tunnels [38]) that allow wildlife animals to safely cross human-made transportation lines (e.g., roads). We will refer to wildlife crossings as green bridges. There are numerous reports on wildlife-vehicle collisions [25, 35, 37]. Huijser et al. [25] identify several endangered animal species suffering from high road mortality and estimate the annual cost associated with wildlife-vehicle collisions with around 8 billion US dollars. Wildlife fencing with wildlife crossings can",
    "bib_name": "fluschnik2024placinggreenbridgesoptimally",
    "md_text": "# Placing Green Bridges Optimally, with a Multivariate Analysis\nTill Fluschnik\u2217and Leon Kellerhals\nTechnische Universit\u00e4t Berlin, Faculty IV, Institute of Software Engineering and Theoretica Computer Science, Algorithmics and Computational Complexity.\nAbstract. We study the problem of placing wildlife crossings, such as green bridges, over human-made obstacles to challenge habitat fragmentation. The main task herein is, given a graph describing habitats or routes of wildlife animals and possibilities of building green bridges, to find a low-cost placement of green bridges that connects the habitats. We develop three problem models for this task and study them from a computational complexity and parameterized algorithmics perspective. Keywords. wildlife crossings \u00b7 computational sustainability \u00b7 connected subgraphs \u00b7 NP-hardness \u00b7 parameterized algorithmics\n# 1 Introduction\nSustainability is a major concern impacting today\u2019s politics, economy, and industry. Accordingly, sustainability sciences are well-established by now. Yet, the interdisciplinary scientific field \u201ccomputational sustainability\u201d [20, 21], which combines practical and theoretical computer science with sustainability sciences, is quite young. For instance, the Institute for Computational Sustainability at Cornell University was founded in 2008, the 1st International Conference on Computational Sustainability (CompSust\u201909) took place in 2009, and special tracks on computational sustainability and AI were established at AAAI [17] and IJCAI [33]. This work contributes to computational sustainability: We model problems of elaborately placing wildlife crossings and give complexity-theoretical and algorithmic analysis for each. Wildlife crossings are constructions (mostly bridges or tunnels [38]) that allow wildlife animals to safely cross human-made transportation lines (e.g., roads). We will refer to wildlife crossings as green bridges. There are numerous reports on wildlife-vehicle collisions [25, 35, 37]. Huijser et al. [25] identify several endangered animal species suffering from high road mortality and estimate the annual cost associated with wildlife-vehicle collisions with around 8 billion US dollars. Wildlife fencing with wildlife crossings can reduce collisions by over 80% [25], enables populations to sustain [34], and are thereby among the most cost-effective [24]. The implementation, though, is a delicate problem, as depicted by Huijser et al. [25, p.16]: The location, type, and dimensions of wildlife crossing structures must be carefully planned with regard to the species and surrounding landscape. For example, grizzly bears, deer, and elk tend to use wildlife overpasses to a greater extent than wildlife underpasses, while black bears and mountain lions use un-\n\u2217Supported by DFG, project TORE (NI/369-18).\nApart from these delicacies, another challenge is to obtain good data about the specific areas inhabited by a species [39]: While it is arguably easier to answer whether some animal species habitates a certain patch of land in the positive, it seems more challenging to rule it out. Clearly, high data quality is a crucial for deciding on where to place green bridges. In this work, we consider the task of (re-)connecting habitats under varying connectivity requirements by placing as few green bridges as possible, thus minimizing the cost. We assume to be given a set of land patches which are disconnected by roads, the set of inhabited patches for each animal, and possible locations for green bridges, each of which connects two patches. This is canonical to model as a graph: vertices represent the land patches, edges represent the possible locations for green bridges, and for each animal species we are given a vertex subset of the inhabited patches. The goal in the model now is to find an edge set that sufficiently connects the habitats of each species. In particular, we comparatively study in terms of computational complexity and parameterized algorithmics the following three different (families of) decision problems.1 \u03a0 Green Bridges Placement (\u03a0 GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286V for all i \u2208{1, . . . , r}, and k \u2208N0. Question: Is there an edge set F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r}, it holds that Vi \u2286V (G[F]) and \u03a0 \u2261d-Reach: G[F]d[Vi] is connected? (Problem 2) (Sec. 3) \u03a0 \u2261d-Closed: G[F]d[Vi] is a clique? (Problem 6) (Sec. 4) \u03a0 \u2261d-Diam(eter): diam(G[F][Vi]) \u2264d? (Problem 7) (Sec. 5)\nOur problems address both the challenge in obtaining high quality data as well as the question to what connectivity is sufficient. Connectivity is addressed by the different requirements on the solution: While d-Reach GBP simply ensures connectivity of each habitat along length-d paths, d-Closed GBP additionally requires every two patches of each habitat to be connected by such a path. The latter is also true for d-Diam GBP, which additionally requires that such a path only uses the habitat\u2019s patches. In this sense, d-Diam GBP generalizes 1-Reach GBP. Moreover, d-Diam GBP and d-Closed GBP are equivalent for d = 1. See Figure 1 for relationships between the problems. As for the data quality, recall that it is arguably easier to tell with sufficient certainty that some animal species inhabits a certain area, but harder to rule it out with the same certainty, especially for areas that are adjacent to habitated areas. This property is captured very well by d-Reach GBP and d-Closed GBP. Herein, one should choose d antiproportionally to the data quality. For instance, with perfect data quality, that is, perfect knowledge about each species\u2019 habitat, one may choose d = 1 (and hence, d-Diam GBP is also amenable). Imperfect data quality is reflected by a choice of d > 1. Here, we relax the connectivity constraints and allow for \u201chops\u201d within the connected habitat. If for example d = 2 and a possibly uninhabited area v is adjacent to two inhabited areas u and w, then u and w may be connected by {u, v} and {v, w}, thus \u201chopping\u201d over v. Our Contributions. Our results are summarized in Table 1. We settle the classic complexity and parameterized complexity (regarding the number k of green bridges and the 1The d-th power Gd of a graph G contains edge {v, w} \u2208 \ufffdV (G) \ufffd if and only if dist(v, w) \u2264d.\nFigure 1: A diagram of interconnections between the problems (for the definition of Connect GBP see Problem 1). An edge from problem A to problem B means that any solution to A is also a solution to B. Problems with d omitted from the problem name require that there is a solution for some value of d.\nProblem\nComput.\nParameterized Algorithmics\nRef.\n(\u03a0 GBP)\nComplex.\nk\nr\nk + r\nd-Reach\n(Sec. 3)\nd = 1 NP-c.a\n2k-vertex K\u2020\np-NP-h.\u2021\nO(rk + k2) PK\n(Sec. 3.2)\nd = 2 NP-c.b\nO(kk)-vertex K\u2020,*\np-NP-h.c\nFPT\u2020\n(Sec. 3.3)\nd \u22653 NP-c.\nXP, W[1]-h.\np-NP-h.c\nXP, W[1]-h.\n(Sec. 3.4)\nd-Closed\n(Sec. 4)\nd = 1 Lin. time\n\u2014\n\u2014\n\u2014\n(Sec. 4)\nd = 2 NP-c.d\nO(kk)-vertex K\u2020,*\np-NP-h.e,g\nFPT\u2020\n(Sec. 4.3)\nd \u22653 NP-c.\nXP, W[1]-h.\np-NP-h.e,g\nXP, W[1]-h.\n(Sec. 4.4)\nd-Diam\n(Sec. 5)\nd = 1 Lin. time\n\u2014\n\u2014\n\u2014\n(Sec. 5)\nd = 2 NP-c.f\n2k-vertex K\u2020\np-NP-h.g\nO(rk + k2) PK\n(Sec. 5)\nnumber r of habitats) of the three problems. While d-Reach GBP is (surprisingly) already NP-hard for d = 1 on planar or maximum degree \u2206= 4 graphs, d-Closed GBP and d-Diam GBP become NP-hard for d \u22652, but admit an (r + \u2206)O(1)-sized problem kernel and thus are linear time solvable if r + \u2206is constant. All variants are para-NP-hard when parameterized by r. d-Reach GBP and d-Closed GBP are fixed-parameter tractable regarding k when d \u22642, but become W[1]-hard (yet XP) regarding k and k+r when d > 2. Additionally, we prove that d-Reach GBP admits an rd-approximation in O(mn + rnd) time.\nFurther related work. Our problems deal with finding (small) spanning connected subgraphs obeying some (connectivity) constraints. These problems are applicable in a wide range of areas and typically take the form of a special case or variant of 1-Reach GBP. Areas include computer networks [6], social networks [2], graph drawing [4], combinatorial auctions [7], reconfigurable computing [16], vacuum technology [14], and structural biology [1]. 1-Reach GBP on cliques is also known as the Subset Interconnection Design problem: Given sets V1, . . . , Vr, find a graph G with V (G) = V1 \u222a\u00b7 \u00b7 \u00b7 \u222aVr with the\n1-Closed GB 1-Diam GBP\nminimum number of edges such that G[Vi] is connected for each i. This problem was first introduced by [13] and proven to be NP-hard by [15]. It was also studied in terms of its approximability [2] and its parameterized complexity [5]. Closely related to our problems are also Steiner multigraph problems [18, 32], which were also studied in the context of wildlife corridor construction [28, 29]. Requiring small diameter appears also in the context of spanning trees [31] and Steiner forests [11]. An edge-weighted version of 4-Diam GBP is proven to be NP-hard even if there are only two different weights [30]. Kim et al. [26] study the problem of deleting few edges to augment a graph\u2019s diameter to a constant. Gionis et al. [19] studied a variant of 2-Diam GBP in which for any solution F and habitat Vi, G[F][Vi] must induce a star, and gave an efficient approximation algorithm for it. Herrendorf [23] studied the same variant as well as the 1-Reach GBP problem (under a different name) in terms of their parameterized complexity.\n# Connecting habitats arbitrarily. The following obvious model just requires that eac habitat is connected.\nConnecting habitats arbitrarily. The following obvious model just requires that each habitat is connected.\nProblem 1. Connected Green Bridges Placement (Connect GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286V for all i \u2208{1, . . . , r}, and an integer k \u2208N0. Question: Is there a subset F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r} it holds that in G[F] there exists a connected component containing Vi?\nConnect GBP with edge costs is also known as Steiner Forest [18] and generalizes the well-known NP-hard Steiner Tree problem. Gassner [18] proved Steiner Forest to be NP-hard even if every so-called terminal net contains two vertices, if the graph is planar and has treewidth three, and if there are two different edge costs, each being upperbounded linearly in the instance size. It follows that Connect GBP is also NP-hard in this case. Bateni et al. [3] proved that Steiner Forest is polynomial-time solvable on graphs of treewidth two and admits approximation schemes on planar and boundedtreewidth graphs. From a modeling perspective, solutions for Connect GBP may be highly scattered: Patches of the same species\u2019 habitat may be arbitrarily far away from another; thus, to reach another patch of their habitat, animals may need to take long walks through areas of their habitats when only using green bridges to cross streets. It is likely that species with scattered habitats will not make use of the green bridges. With our models we avoid such solutions.\n# 2 Preliminaries\nLet N and N0 be the natural numbers without and with zero, res definitions from graph theory [10] and parameterized algorithmics\nLet N and N0 be the natural numbers without and with zero, respectively. We use basic definitions from graph theory [10] and parameterized algorithmics [8].\nGraph Theory. Let G = (V, E) be an undirected graph with vertex set V and edg set E \u2286 \ufffdV 2 \ufffd . We also denote by V (G) and E(G) the vertices and edges of G, respectively For V \u2032 \u2286V , let G[V \u2032] = (V \u2032, E \u2229 \ufffdV \u2032 2 \ufffd ) denote the graph G induced by a vertex set V \u2032 For F \u2286E let V (F) := {v \u2208V | \u2203e \u2208F : v \u2208e} and G[F] := (V (F), F) denote th graph G induced by the edge set F. A path P is a graph with V (P) := {v1, . . . , vn}\nGraph Theory. Let G = (V, E) be an undirected graph with vertex set V and edge set E \u2286 \ufffdV 2 \ufffd . We also denote by V (G) and E(G) the vertices and edges of G, respectively. For V \u2032 \u2286V , let G[V \u2032] = (V \u2032, E \u2229 \ufffdV \u2032 2 \ufffd ) denote the graph G induced by a vertex set V \u2032. For F \u2286E let V (F) := {v \u2208V | \u2203e \u2208F : v \u2208e} and G[F] := (V (F), F) denote the graph G induced by the edge set F. A path P is a graph with V (P) := {v1, . . . , vn}\nand E(P) := {{vi, vi+1} | 1 \u2264i < n}. The length of the path P is |E(P)|. The distance distG(v, w) between vertices v, w \u2208V (G) is the length of the shortest path between v and w in G. The diameter diam(G) is the length of longest shortest path over all vertex pairs. For p \u2208N, the graph Gp is the p-th power of G containing the vertex set V and edge set {{v, w} \u2208 \ufffdV 2 \ufffd | distG(v, w) \u2264p}. For F \u2286E, V \u2032 \u2286V , and d \u2208N, the graph G[F]d[V \u2032] is understood as ((G[F])d)[V \u2032]. Let NG(v) := {w \u2208V | {v, w} \u2208E} be the (open) neighborhood of v, and NG[v] := NG(v) \u222a{v} be the closed neighborhood of v. For p \u2208N, let N p G(v) := {w \u2208V | {v, w} \u2208E(Gp)} be the (open) p-neighborhood of v, and N p G[v] := N p G(v) \u222a{v} be the closed p-neighborhood of v. Two vertices v, w \u2208V are called twins if NG(v) = NG(w). The (vertex) degree degG(v) := |NG(v)| of v is the number of its neighbors. The maximum degree \u2206(G) := maxv\u2208V degG(v) is the maximum over all (vertex) degrees.\n# 3 Connecting Habitats with a Patch at Short Reach\nThe following problem ensures that any habitat patch can reach the other patches via patches of the same habitat and short strolls over \u201cforeign\u201d ground.\nProblem 2. d-Reach Green Bridges Placement (d-Reach GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286V for all i \u2208{1, . . . , r}, and an integer k \u2208N0. Question: Is there a subset F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r} it holds that Vi \u2286V (G[F]) and G[F]d[Vi] is connected?\nTheorem 1. d-Reach Green Bridges Placement is (i) if d = 1, NP-hard even on planar graphs, or if r \u22657 but solvable in linear time if r \u22642; (ii) if d = 2, NP-hard even on graphs with maximum degree four and r = 2 or graphs with diameter four and r = 1, and in FPT regarding k; (iii) if d \u22653, NP-hard and W[1]-hard regarding k + r. Moreover, d-Reach GBP admits an rd-approximation of the minimum number of green bridges in O(mn + rnd) time.\nWe will first present the approximation algorithm. Afterwards, we will present the results in (i)-(iii) in the order above.\nAn (r \u00b7 d)-Approximation for d-Reach GBP\nIn this section we will present the approximation algorithm of Theorem 1. The approximation algorithm computes for every habitat Vi a spanning tree in Gd[Vi], and adds the edges of the corresponding paths to the solution F. Each of the spanning trees then is a d-approximation for just the one habitat, hence the union of the spanning trees is an rd-approximation for all habitats.\nLemma 1. For r = 1, d-Reach GBP admits a d-approximation of the minimum number of green bridges in O(mn) time.\ntree T \u2286H[V1] in O(n log n) time. For each edge e = {u, v} \u2208E(T) compute in O(m) time the corresponding path Pe \u2286G from u to v of length at most d. Finally, return the set F := \ufffd e\u2208E(T) E(Pe), computable in O(m) time. Clearly, G[F]d[V1] is connected. As a minimum solution F \u2217has at least |V1| \u22121 edges, and every path Pe consists of at most d\nProposition 2. d-Reach GBP admits an rd-approximation of the minimum number of green bridges in O(mn + rnd) time. Proof. We initially compute the shortest paths between all vertex pairs in G in O(mn) time. We obtain the graph H := Gd as a byproduct. If for some i \u2208{1, . . . , r}, H[Vi] is not connected, then return no. If not, then compute for each i \u2208{1, . . . , r} a spanning tree Ti of H[Vi], or return no if H[Vi] is not connected. Let Fi \u2286E(G) be the edge set corresponding to Ti as in the proof of Lemma 1. As G[Fi]d[Vi] is connected, F := \ufffdr i=1 Fi is a solution. Note that each of the r spanning trees Ti contains at most n edges, and for each of these edges e \u2208Fi we can determine the corresponding paths Pe \u2286G of length at most d in O(d) time. We obtain an overall running time of O(mn + rnd). As for the approximation ratio, let F \u2217be a minimum solution, and for every i \u2208 {1, . . . , r} let F \u2217 i \u2286E(G) be a minimum-size edge set such that G[F \u2217 i ]d[Vi] is connected. As |F \u2217| \u2265maxi\u2208{1,...,r} |F \u2217 i |, we have\n# 3.2 When a next habitat is directly reachable (d = 1)\nRecall that setting d = 1 may reflect perfect knowledge about the habitats. In this case, we want that in G[F], each habitat Vi forms a connected component. Du and Miller [15] showed that 1-Reach GBP is NP-hard even when the input graph is complete. We give two reductions that show NP-hardness in some restricted cases. From the second reduction we can also derive that presumably there is no polynomial kernel with respect to the budget k. Lastly, we show that if there are only two habitats, then the problem can be solved in linear time. We start with proving that 1-Reach GBP is NP-hard on series-parallel graphs. As every series-parallel graph is planar, we also obtain the same hardness result for planar graphs. Further, the provided reduction also shows that the problem is unlikely to admit a kernel whose size is bounded polynomially in the parameter. Proposition 3. 1-Reach GBP is NP-hard and, unless NP \u2286coNP / poly, admits no problem kernel of size kO(1), even on series-parallel graphs. We will give a linear parametric transformation from the following problem: Problem 3. Hitting Set (HS) Input: A universe U, a set F \u22862U of subsets of U, and an integer k. Question: Is there a hitting set U \u2032 \u2286U with |U \u2032| \u2264k such that for all F \u2208F we have F \u2229U \u2032 \u0338= \u2205? Note that Hitting Set admits no problem kernel of size polynomial in |U| unless NP \u2286 coNP / poly [12].\nProblem 3. Hitting Set (HS) Input: A universe U, a set F \u22862U of subsets of U, and an integer k. Question: Is there a hitting set U \u2032 \u2286U with |U \u2032| \u2264k such that for all F \u2208F we have F \u2229U \u2032 \u0338= \u2205? Note that Hitting Set admits no problem kernel of size polynomial in |U| unless NP \u2286 coNP / poly [12].\n\n\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/541a/541a27d5-d584-4e19-bb6d-abacdab63aa6.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 2: Illustration to Construction 1 for 1-Reach GBP on series-parallel (and thus planar) graphs. In this example, there are e.g. Fp \u2287{1, i, j} and Fq \u2287{i, j, n}. In case of a yes-instance, the red-colored edges are in every solution (Observation 5).</div>\nFigure 2: Illustration to Construction 1 for 1-Reach GBP on series-parallel (and thus planar) graphs. In this example, there are e.g. Fp \u2287{1, i, j} and Fq \u2287{i, j, n}. In case of a yes-instance, the red-colored edges are in every solution (Observation 5). Construction 1. For an instance I = (U, F, k) of Hitting Set with U = {1, . . . , n} and F = {F1, . . . , Fm}, we construct an instance I\u2032 := (G\u2032, H, k\u2032) with k\u2032 := n + k and habitat set H = {S, V1, . . . , Vm} as follows (see Figure 2 for an illustration). Add to G\u2032 the vertex set VU := {xi | i \u2208U} as well as the two vertices s and t, and the edge sets E\u2217:= \ufffdn i=1{{s, xi}} and EU := \ufffdn i=1{{xi, t}}. Finally, let S := {s} \u222a\ufffdn i=1{xi}, and for each Fj \u2208F let Vj := {s, t} \u222a\ufffd i\u2208Fj{xi}. \u22c4 Observation 4. The graph G\u2032 constructed in Construction 1 is planar and series-parallel. Observation 5. Let I\u2032 be a yes-instance. Then every solution F contains all edges in E\u2217. Proof. By construction, G[S] is a star with center s. Hence, all edges in G[S] are contained in every solution. Since E\u2217= E(G[S]), the claim follows. Lemma 6. Let I\u2032 be the instance obtained from applying Construction 1 to an instance I. Then, I is a yes-instance if and only if I\u2032 is a yes-instance. Proof. (\u21d2) Let U \u2032 \u2286U be a solution for instance I. We claim that F := E\u2217\u222a \ufffd i\u2208U\u2032{{xi, t}} is a solution for I\u2032. Note that |F| \u2264n + k. Observe that G\u2032[F][S] is connected. Suppose now that there is Vj such that G\u2032[F][Vj] is not connected. Let Fj be the corresponding set. Since E\u2217\u2286F, none of the edges {{xi, t} | i \u2208Fj} are contained in F. It follows that Fj \u2229U \u2032 = \u2205, contradicting the fact that U \u2032 is a solution for I. (\u21d0) Let F be a solution to I\u2032. By Observation 19 we know that E\u2217\u2286F. We claim that U \u2032 := {i \u2208U | {xi, t} \u2208F} is a solution for I. Clearly |U \u2032| \u2264k. Suppose U \u2032 is not a solution. Then there is an Fj \u2208F with Fj \u2229U \u2032 = \u2205. But then G\u2032[F][Vj] is not connected, a contradiction. Next, we prove that 1-Reach GBP is NP-hard even if we are given a constant number of habitats. Proposition 7. 1-Reach GBP is NP-complete even if r = 7. We reduce from the following NP-hard problem. Problem 4. Directed Hamiltonian Path (DHP) Input: A directed graph D = (W, A) and two distinct vertices s, t \u2208W such that outdeg(t) = indeg(s) = 0. Question: Is there an s-t path that visits every vertex exactly once? We first recall a well-known reduction to Hamiltonian Path (HP), the undirected variant. Then, we reduce HP to 1-Reach GBP. For both constructions, we refer to Figure 3 for an illustrative example.\nProblem 4. Directed Hamiltonian Path (DHP) Input: A directed graph D = (W, A) and two distinct vertices s, t \u2208W such that outdeg(t) = indeg(s) = 0. Question: Is there an s-t path that visits every vertex exactly once? We first recall a well-known reduction to Hamiltonian Path (HP), the undirected variant. Then, we reduce HP to 1-Reach GBP. For both constructions, we refer to Figure 3 for an illustrative example.\nConstruction 2. Construct the undirected graph G\u2032 = (V \u2032, E\u2032) as follows. For each vertex v \u2208W \\ {s, t}, G\u2032 contains the path Pv = (vin, v, vout). Moreover, it contains the paths Ps = (s, sout) and Pt = (tin, t). For every arc (v, w) \u2208A, add the edge (vout, win). \u22c4 Recall the following. Observation 8. (D, s, t) is a yes-instance of DHP if and only if (G\u2032, s, t), obtained from (D, s, t) using Construction 2, is a yes-instance of HP. Next, we construct the instance of 1-Reach GBP from G\u2032. Construction 3. Let G\u2032 = (W \u2032, E\u2032) be the graph obtained from (D = (W, A), s, t) using Construction 2. We now construct the graph G = (V, E) from G\u2032 with habitat set\nMoreover, make xout adjacent to vout for each v \u2208W \\ {t}, make yout adjacent to vout for each v \u2208W \\ {t}, make xin adjacent to vin for each v \u2208W \\ {s}, make yin adjacent to vin for each v \u2208W \\ {s}, Next, let Vall := W \u2032 and\nFinally, let k := 2(n \u22122) + 2 + 4(n \u22121) + (n \u22121) = 7(n \u22121), where n = |W|. \u22c4 As the habitats X\u2217 out, X\u2217 in, Yout, and Yin induce trees in G, we have the following. Observation 9. If (G, H, k), obtained from (G\u2032, s, t) using Construction 3, is a yesinstance of 1-Reach GBP, then every solution contains all edges contained in Pv for every v \u2208W and all edges incident with xout, with xin, with yout, and with yin. Lemma 10. Instance I\u2032 = (G\u2032, s, t), obtained from (D, s, t) using Construction 2, is a yesinstance of HP if and only if I = (G, H, k), obtained from (G\u2032, s, t) using Construction 3, is a yes-instance of 1-Reach GBP. Proof. Let F \u2032 := \ufffd v\u2208W E(Pv) \u222a{e \u2208E | e \u2229{xout, xin, yout, yin} \u0338= \u2205} and let n := |W|. Note that |F \u2032| = 2(n \u22122) + 2 + 4(n \u22121). (\u21d2) Let P = (s, v2, . . . , vn\u22122, t) be an s-t path in D that visits every vertex exactly once. We claim that F := F \u2032 \u222aF \u2032\u2032 is a solution for instance I, where F \u2032\u2032 := {uout, vin | (u, v) \u2208A(P)}. Clearly |F| \u2264|F \u2032| + |F \u2032\u2032| = k. Note that the set F \u2032 already connects the habitats X\u2217 out, X\u2217 in, Yout, and Yin. Note that P is a subgraph of D that is weakly connected and in which every vertex has indegree one and every vertex has outdegree one, except for s (indegree zero) and t (outdegree zero). Hence, for every v \u2208W there exists an edge (v, w) \u2208A(P), and thus {vout, win} \u2208F \u2032\u2032. Therefore, G[F][Xin] is connected. The argumentation for G[F][Xout] being connected is analogous. Finally, as P is a connected subgraph, F contains the edges of an s-t path that contains all vertices in Vall.\n\u22c4\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/7d5e/7d5e6209-84b1-4a16-abe7-00cc4ec84805.png\" style=\"width: 50%;\"></div>\n(c)\n<div style=\"text-align: center;\">Figure 3: Illustration to Constructions 2 & 3. Part (a) shows an exemplary directed graph which is a yes-instance for DHP. Applying Construction 2 on (a) yields (b). Applying Construction 3 on (b) yields the instance whose graph is depicted in (c) and two habitats of which are depicted in (d) and (e). Vertices marked yellow in (d) are contained in the habitat Xout. Vertices marked red in (e) are contained in the habitat Yout. The graph induced by Yout contains the red edges.</div>\nFigure 3: Illustration to Constructions 2 & 3. Part (a) shows an exemplary directed graph which is a yes-instance for DHP. Applying Construction 2 on (a) yields (b). Applying Construction 3 on (b) yields the instance whose graph is depicted in (c) and two habitats of which are depicted in (d) and (e). Vertices marked yellow in (d) are contained in the habitat Xout. Vertices marked red in (e) are contained in the habitat Yout. The graph induced by Yout contains the red edges.\n(\u21d0) Let F be a solution to I. Due to Observation 9, we know that F \u2032 \u2286F, and hence for F \u2032\u2032 := F \\F \u2032 we have |F \u2032\u2032| \u2264k\u2212(6(n\u22121)) = n\u22121. By definition of Xout and Xin, we know that in G[F], every vout is adjacent to at least one win, and every vin is adjacent to at least one wout. Thus, in the graph P := (W, E\u2217) with E\u2217= {(v, w) | (vout, win) \u2208F \u2032\u2032}, every vertex has indegree and outdegree one, except for s (indegree zero) and t (outdegree zero). We claim that P is weakly connected. Consider any two vertices v, w \u2208W. By our assumption there exists a v-w path P \u2032 in G[F][Vall]. Note that G[F \u2032][Vall] has n connected components, each of which contains exactly one vertex in W. Hence, P \u2032 contains at least one edge in F \u2032\u2032, and an additional edge in F \u2032\u2032 for each additional vertex in W that is visited by P \u2032. This edge set E(P \u2032) \u2229F \u2032\u2032 corresponds to the edges of an undirected v-w path in P. Hence, P is connected. Together with the above properties of P, it follows that P is a Hamiltonian s-t path.\nosition 11. 1-Reach GBP is solvable in O((n + m)\u03b1(n)) \nProposition 11. 1-Reach GBP is solvable in O((n + m)\u03b1(n)) time if r = 2.\n# Proposition 11. 1-Reach GBP is solvable in O((n + m)\u03b1(n)) time if r = 2.\nProof. Assume that both G[V1] and G[V2] are connected (otherwise, safely return no) and that V1 \u2229V2 \u0338= \u2205(otherwise, a tree spanning over Vi for each i \u2208{1, 2} is a valid, minimumsize solution). We first compute a spanning forest T\u2229within G[V1 \u2229V2], using breadth-first search. Afterwards, for each i \u2208{1, 2}, we run Kruskal\u2019s [27] algorithm to extend the forest T\u2229[Vi] to a spanning tree Ti that spans over the vertices in Vi. Let F := E(T1)\u222aE(T2). We return yes if and only if |F| \u2264k. As each v \u2208Vi is visited at most once, the algorithm runs in O((n + m)\u03b1(n)) time by using the disjoint-set structure [36]. To prove the correctness of the algorithm, we show that F is a minimum-cardinality solution. Since both G[V1] and G[V2] are connected, G[F][Vi] is connected for each i \u2208{1, 2}. It remains to show that F is of minimum cardinality. Consider some minimum-cardinality\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6985/69856e54-696a-4f37-9b8a-8074ce1d0fa4.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 4: Illustration for 2-Reach GBP with (a) r = 2 and \u2206= 4 (k\u2032 = m + (n \u22121) + k and (b) r = 1 (k\u2032 = m + k).</div>\nsolution F \u2032. Let F \u2032 i := E(G[F \u2032][Vi]) for each i \u2208{1, 2}, and let F \u2032 \u2229:= E(G[F \u2032][V1 \u2229V2]). Observe that |E(T\u2229)| \u2265|F \u2032 \u2229| as otherwise there is cycle in G[F \u2032][V1 \u2229V2] contradicting the fact that F \u2032 is of minimum-cardinality. It follows that\n# |F \u2032| = |F \u2032 1| + |F \u2032 2| \u2212|F\u2229| \u2265|V1| \u22121 + |V2| \u22121 \u2212|F\u2229| \u2265|V1| \u22121 + |V2| \u22121 \u2212|E(T\u2229)| = |F|.\n3.3 One hop between habitat patches (d = 2)\n# 3.3 One hop between habitat patches (d = 2)\nIn this section we prove that 2-Reach GBP is already NP-complete even if there are two habitats and the graph has maximum degree four, or if there is only one habitat. Afterwards we show that 2-Reach GBP still admits a problem kernel with respect to k. If the graph is planar, we can show that the kernelization is polynomial in the number of vertices. Proposition 12. d-Reach GBP with d \u22652 is NP-complete even if (i) r = 2 and \u2206\u22644 or (ii) r = 1 and the input graph has diameter 2d.\nProposition 12. d-Reach GBP with d \u22652 is NP-complete even if (i) r = 2 and \u2206\u22644 or (ii) r = 1 and the input graph has diameter 2d.\nFor the sake of presentation, we prove Proposition 12(i) for d = 2. Afterwards, w briefly explain how to adapt the proof for d > 2 and for Proposition 12(ii).\nConstruction 4. Let I = (G, k) be an instance of 3-Regular Vertex Cover with G = (V, E) and V = {1, . . . , n} construct an instance of 2-Reach GBP with graph G\u2032 = (V \u2032, E\u2032), habitat sets V1 and V2, and integer k\u2032 := |E|+(n\u22121)+k as follows (see Figure 4(a) for an illustration). Add the vertex set VE := {ve | e \u2208E} and add ve with e = {i, j} \u2208E to habitat V1. Next, add the vertex sets VG = {vi | i \u2208V }, and connect each vi with all edge-vertices corresponding to an edge incident with i, i.e., add the edge set EG := \ufffd i\u2208V {{vi, ve} | i \u2208e}. Next, add the vertex set VX := {xi | i \u2208V }, connect each xi with vi, and add xi to V1 and to V2. Finally, add the edge set {{xi, xi+1} | i \u2208{1, . . . , n \u22121}}. \u22c4 Observation 13. Let I = (G, k) be an instance of 3-Regular Vertex Cover and let I\u2032 = (G\u2032, {V1, V2}, k\u2032) be the instance obtained from I using Construction 4. If I\u2032 is a yes-instance, then every solution contains all edges in G[VX]. Proof. Suppose not, and let F be a solution without some edge {xi, xi+1}. Note that in G \u2212{{xi, xi+1}}, the distance between xi and xi+1 is at least four; thus G[F]2[VX] = G[F]2[V2] is not be connected. A contradiction.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1d39/1d393bde-47b5-493d-a090-e6d0ad758e66.png\" style=\"width: 50%;\"></div>\n(b)\n\nLemma 14. Let I = (G, k) be an instance of 3-Regular Vertex Cover and let I\u2032 = (G\u2032, f, k\u2032) be the instance obtained from I using Construction 4. If I\u2032 is a yes-instance, then there is a solution F \u2286E(G\u2032) such that degG\u2032[F ](ve) = 1 for all e \u2208E(G). Proof. Clearly, in every solution, we have degG\u2032[F ](ve) \u22651. Let F be a minimum solution with a minimum number of edges incident to vertices in {ve | e \u2208E}. Suppose that there is at least one e = {i, j} \u2208E such that degG\u2032[F ](ve) = 2, that is, {ve, vi}, {ve, vj} \u2208F. Since F is a solution, there is a path P in G\u2032[F] from ve to some xi. Let {ve, vi} be the first edge on this path. Let F \u2032 := (F \\ {ve, vj}) \u222a{vj, xj}. We claim that F \u2032 is a solution, yielding a contradiction to the fact that F is a solution with a minimum number of edges incident with vertices in VE. Only a vertex ve\u2032 can be disconnected from any VX by removing {ve, vj} from F. This vertex cannot be on the path P, and hence is connected to ve via edge {ve, vj}. Since now edge {vj, xj} is present, ve\u2032 is again connected to VX. Lemma 15. Let I = (G, k) be an instance of 3-Regular Vertex Cover and let I\u2032 = (G\u2032, {V1, V2}, k\u2032) be the instance obtained from I using Construction 4. Then I is a yesinstance if and only if I\u2032 is a yes-instance. Proof. (\u21d2) Let S \u2286V be a vertex cover of size k in G. We construct a solution F \u2286E\u2032 as follows. Let FX = \ufffdn\u22121 i=1 {{xi, xi+1}} and FV := {{vi, xi} | i \u2208S}. We define the auxiliary function g: E \u2192V \u2032 with g({i, j}) = vmin({i,j}\u2229S). Let FE := \ufffd e={i,j}\u2208E{ve, g(e)}. Let F := FX \u222aFV \u222aFE. Note that |F| = |FX| + |FV | + |FE| \u2264|E| + (n \u22121) + k = k\u2032. Moreover, every ve \u2208VE is connected to xi via a path (ve, vi, xi), where i \u2208(e\u2229S). Finally, observe that G\u2032[F][VX] is connected. (\u21d0) Let I\u2032 be a yes-instance. Due to Lemma 14 there is a solution F \u2286E\u2032 such that degG\u2032[F ](ve) = 1 for all e \u2208E. Due to Observation 13, we know that the edges \ufffdn\u22121 i=1 {{xi, xi+1}} \u2286F. Let S := {i \u2208V | {vi, xi} \u2208F}. We claim that S is a vertex cover. Suppose not, that is, there is an edge e \u2208E such that e \u2229S = \u2205. That means that the unique neighbor of ve, say vi, is not adjacent with xi in G\u2032[F]. Since degG\u2032[F ](ve) = 1 for all e \u2208E, NG\u2032[F ][vi] forms a connected component in G\u2032[F]2 not containing xi. This contradicts the fact that F is a solution. Remark. (i) To make the reduction work for d \u22653, it is enough to subdivide each edge {ve, vi} (d \u22122) times and set k\u2032 := (d \u22121)m + (n \u22121) + k. (ii) If we contract all xi, set V2 = \u2205(i.e., only one habitat remains), and set k\u2032 := (d \u22121)m + k, then the reduction is still valid (see Figure 4(b) for an illustration). Thus, Proposition 12(ii) follows. The reduction in the proof of Proposition 12 requires k to be linear in the input instance\u2019s size. We next prove that, indeed, 2-Reach GBP is fixed-parameter tractable with respect to k by showing that it admits a problem kernel of size exponential in k. Proposition 16. 2-Reach GBP admits a problem kernel with at most 2k + \ufffd2k k \ufffd vertices, at most \ufffd2k 2 \ufffd + k \ufffd2k k \ufffd edges, and at most 22k habitats. Let \u00afV := V \\ \ufffd V \u2032\u2208H V \u2032 for a graph G = (V, E) and habitat set H = {V1, . . . , Vr}. The following reduction rules are immediate. Reduction Rule 1. (i) If |Vi| = 1 for some i, delete Vi. (ii) If a vertex in \u00afV is of degree at most one, delete it. (iii) If there is an i \u2208{1, . . . , r} with |Vi| > 1 and an v \u2208Vi of degree zero, return a trivial no-instance. (iv) If there is a vertex v \u2208V \\ \u00afV of degree at most one, delete it (also from V1, . . . , Vr), and set k := k \u22121.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/6883/6883c5fe-91ca-46a4-ba2b-08fe728897b0.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 5: Illustration for the construction in the proof of Proposition 17 for 2-Reach GBP with r = 1. In this example, U = {u1, . . . , un} and we have {u1, ui, uj, un} = F \u2208F.</div>\nFigure 5: Illustration for the construction in the proof of Proposition 17 for 2-Reach GBP with r = 1. In this example, U = {u1, . . . , un} and we have {u1, ui, uj, un} = F \u2208F. Clearly, k edges can connect at most 2k vertices; thus we obtain the following. Reduction Rule 2. If |V \\ \u00afV | > 2k, then return a trivial no-instance. So we have at most 2k vertices in habitats. Next, we upper-bound the number of non-habitat vertices. No minimal solution has edges between two such vertices. Reduction Rule 3. If there is an edge e \u2208E with e \u2286\u00afV , then delete e. Moreover, no minimum solution connects through non-habitat twins. Reduction Rule 4. If N(v) \u2286N(w) for distinct v, w \u2208\u00afV , then delete v. We still need to bound the number of vertices in \u00afV . For an n-element set S let F \u22862S be a family of subsets such that for every A, B \u2208F we have A \u0338\u2286B. Then |F| \u2264 \ufffd n \u230an/2\u230b \ufffd by Sperner\u2019s Theorem. Hence, after applying the reduction rules, we get an instance with at most 2k + \ufffd2k k \ufffd vertices and \ufffd2k 2 \ufffd + 2k \ufffd2k k \ufffd edges. Finally, we can upper-bound the number of habitats by simply deleting duplicates. Reduction Rule 5. If Vi = Vj for distinct i, j \u2208{1, . . . , r}, then delete Vj. It follows that we can safely assume that r \u226422k. Thus, Proposition 16 follows. Unfortunately, improving the problem kernel to polynomial-size is unlikely. Proposition 17. Unless NP \u2286coNP / poly, d-Reach GBP for d \u22652 admits no problem kernel of size kO(1), even if r \u22651 is constant. We will give a linear parametric transformation from the following problem: Problem 5. Set Cover (SC) Input: A universe U, a set F \u22862U of subsets of U, and an integer k. Question: Is there F\u2032 \u2282F with |F\u2032| \u2264k such that \ufffd F \u2208F\u2032 F = U? The construction is basically the same as for Proposition 12(ii). Note that Set Cover admits no problem kernel of size polynomial in |U| + k, unless NP \u2286coNP / poly [12]. Proof. Let I = (U, F, k) be an instance of Set Cover, with U = {u1, . . . , un}. Construct an instance I\u2032 := (G, V1, k\u2032) of 2-Reach GBP with k\u2032 = |U| + k as follows (see Figure 5).\nFigure 5: Illustration for the construction in the proof of Proposition 17 for 2-Reach GBP with r = 1. In this example, U = {u1, . . . , un} and we have {u1, ui, uj, un} = F \u2208F. Clearly, k edges can connect at most 2k vertices; thus we obtain the following. Reduction Rule 2. If |V \\ \u00afV | > 2k, then return a trivial no-instance. So we have at most 2k vertices in habitats. Next, we upper-bound the number of non-habitat vertices. No minimal solution has edges between two such vertices. Reduction Rule 3. If there is an edge e \u2208E with e \u2286\u00afV , then delete e. Moreover, no minimum solution connects through non-habitat twins. Reduction Rule 4. If N(v) \u2286N(w) for distinct v, w \u2208\u00afV , then delete v. We still need to bound the number of vertices in \u00afV . For an n-element set S let F \u22862S be a family of subsets such that for every A, B \u2208F we have A \u0338\u2286B. Then |F| \u2264 \ufffd n \u230an/2\u230b \ufffd by Sperner\u2019s Theorem. Hence, after applying the reduction rules, we get an instance with at most 2k + \ufffd2k k \ufffd vertices and \ufffd2k 2 \ufffd + 2k \ufffd2k k \ufffd edges. Finally, we can upper-bound the number of habitats by simply deleting duplicates. Reduction Rule 5. If Vi = Vj for distinct i, j \u2208{1, . . . , r}, then delete Vj. It follows that we can safely assume that r \u226422k. Thus, Proposition 16 follows. Unfortunately, improving the problem kernel to polynomial-size is unlikely. Proposition 17. Unless NP \u2286coNP / poly, d-Reach GBP for d \u22652 admits no problem kernel of size kO(1), even if r \u22651 is constant. We will give a linear parametric transformation from the following problem: Problem 5. Set Cover (SC) Input: A universe U, a set F \u22862U of subsets of U, and an integer k. Question: Is there F\u2032 \u2282F with |F\u2032| \u2264k such that \ufffd F \u2208F\u2032 F = U? The construction is basically the same as for Proposition 12(ii). Note that Set Cover admits no problem kernel of size polynomial in |U| + k, unless NP \u2286coNP / poly [12]. Proof. Let I = (U, F, k) be an instance of Set Cover, with U = {u1, . . . , un}. Construct an instance I\u2032 := (G, V1, k\u2032) of 2-Reach GBP with k\u2032 = |U| + k as follows (see Figure 5). Let G be initially empty. Add the vertex set VU := U, the vertex set VF := {vF | F \u2208F}, and the vertex x. Set V1 := VU \u222a{x}. Make each vertex in VF adjacent with x. Finally, for each F \u2208F, add the edge set {{vi, vF } | ui \u2208F}.\nProblem 5. Set Cover (SC) Input: A universe U, a set F \u22862U of subsets of U, and an integer k. Question: Is there F\u2032 \u2282F with |F\u2032| \u2264k such that \ufffd F \u2208F\u2032 F = U?\nThe construction is basically the same as for Proposition 12(ii). Note that Set Cover admits no problem kernel of size polynomial in |U| + k, unless NP \u2286coNP / poly [12].\nThe construction is basically the same as for Proposition 12(ii). Note that Set Cover admits no problem kernel of size polynomial in |U| + k, unless NP \u2286coNP / poly [12]. Proof. Let I = (U, F, k) be an instance of Set Cover, with U = {u1, . . . , un}. Construct an instance I\u2032 := (G, V1, k\u2032) of 2-Reach GBP with k\u2032 = |U| + k as follows (see Figure 5). Let G be initially empty. Add the vertex set VU := U, the vertex set VF := {vF | F \u2208F}, and the vertex x. Set V1 := VU \u222a{x}. Make each vertex in VF adjacent with x. Finally, for each F \u2208F, add the edge set {{vi, vF } | ui \u2208F}.\nThe proof that I is a yes-instance if and only if I\u2032 is a yes-instance is analogous with the correctness proof for Proposition 12(ii). Since Set Cover admits no problem kernel of size polynomial in |U|+k, unless NP \u2286 coNP / poly [12], neither does 2-Reach GBP when parameterized by k\u2032 = |U| + k. Proposition 17 holds for general graphs. In fact, for planar graphs, the above reduction rules allow for an O(k3)-vertex kernel. The number of habitats in the kernel however may still be exponential in k. Proposition 18. 2-Reach GBP on planar graphs admits a problem kernel with O(k3) vertices and edges and at most 22k habitats. Observation 19. Suppose all reduction rules were applied exhaustively. Then (i) there are at most \ufffd2k 2 \ufffd vertices of degree two in \u00afV , and (ii) there are at most 3 \ufffd2k 3 \ufffd vertices of degree at least three in \u00afV . Proof. (i) By Reduction Rules 2 to 4, every degree-two vertex in \u00afV has a pairwise different pair of neighbors in V \\ \u00afV . As there are \ufffd2k 2 \ufffd (unordered) vertex pairs in V \\ \u00afV , there are at most \ufffd2k 2 \ufffd degree-two vertices in \u00afV , otherwise one of the reduction rules was not applied exhaustively. (ii) Any three vertices u, v, w in a planar graph share at most two neighbors, that is, |N(u) \u2229N(v) \u2229N(w)| \u22642. Suppose there are more than 3 \ufffd2k 3 \ufffd vertices in \u00afV of degree at least three. Then, by Reduction Rules 2 to 4, there are three vertices u, v, w \u2208\u00afV such that |N(u) \u2229N(v) \u2229N(w)| \u22653, a contradiction to G being planar.  \u00af\n(i) there are at most \ufffd2k 2 \ufffd vertices of degree two in \u00afV , and (ii) there are at most 3 \ufffd2k 3 \ufffd vertices of degree at least three in \u00afV . Proof. (i) By Reduction Rules 2 to 4, every degree-two vertex in \u00afV has a pairwise different pair of neighbors in V \\ \u00afV . As there are \ufffd2k 2 \ufffd (unordered) vertex pairs in V \\ \u00afV , there are at most \ufffd2k 2 \ufffd degree-two vertices in \u00afV , otherwise one of the reduction rules was not applied exhaustively. (ii) Any three vertices u, v, w in a planar graph share at most two neighbors, that is, |N(u) \u2229N(v) \u2229N(w)| \u22642. Suppose there are more than 3 \ufffd2k 3 \ufffd vertices in \u00afV of degree at least three. Then, by Reduction Rules 2 to 4, there are three vertices u, v, w \u2208\u00afV such that |N(u) \u2229N(v) \u2229N(w)| \u22653, a contradiction to G being planar.  \u00af\nProof. (i) By Reduction Rules 2 to 4, every degree-two vertex in \u00afV has a pairwise different pair of neighbors in V \\ \u00afV . As there are \ufffd2k 2 \ufffd (unordered) vertex pairs in V \\ \u00afV , there are at most \ufffd2k 2 \ufffd degree-two vertices in \u00afV , otherwise one of the reduction rules was not applied exhaustively. (ii) Any three vertices u, v, w in a planar graph share at most two neighbors, that is, |N(u) \u2229N(v) \u2229N(w)| \u22642. Suppose there are more than 3 \ufffd2k 3 \ufffd vertices in \u00afV of degree at least three. Then, by Reduction Rules 2 to 4, there are three vertices u, v, w \u2208\u00afV such that |N(u) \u2229N(v) \u2229N(w)| \u22653, a contradiction to G being planar.\n# 4 At least two hops between habitat patches (\nIf the data is more sparse, that is, the observed habitats to connect are rather scattered, then the problem becomes significantly harder to solve from the parameterized complexity\nIf the data is more sparse, that is, the observed habitats to connect are rather scattered, then the problem becomes significantly harder to solve from the parameterized complexity point of view.\nProposition 20. d-Reach GBP with d \u22653 is NP-complete and W[1]-hard when parameterized by k + r.\nWe give the construction for d being odd. Afterwards, we explain how to adapt the reduction to d being even. The reduction is from the Multicolored Clique problem, where, given a k-partite graph G = (U 1, . . . , U k, E), the question is whether there is a clique containing exactly one vertex from each part. Multicolored Clique is NP-hard and W[1]-hard when parameterized by k.\nConstruction 5. Let (G) with G = (U 1, . . . , U k, E) be an instance of Multicolored Clique where G[U i] forms an independent set for every i \u2208{1, . . . , k}. Assume without loss of generality that U i = {ui 1, . . . , ui |V i|}. Let k\u2032 := (d\u22121) 2 k + \ufffdk 2 \ufffd . Construct the instance (G\u2032, {V1, . . . , V(k 2)}, k\u2032) as follows (see Figure 6 for an illustration). Let g: \ufffd{1,...,k} 2 \ufffd \u2192{1, . . . , \ufffdk 2 \ufffd } be a bijective function. Let G\u2032 be initially G. For each i \u2208{1, . . . , k}, add a vertex vi to G\u2032, add vi to each habitat V\u2113with i \u2208g\u22121(\u2113), and connect vi with ui j for each j \u2208{1, . . . , ui |Ui|} via a path with d\u22121 2 edges, where vi and uj i are the endpoints of the path. \u22c4\n\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/1fee/1feeb415-4cfb-470e-8aa8-b0ae5b2e4823.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 6: Illustration to Construction 5 for d-Reach GBP for d \u22653.</div>\nRemark. For every even d \u22654, we can adapt the reduction for d \u22121: At the end of the construction, subdivide each edge between two vertices that are in the original graph G. Observation 21. In the obtained instance, for every \u2113\u2208{1, . . . , \ufffdk 2 \ufffd }, it holds that, V\u2113= {vi, vj} where {i, j} = g\u22121(\u2113), and for every i, j \u2208{1, . . . , k}, i \u0338= j, it holds that {\u2113\u2032 | {vi, vj} \u2286V\u2113\u2032} = {\u2113} with \u2113= g({i, j}). Observation 22. If the obtained instance is a yes-instance, then in every minimal solution F, for every i \u2208{1, . . . , k} there is exactly one ui j in G[F]. Proof. Note that each vi must be connected with at least one vertex from U i in G\u2032[F]. Thus, |V (G\u2032[F]) \u2229U i| \u22651. Moreover, from each i, j \u2208{1, . . . , k}, i \u0338= j, F must contain an edge between U i and U j, since distG\u2032(vi, u) + distG\u2032(vj, u\u2032) \u2265d \u22121 for every u \u2208U i, u\u2032 \u2208U j. Since additionally k\u2032 = (d\u22121) 2 k + \ufffdk 2 \ufffd , it follows that vi cannot be connected with two vertices from U i in G\u2032[F][U i \u222a{vi}]. Hence, if there are two vertices u, u\u2032 \u2208U i \u2229F, with u being connected to vi in G\u2032[F][U i\u222a{vi}], then u\u2032 is not part of an va-vb path in G\u2032[F] of length at most d for every a, b \u2208{1, . . . , k}. It follows that F is not minimal. Lemma 23. Let I = (G) with G = (U 1, . . . , U k, E) be an instance of Multicolored Clique and let I\u2032 = (G\u2032, H, k\u2032) be the instance obtained from I using Construction 5. Then I is a yes-instance if and only if I\u2032 is a yes-instance. Proof. (\u21d2) Let W \u2286V (G) be a multicolored clique. Let F contain \ufffdW 2 \ufffd and all edges of a path from vi to U i \u2229W. We claim that F is a solution. Note that |F| = \ufffdk 2 \ufffd + k d\u22121 2 . Since V\u2113is of size two for all \u2113\u2208{1, . . . , \ufffdk 2 \ufffd } (Observation 21), we only need to show that vi, vj with {i, j} = g\u22121(\u2113) is connected by a path of length at most d. We know that vi is connected to some ui x by a path of length (d\u22121)/2, which is adjacent to some uj y, which is connected to vj by a path of length (d \u22121)/2. Thus, vi and vj are of distance d. (\u21d0) Let F be a solution. Note that |F| = \ufffdk 2 \ufffd + k d\u22121 2 . We claim that W := V (G\u2032[F]) \u2229V (G) is a multicolored clique. First, observe that |W| = k since for every vi there is exactly one ui \u2113i in G\u2032[F] (Observation 22). Suppose that W is not a multicolored clique, that is, there are U i and U j such that there is no edge in F between them. Then vi and vj are of distance larger than d in G\u2032[F], contradicting that F is a solution.\n# 4 Connecting Habitats at Short Pairwise Distance\nIn the next problem, we require short pairwise reachability.\nProblem 6. d-Closed Green Bridges Placement (d-Closed GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286V for all i \u2208{1, . . . , r}, and k \u2208N0. Question: Is there a subset F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r} it holds that Vi \u2286V (G[F]) and G[F]d[Vi] is a clique? Note that if G[F]d[Vi] is a clique, then distG[F ](v, w) \u2264d for all v, w \u2208Vi. Further, 2-Closed GBP is an unweighted variant of the 2NET problem [9]. Theorem 2. d-Closed Green Bridges Placement is, (i) if d = 1, linear-time solvable; (ii) if d = 2, NP-hard even on bipartite graphs of diameter three and r = 1, and in FPT regarding k; (iii) if d \u22653, NP-hard and W[1]-hard regarding k even if r = 1. Further, d-Closed GBP is linear-time solvable if the number of habitats and the maximum degree are constant. We first show the linear-time solvability for constant number of habitats and maximum degree. Afterwards we present the results in (i)-(iii).\nProblem 6. d-Closed Green Bridges Placement (d-Closed GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286 for all i \u2208{1, . . . , r}, and k \u2208N0. Question: Is there a subset F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r} it hold that Vi \u2286V (G[F]) and G[F]d[Vi] is a clique?\n# 4.1 Graphs of constant maximum degree\n2-Reach GBP is NP-hard if the number r of habitats and the maximum degree \u2206ar constant (Proposition 12). 2-Closed GBP is linear-time solvable in this case:\nProposition 24. d-Closed GBP admits an O(r\u2206(\u2206\u22121)3d/2)-sized problem kernel computable in O(r(n + m)) time.\nProof. Let I = (G, H, k) be an instance of d-Closed GBP. For every i \u2208{1, . . . , r}, fix a vertex ui \u2208Vi. We assume that we have Vi \u2286N d G[ui] for all i \u2208{1, . . . , r}, otherwise I is a no-instance. Now let Wi = N \u23083d/2\u2309 G [ui] and let G\u2032 := G[\ufffdr i=1 Wi]. Note that G\u2032 contains at most r\u2206(\u2206\u22121)\u23083d/2\u2309vertices and can be computed by r breadth-first searches. We claim that G\u2032 contains every path of length at most d between every two vertices v, w \u2208Vi, for every i \u2208{1, . . . , r}. Recall that an edge set F \u2286E is a solution if and only if for every i \u2208{1, . . . , r} and for every v, w \u2208Vi, the graph G[F] contains a path of length at most d from v to w. As by our claim G\u2032 contains any such path, this implies that I is a yes-instance if and only if I\u2032 := (G\u2032, H, k) is a yes-instance (note that Vi \u2286V (G\u2032) for every i \u2208{1, . . . , r}). Assuming that Vi \u2286N d G[ui], G[Wi] contains all paths of length at most d between ui and any v \u2208Vi. So let v, w \u2208Vi be two vertices, both distinct from ui. As v, w \u2208N d G[ui] and Wi = N \u23083d/2\u2309 G [ui], the subgraph G[Wi] contains all vertices in N \u2308d/2\u2309 G [v] and N \u2308d/2\u2309 G [w]. Consider now a path of length at most d between v and w. Suppose it contains a vertex x \u2208 V (G)\\(N \u2308d/2\u2309 G [v]\u222aN \u2308d/2\u2309 G [w]). Then distG(v, x)+distG(w, x) > 2\u2308d/2\u2309\u2265d, a contradiction to x being on a path from v to w of length at most d. The claim follows.\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/9776/9776ebd6-3da2-4077-9b95-e17fcba1b58e.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">igure 7: Illustration to Construction 6 for 2-Closed GBP.</div>\n# When every habitat must be complete (d = 1)\nFor d = 1, the problem is solvable in linear time: Check whether each habitat induces a clique. If so, check if the union of the cliques is small enough.\nFor d = 1, the problem is solvable in linear time: Check whether each habitat induces a clique. If so, check if the union of the cliques is small enough. Observation 25. 1-Closed GBP is solvable in linear time.\nProof. We employ the following algorithm: For each i \u2208{1, . . . , r}, let Gi := G[Vi] and return no if Gi is not a clique. Finally, return yes if | \ufffdr i=1 E(Gi)| \u2264k, and no otherwise. Clearly, if the algorithm returns yes, then I is yes-instance. Conversely, let I be a yes-instance and let F \u2032 be a solution to I. We know that for every i \u2208{1, . . . , r}, and any two vertices v, w \u2208Vi, edge {v, w} must be in F \u2032. It follows that \ufffdr i=1 E(Gi) \u2286F \u2032. Thus, | \ufffdr i=1 E(Gi)| \u2264|F \u2032| \u2264k and the algorithm correctly returns yes.\n# When each part is just two steps away (d = 2)\nFor d = 2, d-Closed GBP becomes NP-hard already on quite restrictive inputs. It is however, as we show at the end of this section, still fixed-parameter tractable when parameterized by k.\nProposition 26. 2-Closed GBP is NP-complete, even if r = 1 and the input graph is bipartite and of diameter three.\nConstruction 6. Let I = (G, k) with G = (V, E) be an instance of Vertex Cover, and assume without loss of generality that V = {1, . . . , n}. Construct an instance of 2Closed GBP with graph G\u2032 = (V \u2032, E\u2032), habitat V1, and integer k\u2032 := 2|E| + k + 3 as follows (see Figure 7 for an illustration). To construct G\u2032 and V1, add the vertex set VE := {ve | e \u2208E} and add VE to V1. Add two designated vertices y\u2032 and y, add y to V1, and make y\u2032 adjacent with y and all vertices in VE. Add a designated vertex x, add x to V1, and introduce a path of length two from x to y (call the inner vertex z). Add the vertex set VG := {vi | i \u2208V }, and make each vi adjacent with x and all edge-vertices corresponding to an edge incident with i, i.e., add the edge set EG := \ufffd i\u2208V {{vi, ve} | i \u2208e}. \u22c4 Observation 27. Let I\u2032 = (G\u2032, {V1}, k\u2032) be an instance obtained from application of Construction 6 on an instance I = (G, k) of Vertex Cover. If I\u2032 is a yes-instance, then for every solution F \u2286E(G\u2032) we have {{y, y\u2032}, {y, z}, {z, x}} \u222a{{y\u2032, ve} | e \u2208E(G)} \u2286F.\nLemma 28. Let I = (G, k) be an instance of Vertex Cover. Consider the instance I\u2032 = (G\u2032, {V1}, k\u2032) obtained from I using Construction 6. If I\u2032 is a yes-instance, then there is a solution F \u2286E(G\u2032) such that |NG\u2032[F ](ve) \u2229VG| = 1 for all e \u2208E(G). Proof. Note that in every solution, clearly we have |NG\u2032[F ](ve) \u2229VG| \u22651. Suppose there is a minimal solution F such that there is at least one e = {i, j} \u2208E such that |NG\u2032[F ](ve) \u2229 VG| = 2. Let F be a solution with a minimum number of edges incident to vertices in VE. Since distG\u2032[F ](ve, x) = 2, at least one of the edges {vi, xi} or {vj, xj} are in F. If both are present then we can remove one of the edges {ve, vi} or {ve, vj} incident with ve to obtain a solution of smaller size. This yields a contradiction. Otherwise, assume there is exactly one edge, say {ve, vi}, contained in F. Then exchanging {ve, vj} with {vj, x} yields a solution with a lower number of edges incident to vertices in VE. A contradiction.\nLemma 29. Let I = (G, k) be an instance of Vertex Cover. Consider the instance I\u2032 = (G\u2032, {V1}, k\u2032) obtained from I using Construction 6. Then I is a yes-instance if and only if I\u2032 is a yes-instance.\nif I\u2032 is a yes-instance. Proof. (\u21d2) Let W \u2286V be a vertex cover of size at most k in G. We construct a solution F \u2286E\u2032 as follows. Let F \u2032 denote the set of all edges required due to Observation 27. Let FV := {{vi, x} | i \u2208W}. We define the auxiliary function g: E \u2192V \u2032 with g({i, j}) = vmin({i,j}\u2229W ). Let FE := \ufffd e={i,j}\u2208E{ve, g(e)}. Let F := F \u2032 \u222aFV \u222aFE. Note that |F| = |F \u2032| + |FV | + |FE| \u2264|E| + 3 + |E| + k = k\u2032. Moreover, every ve \u2208V \u2032 is connected to x via a path (ve, vi, z), for some i \u2208(e \u2229W), of length two. Thus all vertex pairs in V1 are at distance at most two. (\u21d0) Let I\u2032 be a yes-instance. Due to Lemma 28, there is a solution F \u2286E\u2032 such that degG\u2032[F ](ve) = 1 for all e \u2208E. Let W := {i \u2208V | {vi, x} \u2208F}. We claim that W is a vertex cover. Suppose not, that is, there is an edge e \u2208E such that e \u2229W = \u2205. That means that the unique neighbor of ve, say vi, is not adjacent with x in G\u2032[F]. Then, ve is not connected with x in G\u2032[F]2, and hence F is no solution, a contradiction. We next show fixed-parameter tractability when parameterizing by k. All the reduction rules that worked for 2-Reach GBP also work for 2-Closed GBP. It thus follows that 2Closed GBP admits a problem kernel of size exponentially in k. As with 2-Reach GBP, the problem kernel presumably cannot be much improved. This can be shown by combining\nProof. (\u21d2) Let W \u2286V be a vertex cover of size at most k in G. We construct a solution F \u2286E\u2032 as follows. Let F \u2032 denote the set of all edges required due to Observation 27. Let FV := {{vi, x} | i \u2208W}. We define the auxiliary function g: E \u2192V \u2032 with g({i, j}) = vmin({i,j}\u2229W ). Let FE := \ufffd e={i,j}\u2208E{ve, g(e)}. Let F := F \u2032 \u222aFV \u222aFE. Note that |F| = |F \u2032| + |FV | + |FE| \u2264|E| + 3 + |E| + k = k\u2032. Moreover, every ve \u2208V \u2032 is connected to x via a path (ve, vi, z), for some i \u2208(e \u2229W), of length two. Thus all vertex pairs in V1 are at distance at most two. (\u21d0) Let I\u2032 be a yes-instance. Due to Lemma 28, there is a solution F \u2286E\u2032 such that degG\u2032[F ](ve) = 1 for all e \u2208E. Let W := {i \u2208V | {vi, x} \u2208F}. We claim that W is a vertex cover. Suppose not, that is, there is an edge e \u2208E such that e \u2229W = \u2205. That means that the unique neighbor of ve, say vi, is not adjacent with x in G\u2032[F]. Then, ve is not connected with x in G\u2032[F]2, and hence F is no solution, a contradiction.\nWe next show fixed-parameter tractability when parameterizing by k. All the reduction rules that worked for 2-Reach GBP also work for 2-Closed GBP. It thus follows that 2Closed GBP admits a problem kernel of size exponentially in k. As with 2-Reach GBP, the problem kernel presumably cannot be much improved. This can be shown by combining the constructions of Propositions 17 & 26.\nCorollary 3. 2-Closed GBP admits a problem kernel of size exponentially in k an unless NP \u2286coNP / poly, none of size polynomial in k, even if r = 1.\n# 4.4 When reaching each part is a voyage (d \u22653)\nFor d \u22653, the problem is W[1]-hard regarding the number k of green bridges, even for one habitat. The reduction is similar to the one for Proposition 20.\nProposition 30. d-Closed GBP with d \u22653 is NP-complete and W[1]-hard when parameterized by the number k, even if r = 1. Proof. Let I = (G) with G = (U 1, . . . , U k, E) be an instance of Multicolored Clique. Apply Construction 5 to obtain instance I\u2032\u2032 = (G\u2032, {V1, . . . , V(k 2)}, k\u2032) (recall that k\u2032 = d\u22121 2 k + \ufffdk 2 \ufffd ). Let I\u2032 = (G\u2032, {V \u2032 1}, k\u2032) with V \u2032 1 := \ufffd(k 2) i=1 Vi = {v1, . . . , vk} be the finally\nobtained instance of d-Closed GBP. We claim that I is a yes-instance if and only if I\u2032 is a yes-instance. (\u21d2) Let C be a multicolored clique in G. Let zi := V (C) \u2229U i. We claim that F, consisting of the edges of each shortest path from vi to zi and the edge set E(C), is a solution to I\u2032. Note that |F| = k\u2032. Moreover, for any two i, j \u2208{1, . . . , k}, we have that vi and vj are of distance 2d\u22121 2 + 1 = d. Hence, F is a solution. (\u21d0) Let F be a solution to I. Since F must contain a path from vi to some zi \u2208U i for every i \u2208{1, . . . , k}, there are at most \ufffdk 2 \ufffd edges left to connect. Let Z := {z1, . . . , zk} be the vertices such that vi is connected with zi in G[F][U i]. As d \u2265distG\u2032[F ](vi, vj) = distG\u2032[F ](vi, zi) + distG\u2032[F ](zi, zj) + distG\u2032[F ](zj, vj) and d \u22121 = distG\u2032[F ](vi, zi) + distG\u2032[F ](zj, vj), it follows that distG\u2032[F ](zi, zj) = 1. Thus, G[Z] forms a multicolored clique.\n# 5 Connecting Habitats at Small Diameter\nLastly, we consider requiring short pairwise reachability in 1-Reach GBP.\nProblem 7. d-Diamater Green Bridges Placement (d-Diam GBP) Input: An undirected graph G = (V, E), a set H = {V1, . . . , Vr} of habitats where Vi \u2286V for all i \u2208{1, . . . , r}, and an integer k \u2208N0. Question: Is there a subset F \u2286E with |F| \u2264k such that for every i \u2208{1, . . . , r} it holds that Vi \u2286V (G[F]) and G[F][Vi] has diameter d? In particular, G[F][Vi] is required to be connected. Note that 1-Reach GBP reduces to Diam GBP (where d is part of the input and then set to the number of vertices in the input instance\u2019s graph). We have the following. Theorem 4. d-Diam GBP is, (i) if d = 1, solvable in linear time; (ii) if d = 2, NP-hard even if r = 1. Moreover, d-Diam GBP admits a problem kernel with at most 2k vertices and at most 22k habitats. 1-Diam GBP is equivalent to 1-Closed GBP, which is linear-time solvable as observed in Observation 25. Thus, Theorem 4(i) follows. Applying Reduction Rules 2 & 5 and deleting all non-habitat vertices yields the problem kernel. At the end of this section we show that 2-Diam GBP most likely does not admit a polynomial kernel with respect to k. We now show that 2-Diam GBP is NP-hard even if there is only one habitat. Proposition 31. 2-Diam GBP is NP-hard even if r = 1. Construction 7. Let I = (G, k) with G = (V, E) be an instance of Vertex Cover and assume without loss of generality that V = {1, . . . , n} and E = {e1, . . . , em}. Construct an instance I\u2032 := (G\u2032, {V1}, k\u2032) with k\u2032 := 3m + 2n + 12 + k as follows (see Figure 8 for an illustration). Add the vertex sets VE := {ve | e \u2208E} and VG = {vi | i \u2208V }, as well as the vertex set VA := {x} \u222a{yi | i \u2208{1, 2, 3}} \u222a{zi | i \u2208{1, . . . , 4}}. Add all vertices to V1. Next, for each e = {i, j} \u2208E, connect ve with vi, vj, y1, and z3. For each i \u2208V , connect vi with x, y1, and y3. Lastly, add the edge set E\u2217:= \ufffd {y1, y2}, {y2, y3}, {y1, z1}, {y1, z2}, {y3, z3}, {y3, z4}, {y3, x},\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/c632/c63264b5-9288-4717-9d2a-f710a7a5d138.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">Figure 8: Illustration for 2-Diam GBP with r = 1.</div>\nto E\u2032. Let E1 V := {{y1, vi} | i \u2208V }, E3 V := {{y3, vi} | i \u2208V }, E1 E := {{y1, ve} | e \u2208E}, and E3 E := {{z3, ve} | e \u2208E}. \u22c4 Observation 32. Let I\u2032 be the instance obtained from applying Construction 7 to some instance I. If I\u2032 is a yes-instance, then every solution F for I\u2032 contains the edge set F \u2032 := E\u2217\u222aE1 V \u222aE3 V \u222aE1 E \u222aE3 E. Proof. Let I\u2032 be a yes-instance and let F be a solution. Note that in G\u2032 \u2212{y1}, there is no path of length at most two from any vertex in VE \u222aVG to z1. Hence, E1 V \u222aE1 E \u2286F. In G\u2032 \u2212{y3}, there is no path of length at most two from any vertex in VG \u222a{x} to z4. Hence, E3 V \u2286F. In G\u2032 \u2212{z3}, there is no path of length at most two from any vertex in VE to z4. Hence, E3 E \u2286F. In G\u2032 \u2212{z2}, there is no path of length at most two from x to z1. Lastly, it is not difficult to see that every edge in E\u2217must be in F.\nLemma 33. Let I\u2032 be the instance obtained from applying Construction 7 to some instance I. Then, I is a yes-instance if and only if I\u2032 is a yes-instance.\nstance I. Then, I is a yes-instance if and only if I is a yes-instance. Proof. (\u21d2) Let S \u2286V be a vertex cover of size k. Let F \u2032 denote the set of all edges required to be in a solution due to Observation 32. Let FV := {{vi, x} | i \u2208S}. We define the auxiliary function g: E \u2192VG with g({i, j}) = vmin({i,j}\u2229S). Let FE := \ufffd e\u2208E{{ve, g(e)}}. Let F := F \u2032 \u222aFV \u222aFE. Note that |F| = |F \u2032| + |FV | + |FE| \u2264(2m + 2n + 12) + k + m = k\u2032. Next consider G\u2032[F][V1]. Observe that distG\u2032[F ][V1](v, w) \u22642 for every vertices v \u2208VG \u222aVE \u222aVA and w \u2208VA \\ {x}, for every vertices v, w \u2208VG, for every vertices v, w \u2208VE, and for every vertices v \u2208VG and w = {x}. We claim that for all e \u2208E, distG\u2032[F ][V1](x, ve) = 2. By construction, distG\u2032[F ][V1](x, ve) > 1. Suppose that there is ve with e = {i, j} and distG\u2032[F ][V1](x, ve) > 2. Then there is no path (x, v, ve) with v \u2208{vi, vj}. Then {i, j} \u2229S = \u2205, contradicting the fact that S is a vertex cover. (\u21d0) Let F be a solution to I\u2032. Let F \u2032 be the set of edges mentioned in Observation 32; so F \u2032 \u2286F. Note that |F \u2032| = 2m + 2n + 12. Observe that in G\u2032 \u2212VG, the distance of x to\n<div style=\"text-align: center;\"><img src=\"https://public-pdf-extract-kit.oss-cn-shanghai.aliyuncs.com/a8f3/a8f3cc70-813f-4ef2-ad0c-7f61dfb5e421.png\" style=\"width: 50%;\"></div>\n<div style=\"text-align: center;\">igure 9: Illustration for 2-Diam GBP. Here, V q denotes al</div>\nany ve \u2208VE is larger than two. Hence, for each ve, there is a path (ve, v, x) in G\u2032[F][V1] with v \u2208VG. We claim that S := {i \u2208V | {vi, x} \u2208F} is a vertex cover for G of size at most k. Suppose not, that is, there is an edge e = {i, j} with e \u2229S = \u2205. This contradicts the fact that there is a path (ve, v, x) in G\u2032[F][V1] with v \u2208VG. It remains to show that |S| \u2264k. As F contains an edge {ve, v} with v \u2208VG for every e \u2208E, |S| = |F \u2229{{vi, x} | i \u2208V }| \u2264k\u2032 \u2212(|F \u2032| + m) = k, and the claim follows. Additionally, we have the following kernelization lower bound for 2-Diam GBP. Proposition 34. Unless NP \u2286coNP / poly, 2-Diam GBP admits no problem kernel of size polynomial in k. Construction 8. Let I = (U, F, k) with U = {u1, . . . , un} and F = {F1, . . . , Fm} be an instance of Hitting Set. Construct an instance I\u2032 := (G\u2032, H, k\u2032) with k\u2032 = n + \ufffdn 2 \ufffd + k as follows (see Figure 9 for an illustration). Let V := VF \u222aVU \u222a{x}, where VF := {",
    "paper_type": "method",
    "attri": {
        "background": "This paper addresses the issue of habitat fragmentation caused by human-made obstacles and the need for effective wildlife crossings, specifically green bridges, to facilitate safe animal movement. Previous methods have struggled to optimize the placement of these crossings, necessitating a new approach that combines computational sustainability with algorithmic efficiency.",
        "problem": {
            "definition": "The problem involves determining the optimal placement of green bridges in a graph that represents wildlife habitats, ensuring that these structures connect various animal habitats while minimizing costs.",
            "key obstacle": "Existing methods fail to provide efficient solutions for the placement of green bridges due to the complexity of connectivity requirements and varying data quality regarding animal habitats."
        },
        "idea": {
            "intuition": "The proposed idea stems from the need to balance connectivity requirements with the cost of constructing green bridges, inspired by the challenges faced in real-world wildlife conservation efforts.",
            "opinion": "The method involves modeling the problem as a graph and formulating decision problems that focus on connecting habitats with minimal edge costs, thereby enhancing wildlife movement.",
            "innovation": "The innovation lies in the introduction of three distinct decision problems that address varying degrees of connectivity requirements, each with its own computational complexity analysis."
        },
        "method": {
            "method name": "Green Bridges Placement",
            "method abbreviation": "GBP",
            "method definition": "GBP seeks to find a subset of edges in a graph that connects specified habitat vertices while adhering to specific connectivity constraints.",
            "method description": "The method employs graph theory to model wildlife habitats and their connections, utilizing computational algorithms to derive optimal solutions.",
            "method steps": [
                "Model the habitats and potential bridge locations as a graph.",
                "Define the connectivity requirements for each animal species.",
                "Develop algorithms to assess the feasibility of various edge subsets.",
                "Optimize the edge subset to minimize costs while ensuring adequate connectivity."
            ],
            "principle": "The effectiveness of GBP is based on graph connectivity principles, ensuring that selected edges facilitate necessary habitat connections while adhering to defined constraints."
        },
        "experiments": {
            "evaluation setting": "The experiments were conducted on various graph structures representing wildlife habitats, with comparisons made against baseline methods for green bridge placement.",
            "evaluation method": "Performance was assessed based on the number of edges used, cost efficiency, and the ability to meet connectivity requirements for different species."
        },
        "conclusion": "The proposed GBP method demonstrates significant improvements in optimizing green bridge placements, effectively addressing the challenges of habitat connectivity while minimizing costs.",
        "discussion": {
            "advantage": "GBP offers a structured approach to wildlife corridor construction that is adaptable to varying habitat configurations and connectivity needs.",
            "limitation": "The method may face challenges in scenarios with highly fragmented habitats or insufficient data quality regarding animal movement patterns.",
            "future work": "Future research should explore the integration of real-time data on animal movements and habitat changes to refine the GBP method further."
        },
        "other info": {
            "supported by": "DFG, project TORE (NI/369-18)",
            "keywords": [
                "wildlife crossings",
                "computational sustainability",
                "connected subgraphs",
                "NP-hardness",
                "parameterized algorithmics"
            ]
        }
    },
    "mount_outline": [
        {
            "section number": "2.1",
            "key information": "Define algorithmic bias, ethical AI, model interpretability, and responsible AI."
        },
        {
            "section number": "3.1",
            "key information": "The problem involves determining the optimal placement of green bridges in a graph that represents wildlife habitats, ensuring that these structures connect various animal habitats while minimizing costs."
        },
        {
            "section number": "3.2",
            "key information": "Existing methods fail to provide efficient solutions for the placement of green bridges due to the complexity of connectivity requirements and varying data quality regarding animal habitats."
        },
        {
            "section number": "4.1",
            "key information": "The effectiveness of GBP is based on graph connectivity principles, ensuring that selected edges facilitate necessary habitat connections while adhering to defined constraints."
        },
        {
            "section number": "6.2",
            "key information": "The method may face challenges in scenarios with highly fragmented habitats or insufficient data quality regarding animal movement patterns."
        },
        {
            "section number": "8.1",
            "key information": "Future research should explore the integration of real-time data on animal movements and habitat changes to refine the GBP method further."
        }
    ],
    "similarity_score": 0.576247422048016,
    "image": null,
    "path": "/home/dany/codes/autosurvey/outputs/2025-01-15-0337_algor/papers/Placing Green Bridges Optimally, with a Multivariate Analysis.json"
}